{
apiVersion: "1.0"
-apis: [
-{
path: "/dedicatedCloud"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "iamTags"
dataType: "map[string][]iam.resource.TagFilter"
paramType: "query"
required: false
description: "Filter resources on IAM tags"
}
]
responseType: "string[]"
noAuthentication: false
description: "List VMware on OVHcloud infrastructures"
-iamActions: [
-{
name: "pccVMware:apiovh:get"
required: true
}
]
}
]
description: "Operations about the PCC service"
}
-{
path: "/dedicatedCloud/commercialRange"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
parameters: [ ]
responseType: "string[]"
noAuthentication: true
description: "List commercial ranges"
}
]
description: "List the dedicatedCloud.CommercialRange objects"
}
-{
path: "/dedicatedCloud/commercialRange/{commercialRangeName}"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "commercialRangeName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "The name of this commercial range"
}
]
responseType: "dedicatedCloud.CommercialRange"
noAuthentication: true
description: "Get commercial range"
}
]
description: "Commercial ranges"
}
-{
path: "/dedicatedCloud/location"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
parameters: [ ]
responseType: "string[]"
noAuthentication: false
description: "List hosting locations"
-iamActions: [
-{
name: "account:apiovh:pccVMware/location/get"
required: true
}
]
}
]
description: "List the dedicatedCloud.PccZone objects"
}
-{
path: "/dedicatedCloud/location/{pccZone}"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "pccZone"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Name of pccZone"
}
]
responseType: "dedicatedCloud.PccZone"
noAuthentication: false
description: "Get hosting location"
-iamActions: [
-{
name: "account:apiovh:pccVMware/location/get"
required: true
}
]
}
]
description: "Hosting location"
}
-{
path: "/dedicatedCloud/location/{pccZone}/hostProfile"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "pccZone"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Name of pccZone"
}
]
responseType: "long[]"
noAuthentication: false
description: "List host profiles on hosting location"
-iamActions: [
-{
name: "account:apiovh:pccVMware/location/hostProfile/get"
required: true
}
]
}
]
description: "List the dedicatedCloud.HostProfile objects"
}
-{
path: "/dedicatedCloud/location/{pccZone}/hostProfile/{id}"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "id"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of Host profile"
}
-{
name: "pccZone"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Name of pccZone"
}
]
responseType: "dedicatedCloud.HostProfile"
noAuthentication: false
description: "Get host profile"
-iamActions: [
-{
name: "account:apiovh:pccVMware/location/hostProfile/get"
required: true
}
]
}
]
description: "Host profile"
}
-{
path: "/dedicatedCloud/location/{pccZone}/hypervisor"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "pccZone"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Name of pccZone"
}
]
responseType: "string[]"
noAuthentication: false
description: "List hypervisor versions on hosting location"
-iamActions: [
-{
name: "account:apiovh:pccVMware/location/hypervisor/get"
required: true
}
]
}
]
description: "List the dedicatedCloud.Os objects"
}
-{
path: "/dedicatedCloud/location/{pccZone}/hypervisor/{shortName}"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "pccZone"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Name of pccZone"
}
-{
name: "shortName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Short name of hypervisor"
}
]
responseType: "dedicatedCloud.Os"
noAuthentication: false
description: "Get hypervisor"
-iamActions: [
-{
name: "account:apiovh:pccVMware/location/hypervisor/get"
required: true
}
]
}
]
description: "Hypervisor"
}
-{
path: "/dedicatedCloud/location/{pccZone}/stock/host"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "minYear"
dataType: "long"
paramType: "query"
fullType: "long"
required: false
description: "Minimum reference year"
}
-{
name: "pccZone"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Name of pccZone"
}
]
responseType: "dedicatedCloud.HostStockProfile[]"
noAuthentication: false
description: "Get hosts stock"
-iamActions: [
-{
name: "account:apiovh:pccVMware/location/stock/host/get"
required: true
}
]
}
]
description: "host operations"
}
-{
path: "/dedicatedCloud/location/{pccZone}/stock/pcc"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "pccZone"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Name of pccZone"
}
]
responseType: "dedicatedCloud.PccStockProfile[]"
noAuthentication: false
description: "Get hypervisors stock"
-iamActions: [
-{
name: "account:apiovh:pccVMware/location/stock/pcc/get"
required: true
}
]
}
]
description: "pcc operations"
}
-{
path: "/dedicatedCloud/location/{pccZone}/stock/zpool"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "pccZone"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Name of pccZone"
}
-{
name: "profileFilter"
dataType: "string"
paramType: "query"
fullType: "string"
required: false
description: "Profile filter"
}
]
responseType: "dedicatedCloud.ZpoolStockProfile[]"
noAuthentication: false
description: "Get datastores stock"
-iamActions: [
-{
name: "account:apiovh:pccVMware/location/stock/zpool/get"
required: true
}
]
}
]
description: "zpool operations"
}
-{
path: "/dedicatedCloud/{serviceName}"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.dedicatedCloudWithIAM"
noAuthentication: false
description: "Get VMware on OVHcloud"
-iamActions: [
-{
name: "pccVMware:apiovh:get"
required: true
}
]
}
-{
-apiStatus: {
description: "Deprecated, will be removed"
value: "DEPRECATED"
deletionDate: "2019-03-10T00:00:00+01:00"
deprecatedDate: "2019-01-10T00:00:00+01:00"
replacement: "/dedicatedCloud/{serviceName}/changeProperties"
}
httpMethod: "PUT"
-parameters: [
-{
dataType: "dedicatedCloud.dedicatedCloud"
paramType: "body"
fullType: "dedicatedCloud.dedicatedCloud"
required: true
description: "New object properties"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Update VMware on OVHcloud"
-iamActions: [
-{
name: "pccVMware:apiovh:put"
required: true
}
]
}
]
description: "VMware on OVHcloud"
}
-{
path: "/dedicatedCloud/{serviceName}/allowedNetwork"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "long[]"
noAuthentication: false
description: "List networks allowed on infrastructure firewall"
-iamActions: [
-{
name: "pccVMware:apiovh:allowedNetwork/get"
required: true
}
]
}
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "description"
dataType: "string"
paramType: "body"
fullType: "string"
required: false
description: "Description for your ACL"
}
-{
name: "network"
dataType: "ipv4Block"
paramType: "body"
fullType: "ipv4Block"
required: true
description: "Network name, e.g. 123.100.200.0/32"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Create network allowed on infrastructure firewall"
-iamActions: [
-{
name: "pccVMware:apiovh:allowedNetwork/create"
required: true
}
]
}
]
description: "List the dedicatedCloud.AllowedNetwork objects"
}
-{
path: "/dedicatedCloud/{serviceName}/allowedNetwork/{networkAccessId}"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "DELETE"
-parameters: [
-{
name: "networkAccessId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: ""
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Remove network allowed on infrastructure firewall"
-iamActions: [
-{
name: "pccVMware:apiovh:allowedNetwork/delete"
required: true
}
]
}
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "networkAccessId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: ""
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.AllowedNetwork"
noAuthentication: false
description: "Get network allowed on infrastructure firewall"
-iamActions: [
-{
name: "pccVMware:apiovh:allowedNetwork/get"
required: true
}
]
}
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "PUT"
-parameters: [
-{
dataType: "dedicatedCloud.AllowedNetwork"
paramType: "body"
fullType: "dedicatedCloud.AllowedNetwork"
required: true
description: "New object properties"
}
-{
name: "networkAccessId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: ""
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Update network allowed on infrastructure firewall"
-iamActions: [
-{
name: "pccVMware:apiovh:allowedNetwork/edit"
required: true
}
]
}
]
description: "Network allowed on infrastructure firewall"
}
-{
path: "/dedicatedCloud/{serviceName}/allowedNetwork/{networkAccessId}/task"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "name"
dataType: "string"
paramType: "query"
fullType: "string"
required: false
description: "Filter the value of name property (like)"
}
-{
name: "networkAccessId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: ""
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "state"
dataType: "dedicatedCloud.TaskStateEnum"
paramType: "query"
fullType: "dedicatedCloud.TaskStateEnum"
required: false
description: "Filter the value of state property (=)"
}
]
responseType: "long[]"
noAuthentication: false
description: "List operations associated to a network allowed on infrastructure firewall"
-iamActions: [
-{
name: "pccVMware:apiovh:allowedNetwork/task/get"
required: true
}
]
}
]
description: "List the dedicatedCloud.Task objects"
}
-{
path: "/dedicatedCloud/{serviceName}/allowedNetwork/{networkAccessId}/task/{taskId}"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "networkAccessId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: ""
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "taskId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Task id"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Get operation"
-iamActions: [
-{
name: "pccVMware:apiovh:allowedNetwork/task/get"
required: true
}
]
}
]
description: "Operation"
}
-{
path: "/dedicatedCloud/{serviceName}/allowedNetwork/{networkAccessId}/task/{taskId}/changeMaintenanceExecutionDate"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "executionDate"
dataType: "datetime"
paramType: "body"
fullType: "datetime"
required: true
description: "The new execution date"
}
-{
name: "networkAccessId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: ""
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "taskId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Task id"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Change the execution date of a maintenance operation"
-iamActions: [
-{
name: "pccVMware:apiovh:allowedNetwork/task/changeMaintenanceExecutionDate"
required: true
}
]
}
]
description: "changeMaintenanceExecutionDate operations"
}
-{
path: "/dedicatedCloud/{serviceName}/allowedNetwork/{networkAccessId}/task/{taskId}/resetTaskState"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "networkAccessId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: ""
}
-{
name: "reason"
dataType: "string"
paramType: "body"
fullType: "string"
required: true
description: "Reason of task restart"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "taskId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Task id"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Relaunch operation currently in error state"
-iamActions: [
-{
name: "pccVMware:apiovh:allowedNetwork/task/resetTaskState"
required: true
}
]
}
]
description: "resetTaskState operations"
}
-{
path: "/dedicatedCloud/{serviceName}/backupRepository"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "long[]"
noAuthentication: false
description: "List backup repositories"
-iamActions: [
-{
name: "pccVMware:apiovh:backupRepository/get"
required: true
}
]
}
]
description: "List the dedicatedCloud.BackupRepository objects"
}
-{
path: "/dedicatedCloud/{serviceName}/backupRepository/{repositoryId}"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "repositoryId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Repository Id"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.BackupRepository"
noAuthentication: false
description: "Get backup repository"
-iamActions: [
-{
name: "pccVMware:apiovh:backupRepository/get"
required: true
}
]
}
]
description: "Backup repository"
}
-{
path: "/dedicatedCloud/{serviceName}/canDeployNsxtEdgesOnGlobalDatastores"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "count"
dataType: "long"
paramType: "query"
fullType: "long"
required: false
description: "Number of edges wanted"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "size"
dataType: "dedicatedCloud.nsxt.NsxtEdgeSizeEnum"
paramType: "query"
fullType: "dedicatedCloud.nsxt.NsxtEdgeSizeEnum"
required: false
description: "Size of NSX-T edge (default to MEDIUM)"
}
]
responseType: "boolean"
noAuthentication: false
description: "Check if global datastore have enough free space to host NSX-T edges"
-iamActions: [
-{
name: "pccVMware:apiovh:canDeployNsxtEdgesOnGlobalDatastores"
required: true
}
]
}
]
description: "canDeployNsxtEdgesOnGlobalDatastores operations"
}
-{
path: "/dedicatedCloud/{serviceName}/capabilities"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Capabilities"
noAuthentication: false
description: "Get available features"
-iamActions: [
-{
name: "pccVMware:apiovh:capabilities/get"
required: true
}
]
}
]
description: "Available features"
}
-{
path: "/dedicatedCloud/{serviceName}/changeContact"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "contactAdmin"
dataType: "string"
paramType: "body"
fullType: "coreTypes.AccountId:string"
required: false
description: "The contact to set as admin contact"
}
-{
name: "contactBilling"
dataType: "string"
paramType: "body"
fullType: "coreTypes.AccountId:string"
required: false
description: "The contact to set as billing contact"
}
-{
name: "contactTech"
dataType: "string"
paramType: "body"
fullType: "coreTypes.AccountId:string"
required: false
description: "The contact to set as tech contact"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "long[]"
noAuthentication: false
description: "Launch a contact change procedure"
-iamActions: [
-{
name: "pccVMware:apiovh:changeContact"
required: true
}
]
}
]
description: "Change the contacts of this service"
}
-{
path: "/dedicatedCloud/{serviceName}/changeProperties"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "description"
dataType: "string"
paramType: "body"
fullType: "string"
required: false
description: "Description of your VMware on OVHcloud"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "sslV3"
dataType: "boolean"
paramType: "body"
fullType: "boolean"
required: false
description: "Enable SSL v3 support. Warning: this option is not recommended as it was recognized as a security breach. If this is enabled, we advise you to enable the filtered User access policy"
}
-{
name: "userAccessPolicy"
dataType: "dedicatedCloud.UserAccessPolicyEnum"
paramType: "body"
fullType: "dedicatedCloud.UserAccessPolicyEnum"
required: false
description: "Access policy of your VMware on OVHcloud: opened to each IP or filtered"
}
-{
name: "userLimitConcurrentSession"
dataType: "long"
paramType: "body"
fullType: "long"
required: false
description: "The maximum amount of connected users allowed on the VMware on OVHcloud management interface"
}
-{
name: "userLogoutPolicy"
dataType: "dedicatedCloud.UserLogoutPolicyEnum"
paramType: "body"
fullType: "dedicatedCloud.UserLogoutPolicyEnum"
required: false
description: "Logout policy of your VMware on OVHcloud"
}
-{
name: "userSessionTimeout"
dataType: "long"
paramType: "body"
fullType: "long"
required: false
description: "The timeout (in seconds) for the user sessions on the VMware on OVHcloud management interface. 0 value disable the timeout"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Update VMware on OVHcloud"
-iamActions: [
-{
name: "pccVMware:apiovh:changeProperties"
required: true
}
]
}
]
description: "changeProperties operations"
}
-{
path: "/dedicatedCloud/{serviceName}/commercialRange/compliance"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.compliantRanges[]"
noAuthentication: false
description: "Get compliant commercial ranges"
-iamActions: [
-{
name: "pccVMware:apiovh:commercialRange/compliance/get"
required: true
}
]
}
]
description: "compliance operations"
}
-{
path: "/dedicatedCloud/{serviceName}/commercialRange/orderable"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "string[]"
noAuthentication: false
description: "Get orderable commercial ranges"
-iamActions: [
-{
name: "pccVMware:apiovh:commercialRange/orderable/get"
required: true
}
]
}
]
description: "orderable operations"
}
-{
path: "/dedicatedCloud/{serviceName}/confirmTermination"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "commentary"
dataType: "string"
paramType: "body"
fullType: "string"
required: false
description: "Commentary about your termination request"
}
-{
name: "futureUse"
dataType: "service.TerminationFutureUseEnum"
paramType: "body"
fullType: "service.TerminationFutureUseEnum"
required: false
description: "What next after your termination request"
}
-{
name: "reason"
dataType: "service.TerminationReasonEnum"
paramType: "body"
fullType: "service.TerminationReasonEnum"
required: false
description: "Reason of your termination request"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "token"
dataType: "string"
paramType: "body"
fullType: "string"
required: true
description: "The termination token sent by email to the admin contact"
}
]
responseType: "string"
noAuthentication: false
description: "Confirm service termination"
-iamActions: [
-{
name: "pccVMware:apiovh:confirmTermination"
required: true
}
]
}
]
description: "Confirm service termination"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "long[]"
noAuthentication: false
description: "List virtual datacenters"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/get"
required: true
}
]
}
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "commercialRangeName"
dataType: "string"
paramType: "body"
fullType: "string"
required: true
description: "The commercial range of this new datacenter. You can see what commercial ranges are orderable on this API section : /dedicatedCloud/commercialRange/"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "vrackName"
dataType: "string"
paramType: "body"
fullType: "string"
required: false
description: "Name of the Vrack link to the new datacenter."
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Create virtual datacenter"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/create"
required: true
}
]
}
]
description: "List the dedicatedCloud.Datacenter objects"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "DELETE"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Remove virtual datacenter"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/delete"
required: true
}
]
}
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Datacenter"
noAuthentication: false
description: "Get virtual datacenter"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/get"
required: true
}
]
}
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "PUT"
-parameters: [
-{
dataType: "dedicatedCloud.Datacenter"
paramType: "body"
fullType: "dedicatedCloud.Datacenter"
required: true
description: "New object properties"
}
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Update virtual datacenter"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/edit"
required: true
}
]
}
]
description: "Virtual datacenter"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/backup"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Backup"
noAuthentication: false
description: "Get backup option"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/backup/get"
required: true
}
]
}
]
description: "Backup option"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/backup/batchRestore"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "backupJobName"
dataType: "string"
paramType: "body"
fullType: "string"
required: false
description: "The backup job name pcc-XXX-XXX-XXX-XXX_vm-XXX if you want to restore one single virtual machine. It can be retrieved in the report sent by generateReport"
}
-{
name: "backupRepositoryName"
dataType: "string"
paramType: "body"
fullType: "string"
required: true
description: "The backup files location name bkp-XXXXX, it can be retrieved in the report sent by generateReport"
}
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Restore from last point for each backup job"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/backup/batchRestore"
required: true
}
]
}
]
description: "batchRestore operations"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/backup/canOptimizeProxies"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.backup.OptimizeProxies"
noAuthentication: false
description: "Generate recommendations for backup proxies optimization"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/backup/canOptimizeProxies/get"
required: true
}
]
}
]
description: "canOptimizeProxies operations"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/backup/changeProperties"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "backupDurationInReport"
dataType: "boolean"
paramType: "body"
fullType: "boolean"
required: false
description: "Deprecated - Duration on email report"
}
-{
name: "backupOffer"
dataType: "dedicatedCloud.backup.OfferTypeEnum"
paramType: "body"
fullType: "dedicatedCloud.backup.OfferTypeEnum"
required: true
description: "Backup offer type"
}
-{
name: "backupSizeInReport"
dataType: "boolean"
paramType: "body"
fullType: "boolean"
required: false
description: "Deprecated - Backup size on day on email report"
}
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "diskSizeInReport"
dataType: "boolean"
paramType: "body"
fullType: "boolean"
required: false
description: "Deprecated - Disk size on mail report"
}
-{
name: "fullDayInReport"
dataType: "boolean"
paramType: "body"
fullType: "boolean"
required: false
description: "Deprecated - Full day on mail report"
}
-{
name: "mailAddress"
dataType: "string"
paramType: "body"
fullType: "string"
required: false
description: "Unique additional email address for backup daily report"
}
-{
name: "restorePointInReport"
dataType: "boolean"
paramType: "body"
fullType: "boolean"
required: false
description: "Deprecated - RestorePoint number on mail report"
}
-{
name: "scheduleHour"
dataType: "time"
paramType: "body"
fullType: "time"
required: false
description: "Schedule hour for start backup. UTC Timezone"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Update backup option"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/backup/changeProperties"
required: true
}
]
}
]
description: "changeProperties operations"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/backup/disable"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Disable backup option"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/backup/disable"
required: true
}
]
}
]
description: "disable operations"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/backup/enable"
-operations: [
-{
-apiStatus: {
description: "Deprecated, will be removed"
value: "DEPRECATED"
deletionDate: "2019-07-01T00:00:00+01:00"
deprecatedDate: "2019-06-01T00:00:00+01:00"
replacement: "/order/cart/{cartId}/privateCloud"
}
httpMethod: "POST"
-parameters: [
-{
name: "backupOffer"
dataType: "dedicatedCloud.backup.OfferTypeEnum"
paramType: "body"
fullType: "dedicatedCloud.backup.OfferTypeEnum"
required: false
description: "Backup offer type"
}
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Enable backup option"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/backup/enable"
required: true
}
]
}
]
description: "enable operations"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/backup/generateReport"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Generate email report with all backup information"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/backup/generateReport"
required: true
}
]
}
]
description: "generateReport operations"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/backup/offerCapabilities"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.backup.BackupCapabilities[]"
noAuthentication: false
description: "List backup offer capabilities"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/backup/offerCapabilities/get"
required: true
}
]
}
]
description: "offerCapabilities operations"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/backup/optimizeProxies"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Optimize number of backup proxies"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/backup/optimizeProxies"
required: true
}
]
}
]
description: "optimizeProxies operations"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/backupRepository"
-operations: [
-{
-apiStatus: {
description: "Deprecated, will be removed"
value: "DEPRECATED"
deletionDate: "2023-07-01T00:00:00+01:00"
deprecatedDate: "2022-10-01T00:00:00+01:00"
replacement: "/dedicatedCloud/{serviceName}/backupRepository"
}
httpMethod: "GET"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "long[]"
noAuthentication: false
description: "List backup repositories in virtual datacenter"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/backupRepository/get"
required: true
}
]
}
]
description: "List the dedicatedCloud.BackupRepository objects"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/backupRepository/{repositoryId}"
-operations: [
-{
-apiStatus: {
description: "Deprecated, will be removed"
value: "DEPRECATED"
deletionDate: "2023-07-01T00:00:00+01:00"
deprecatedDate: "2022-10-01T00:00:00+01:00"
replacement: "/dedicatedCloud/{serviceName}/backupRepository/{repositoryId}"
}
httpMethod: "GET"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "repositoryId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Repository Id"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.BackupRepository"
noAuthentication: false
description: "Get backup repository"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/backupRepository/get"
required: true
}
]
}
]
description: "Backup repository"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/checkBackupJobs"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Check if backup jobs are correctly set in virtual datacenter (when vms have been moved to another virtual datacenter)"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/checkBackupJobs"
required: true
}
]
}
]
description: "checkBackupJobs operations"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/cluster"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "long[]"
noAuthentication: false
description: "List clusters within virtual datacenter"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/cluster/get"
required: true
}
]
}
]
description: "List the dedicatedCloud.Cluster objects"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/cluster/{clusterId}"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "clusterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the cluster"
}
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Cluster"
noAuthentication: false
description: "Get cluster"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/cluster/get"
required: true
}
]
}
]
description: "Cluster"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/cluster/{clusterId}/nsxt"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "DELETE"
-parameters: [
-{
name: "clusterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the cluster"
}
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Unconfigure NSX-T on cluster"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/cluster/nsxt/delete"
required: true
}
]
}
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "clusterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the cluster"
}
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Configure NSX-T on cluster"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/cluster/nsxt/create"
required: true
}
]
}
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "PUT"
-parameters: [
-{
name: "clusterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the cluster"
}
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Update NSX-T configuration on cluster"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/cluster/nsxt/edit"
required: true
}
]
}
]
description: "nsxt operations"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/disasterRecovery/zerto/disable"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "secondaryDatacenterId"
dataType: "long"
paramType: "body"
fullType: "long"
required: true
description: "Your secondary datacenter id"
}
-{
name: "secondaryServiceName"
dataType: "string"
paramType: "body"
fullType: "string"
required: true
description: "Your secondary dedicatedCloud"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Disable Zerto disaster recovery between two VMware on OVHcloud infrastructures"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/disasterRecovery/zerto/disable"
required: true
}
]
}
]
description: "disable operations"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/disasterRecovery/zerto/enable"
-operations: [
-{
-apiStatus: {
description: "Deprecated, will be removed"
value: "DEPRECATED"
deletionDate: "2019-07-01T00:00:00+01:00"
deprecatedDate: "2019-06-01T00:00:00+01:00"
replacement: "/order/cart/{cartId}/privateCloud"
}
httpMethod: "POST"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "primaryEndpointIp"
dataType: "ip"
paramType: "body"
fullType: "ip"
required: true
description: "Your primary OVH VMware on OVHcloud public IP for the secured replication data tunnel endpoint"
}
-{
name: "secondaryDatacenterId"
dataType: "long"
paramType: "body"
fullType: "long"
required: true
description: "Your secondary datacenter id"
}
-{
name: "secondaryEndpointIp"
dataType: "ip"
paramType: "body"
fullType: "ip"
required: true
description: "Your secondary OVH VMware on OVHcloud public IP for the secured replication data tunnel endpoint"
}
-{
name: "secondaryServiceName"
dataType: "string"
paramType: "body"
fullType: "string"
required: true
description: "Your secondary OVH VMware on OVHcloud"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Enable Zerto disaster recovery between two VMware on OVHcloud infrastructures"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/disasterRecovery/zerto/enable"
required: true
}
]
}
]
description: "enable operations"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/disasterRecovery/zerto/endMigration"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Unlink migration source virtual datacenter from Zerto disaster recovery"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/disasterRecovery/zerto/endMigration"
required: true
}
]
}
]
description: "endMigration operations"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/disasterRecovery/zerto/endpointPublicIp"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "newEndpointPublicIp"
dataType: "ip"
paramType: "body"
fullType: "ip"
required: true
description: "Your new public IP for the secured replication data tunnel endpoint"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Change the IP address used by Zerto disaster recovery endpoint for public network access"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/disasterRecovery/zerto/endpointPublicIp"
required: true
}
]
}
]
description: "endpointPublicIp operations"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/disasterRecovery/zerto/remoteSites"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "DELETE"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "id"
dataType: "long"
paramType: "query"
fullType: "long"
required: true
description: "The id number of the network to remove (as returned by a GET call)"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Remove Zerto disaster recovery remote site"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/disasterRecovery/zerto/remoteSites/delete"
description: "Remove Zerto disaster recovery remote site"
required: true
}
]
}
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.disasterRecovery.ZertoRemoteVra[]"
noAuthentication: false
description: "List Zerto disaster recovery remote sites"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/disasterRecovery/zerto/remoteSites/get"
description: "List Zerto disaster recovery allowed remote sites"
required: true
}
]
}
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "label"
dataType: "string"
paramType: "body"
fullType: "string"
required: true
description: "The name for this connection"
}
-{
name: "preSharedKey"
dataType: "password"
paramType: "body"
fullType: "password"
required: true
description: "Pre-Shared Key to secure data transfer between both sites"
}
-{
name: "remoteEndpointPublicIp"
dataType: "ipv4"
paramType: "body"
fullType: "ipv4"
required: true
description: "Your onsite endpoint public IP for the secured replication data tunnel"
}
-{
name: "remoteVraNetwork"
dataType: "ipv4Block"
paramType: "body"
fullType: "ipv4Block"
required: true
description: "Internal zerto subnet of your onsite infrastructure (ip/cidr)"
}
-{
name: "remoteZvmInternalIp"
dataType: "ipv4"
paramType: "body"
fullType: "ipv4"
required: true
description: "Internal ZVM ip of your onsite infrastructure"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Create Zerto disaster recovery remote site on VPN endpoint"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/disasterRecovery/zerto/remoteSites/create"
description: "Create Zerto disaster recovery remote site on VPN endpoint"
required: true
}
]
}
]
description: "remoteSites operations"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/disasterRecovery/zerto/startMigration"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Link migration target virtual datacenter to Zerto disaster recovery"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/disasterRecovery/zerto/startMigration"
required: true
}
]
}
]
description: "startMigration operations"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/disasterRecovery/zerto/status"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.disasterRecovery.Profile"
noAuthentication: false
description: "Get Zerto disaster recovery option status"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/disasterRecovery/zerto/status/get"
required: true
}
]
}
]
description: "status operations"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/disasterRecovery/zerto/usageReport"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "month"
dataType: "long"
paramType: "query"
fullType: "long"
required: true
description: "Billing month"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "year"
dataType: "long"
paramType: "query"
fullType: "long"
required: true
description: "Billing year"
}
]
responseType: "dedicatedCloud.disasterRecovery.ZertoProtectedVm[]"
noAuthentication: false
description: "List Zerto disaster recovery protected virtual machines"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/disasterRecovery/zerto/usageReport/get"
required: true
}
]
}
]
description: "usageReport operations"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/disasterRecovery/zerto/vraResources"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.disasterRecovery.ZertoVrasResource[]"
noAuthentication: false
description: "Lists all Zerto VRAs along with their allocated CPU and RAM resources"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/disasterRecovery/zerto/vraResources/get"
description: "List Zerto VRAs and their resource allocations"
required: true
}
]
}
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "resourcesSize"
dataType: "dedicatedCloud.disasterRecovery.ZertoVraResourceSizeEnum"
paramType: "body"
fullType: "dedicatedCloud.disasterRecovery.ZertoVraResourceSizeEnum"
required: true
description: "The desired CPU and RAM configuration for the VRA"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "vmId"
dataType: "long"
paramType: "body"
fullType: "long"
required: true
description: "The unique identifier of the VRA vm"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Updates the CPU and RAM resources allocated to a specified Zerto VRA"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/disasterRecovery/zerto/vraResources/create"
description: "Updates Zerto VRA resources"
required: true
}
]
}
]
description: "vraResources operations"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/disasterRecovery/zertoSingle/configureVpn"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "preSharedKey"
dataType: "password"
paramType: "body"
fullType: "password"
required: true
description: "Pre-Shared Key to secure data transfer between both sites"
}
-{
name: "remoteEndpointInternalIp"
dataType: "ipv4"
paramType: "body"
fullType: "ipv4"
required: true
description: "Your onsite endpoint internal IP for the secured replication data tunnel"
}
-{
name: "remoteEndpointPublicIp"
dataType: "ipv4"
paramType: "body"
fullType: "ipv4"
required: true
description: "Your onsite endpoint public IP for the secured replication data tunnel"
}
-{
name: "remoteVraNetwork"
dataType: "ipv4Block"
paramType: "body"
fullType: "ipv4Block"
required: false
description: "Internal zerto subnet of your onsite infrastructure (ip/cidr)"
}
-{
name: "remoteZvmInternalIp"
dataType: "ipv4"
paramType: "body"
fullType: "ipv4"
required: true
description: "Internal ZVM ip of your onsite infrastructure"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Configure VPN for Zerto disaster recovery between VMware on OVHcloud infrastructure and onsite infrastructure"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/disasterRecovery/zertoSingle/configureVpn"
required: true
}
]
}
]
description: "configureVpn operations"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/disasterRecovery/zertoSingle/defaultLocalVraNetwork"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "ipv4Block"
noAuthentication: false
description: "Get Zerto disaster recovery default suggested local VRA subnet"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/disasterRecovery/zertoSingle/defaultLocalVraNetwork/get"
required: true
}
]
}
]
description: "defaultLocalVraNetwork operations"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/disasterRecovery/zertoSingle/disable"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Disable Zerto disaster recovery between VMware on OVHcloud infrastructure and onsite infrastructure"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/disasterRecovery/zertoSingle/disable"
required: true
}
]
}
]
description: "disable operations"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/disasterRecovery/zertoSingle/enable"
-operations: [
-{
-apiStatus: {
description: "Deprecated, will be removed"
value: "DEPRECATED"
deletionDate: "2019-07-01T00:00:00+01:00"
deprecatedDate: "2019-06-01T00:00:00+01:00"
replacement: "/order/cart/{cartId}/privateCloud"
}
httpMethod: "POST"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "localVraNetwork"
dataType: "ipBlock"
paramType: "body"
fullType: "ipBlock"
required: true
description: "Internal zerto subnet for your OVH VMware on OVHcloud (ip/cidr)"
}
-{
name: "ovhEndpointIp"
dataType: "ip"
paramType: "body"
fullType: "ip"
required: true
description: "Your OVH VMware on OVHcloud public IP for the secured replication data tunnel endpoint"
}
-{
name: "remoteVraNetwork"
dataType: "ipBlock"
paramType: "body"
fullType: "ipBlock"
required: true
description: "Internal zerto subnet of your onsite infrastructure (ip/cidr)"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Enable Zerto disaster recovery between VMware on OVHcloud infrastructure and onsite infrastructure"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/disasterRecovery/zertoSingle/enable"
required: true
}
]
}
]
description: "enable operations"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/disasterRecovery/zertoSingle/endpointPublicIp"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "newEndpointPublicIp"
dataType: "ip"
paramType: "body"
fullType: "ip"
required: true
description: "Your new public IP on your VMware on OVHcloud for the secured replication data tunnel endpoint"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Change the IP address used by Zerto disaster recovery endpoint for public network access"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/disasterRecovery/zertoSingle/endpointPublicIp"
required: true
}
]
}
]
description: "endpointPublicIp operations"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/disasterRecovery/zertoSingle/remoteSites"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "DELETE"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "id"
dataType: "long"
paramType: "query"
fullType: "long"
required: true
description: "The id number of the network to remove (as returned by a GET call)"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Remove Zerto disaster recovery remote site"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/disasterRecovery/zertoSingle/remoteSites/delete"
description: "Remove Zerto disaster recovery remote site"
required: true
}
]
}
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.disasterRecovery.ZertoRemoteVra[]"
noAuthentication: false
description: "List Zerto disaster recovery remote sites"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/disasterRecovery/zertoSingle/remoteSites/get"
description: "List Zerto disaster recovery allowed remote sites"
required: true
}
]
}
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "label"
dataType: "string"
paramType: "body"
fullType: "string"
required: true
description: "The name for this connection"
}
-{
name: "preSharedKey"
dataType: "password"
paramType: "body"
fullType: "password"
required: true
description: "Pre-Shared Key to secure data transfer between both sites"
}
-{
name: "remoteEndpointPublicIp"
dataType: "ipv4"
paramType: "body"
fullType: "ipv4"
required: true
description: "Your onsite endpoint public IP for the secured replication data tunnel"
}
-{
name: "remoteVraNetwork"
dataType: "ipv4Block"
paramType: "body"
fullType: "ipv4Block"
required: true
description: "Internal zerto subnet of your onsite infrastructure (ip/cidr)"
}
-{
name: "remoteZvmInternalIp"
dataType: "ipv4"
paramType: "body"
fullType: "ipv4"
required: true
description: "Internal ZVM ip of your onsite infrastructure"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Create Zerto disaster recovery remote site on VPN endpoint"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/disasterRecovery/zertoSingle/remoteSites/create"
description: "Create Zerto disaster recovery remote site on VPN endpoint"
required: true
}
]
}
]
description: "remoteSites operations"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/disasterRecovery/zertoSingle/requestPairingToken"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Request Zerto disaster recovery pairing token for onsite infrastructure"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/disasterRecovery/zertoSingle/requestPairingToken"
required: true
}
]
}
]
description: "requestPairingToken operations"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/disasterRecovery/zertoSingle/vraResources"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.disasterRecovery.ZertoVrasResource[]"
noAuthentication: false
description: "Lists all Zerto VRAs along with their allocated CPU and RAM resources"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/disasterRecovery/zertoSingle/vraResources/get"
description: "List Zerto VRAs and their resource allocations"
required: true
}
]
}
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "resourcesSize"
dataType: "dedicatedCloud.disasterRecovery.ZertoVraResourceSizeEnum"
paramType: "body"
fullType: "dedicatedCloud.disasterRecovery.ZertoVraResourceSizeEnum"
required: true
description: "The desired CPU and RAM configuration for the VRA"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "vmId"
dataType: "long"
paramType: "body"
fullType: "long"
required: true
description: "The unique identifier of the VRA vm"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Updates the CPU and RAM resources allocated to a specified Zerto VRA"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/disasterRecovery/zertoSingle/vraResources/create"
description: "Updates Zerto VRA resources"
required: true
}
]
}
]
description: "vraResources operations"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/filer"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "long[]"
noAuthentication: false
description: "List datastores in virtual datacenter"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/filer/get"
required: true
}
]
}
]
description: "List the dedicatedCloud.Filer objects"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/filer/{filerId}"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "filerId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Filer Id"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Filer"
noAuthentication: false
description: "Get datastore"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/filer/get"
required: true
}
]
}
]
description: "Datastore"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/filer/{filerId}/checkGlobalCompatible"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "filerId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Filer Id"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "boolean"
noAuthentication: false
description: "Check ability to convert datastore to global datastore"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/filer/checkGlobalCompatible/get"
required: true
}
]
}
]
description: "checkGlobalCompatible operations"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/filer/{filerId}/convertToGlobal"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "filerId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Filer Id"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Convert datastore to global datastore"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/filer/convertToGlobal"
required: true
}
]
}
]
description: "convertToGlobal operations"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/filer/{filerId}/hourlyConsumption"
-operations: [
-{
-apiStatus: {
description: "Deprecated, will be removed"
value: "DEPRECATED"
deletionDate: "2019-07-01T00:00:00+01:00"
deprecatedDate: "2019-06-01T00:00:00+01:00"
replacement: "/me/consumption/usage/current"
}
httpMethod: "GET"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "filerId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Filer Id"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.filer.HourlyConsumption"
noAuthentication: false
description: "Get datastore hourly consumption"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/filer/hourlyConsumption/get"
required: true
}
]
}
]
description: "hourlyConsumption operations"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/filer/{filerId}/location"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "filerId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Filer Id"
}
-{
name: "node"
dataType: "dedicatedCloud.filer.NodeTypeEnum"
paramType: "query"
fullType: "dedicatedCloud.filer.NodeTypeEnum"
required: false
description: "Filer cluster node used to get location (default value: master)"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.filer.Location"
noAuthentication: false
description: "Get datastore location"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/filer/location/get"
required: true
}
]
}
]
description: "location operations"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/filer/{filerId}/remove"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "filerId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Filer Id"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Remove datastore"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/filer/remove"
required: true
}
]
}
]
description: "remove operations"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/filer/{filerId}/task"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "filerId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Filer Id"
}
-{
name: "name"
dataType: "string"
paramType: "query"
fullType: "string"
required: false
description: "Filter the value of name property (like)"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "state"
dataType: "dedicatedCloud.TaskStateEnum"
paramType: "query"
fullType: "dedicatedCloud.TaskStateEnum"
required: false
description: "Filter the value of state property (=)"
}
]
responseType: "long[]"
noAuthentication: false
description: "List operations associated to datastore"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/filer/task/get"
required: true
}
]
}
]
description: "List the dedicatedCloud.Task objects"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/filer/{filerId}/task/{taskId}"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "filerId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Filer Id"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "taskId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Task id"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Get operation"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/filer/task/get"
required: true
}
]
}
]
description: "Operation"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/filer/{filerId}/task/{taskId}/changeMaintenanceExecutionDate"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "executionDate"
dataType: "datetime"
paramType: "body"
fullType: "datetime"
required: true
description: "The new execution date"
}
-{
name: "filerId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Filer Id"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "taskId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Task id"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Change the execution date of a maintenance operation"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/filer/task/changeMaintenanceExecutionDate"
required: true
}
]
}
]
description: "changeMaintenanceExecutionDate operations"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/filer/{filerId}/task/{taskId}/resetTaskState"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "filerId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Filer Id"
}
-{
name: "reason"
dataType: "string"
paramType: "body"
fullType: "string"
required: true
description: "Reason of task restart"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "taskId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Task id"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Relaunch operation currently in error state"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/filer/task/resetTaskState"
required: true
}
]
}
]
description: "resetTaskState operations"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/host"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "long[]"
noAuthentication: false
description: "List hosts in virtual datacenter"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/host/get"
required: true
}
]
}
]
description: "List the dedicatedCloud.Host objects"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/host/{hostId}"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "hostId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the host"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Host"
noAuthentication: false
description: "Get host"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/host/get"
required: true
}
]
}
]
description: "Host"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/host/{hostId}/addHostSpare"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "hostId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the host"
}
-{
name: "reason"
dataType: "string"
paramType: "body"
fullType: "string"
required: true
description: "Reason of spare add"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Request host replacement"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/host/addHostSpare"
required: true
}
]
}
]
description: "addHostSpare operations"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/host/{hostId}/hourlyConsumption"
-operations: [
-{
-apiStatus: {
description: "Deprecated, will be removed"
value: "DEPRECATED"
deletionDate: "2019-07-01T00:00:00+01:00"
deprecatedDate: "2019-06-01T00:00:00+01:00"
replacement: "/me/consumption/usage/current"
}
httpMethod: "GET"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "hostId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the host"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.host.HourlyConsumption"
noAuthentication: false
description: "Get host hourly consumption"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/host/hourlyConsumption/get"
required: true
}
]
}
]
description: "hourlyConsumption operations"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/host/{hostId}/location"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "hostId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the host"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.host.Location"
noAuthentication: false
description: "Get host location"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/host/location/get"
required: true
}
]
}
]
description: "location operations"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/host/{hostId}/remove"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "hostId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the host"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Remove host"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/host/remove"
required: true
}
]
}
]
description: "remove operations"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/host/{hostId}/resilience"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "hostId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the host"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.HostResilience"
noAuthentication: false
description: "Get host resilience test status"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/host/resilience/get"
required: true
}
]
}
]
description: "Host resilience test status"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/host/{hostId}/resilience/canBeEnabled"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "hostId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the host"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "boolean"
noAuthentication: false
description: "Check if resilience test can be performed"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/host/resilience/canBeEnabled/get"
required: true
}
]
}
]
description: "canBeEnabled operations"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/host/{hostId}/resilience/disable"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "hostId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the host"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Stop resilience test"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/host/resilience/disable"
required: true
}
]
}
]
description: "disable operations"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/host/{hostId}/resilience/enable"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "duration"
dataType: "long"
paramType: "body"
fullType: "long"
required: false
description: "Duration test in minutes. Host will be reconnected after this period (min:10min, max:24h, default:1h)"
}
-{
name: "hostId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the host"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Start resilience test (will cut host network access)"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/host/resilience/enable"
required: true
}
]
}
]
description: "enable operations"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/host/{hostId}/task"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "hostId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the host"
}
-{
name: "name"
dataType: "string"
paramType: "query"
fullType: "string"
required: false
description: "Filter the value of name property (like)"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "state"
dataType: "dedicatedCloud.TaskStateEnum"
paramType: "query"
fullType: "dedicatedCloud.TaskStateEnum"
required: false
description: "Filter the value of state property (=)"
}
]
responseType: "long[]"
noAuthentication: false
description: "List operations associated to host"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/host/task/get"
required: true
}
]
}
]
description: "List the dedicatedCloud.Task objects"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/host/{hostId}/task/{taskId}"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "hostId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the host"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "taskId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Task id"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Get operation"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/host/task/get"
required: true
}
]
}
]
description: "Operation"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/host/{hostId}/task/{taskId}/changeMaintenanceExecutionDate"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "executionDate"
dataType: "datetime"
paramType: "body"
fullType: "datetime"
required: true
description: "The new execution date"
}
-{
name: "hostId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the host"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "taskId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Task id"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Change the execution date of a maintenance operation"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/host/task/changeMaintenanceExecutionDate"
required: true
}
]
}
]
description: "changeMaintenanceExecutionDate operations"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/host/{hostId}/task/{taskId}/resetTaskState"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "hostId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the host"
}
-{
name: "reason"
dataType: "string"
paramType: "body"
fullType: "string"
required: true
description: "Reason of task restart"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "taskId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Task id"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Relaunch operation currently in error state"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/host/task/resetTaskState"
required: true
}
]
}
]
description: "resetTaskState operations"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/nsxtEdge"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "long[]"
noAuthentication: false
description: "List NSX-T Edges within virtual datacenter"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/nsxtEdge/get"
required: true
}
]
}
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Add a NSX-T Edge in the virtual datacenter"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/nsxtEdge/create"
required: true
}
]
}
]
description: "List the dedicatedCloud.NsxtEdge objects"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/nsxtEdge/{nsxtEdgeId}"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "DELETE"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "nsxtEdgeId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the NSX-T Edge"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Remove NSX-T Edge from the virtual datacenter"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/nsxtEdge/delete"
required: true
}
]
}
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "nsxtEdgeId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the NSX-T Edge"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.NsxtEdge"
noAuthentication: false
description: "Get NSX-T Edge details"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/nsxtEdge/get"
required: true
}
]
}
]
description: "NSX-T Edge"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/nsxtEdge/{nsxtEdgeId}/relocateEdge"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "datastore"
dataType: "string"
paramType: "body"
fullType: "string"
required: false
description: "Datastore ID where you want to relocate NSX-T Edge disks"
}
-{
name: "hostId"
dataType: "long"
paramType: "body"
fullType: "long"
required: false
description: "Host ID where you want to relocate NSX-T Edge compute resources"
}
-{
name: "nsxtEdgeId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the NSX-T Edge"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Relocate NSX-T Edge compute resources and/or disks"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/nsxtEdge/relocateEdge"
description: "Relocate NSX-T Edge to another datastore"
required: true
}
]
}
]
description: "relocateEdge operations"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/nsxtEdge/{nsxtEdgeId}/resilience"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "nsxtEdgeId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the NSX-T Edge"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.NsxtEdgeResilience"
noAuthentication: false
description: "Get NSX-T Edge resilience test status"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/nsxtEdge/resilience/get"
required: true
}
]
}
]
description: "NSX-T Edge resilience test status"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/nsxtEdge/{nsxtEdgeId}/resilience/canBeEnabled"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "nsxtEdgeId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the NSX-T Edge"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "boolean"
noAuthentication: false
description: "Check if resilience test can be performed"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/nsxtEdge/resilience/canBeEnabled/get"
required: true
}
]
}
]
description: "canBeEnabled operations"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/nsxtEdge/{nsxtEdgeId}/resilience/disable"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "nsxtEdgeId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the NSX-T Edge"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Stop resilience test"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/nsxtEdge/resilience/disable"
required: true
}
]
}
]
description: "disable operations"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/nsxtEdge/{nsxtEdgeId}/resilience/enable"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "duration"
dataType: "long"
paramType: "body"
fullType: "long"
required: false
description: "Duration test in minutes. NSX-T Edge will be reconnected after this period (min:10min, max:24h, default:1h)"
}
-{
name: "nsxtEdgeId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the NSX-T Edge"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Start resilience test (will put NSX-T Edge in maintenance mode)"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/nsxtEdge/resilience/enable"
required: true
}
]
}
]
description: "enable operations"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/nsxtEdgesResizingCapabilities"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.nsxt.NsxtEdgeSizingCapability"
noAuthentication: false
description: "Resizing Capabilities of NSX-T edges cluster on specified datacenter"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/nsxtEdgesResizingCapabilities/get"
required: true
}
]
}
]
description: "nsxtEdgesResizingCapabilities operations"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/nsxtEdgesScalingCapabilities"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.nsxt.NsxtEdgeScalingCapability"
noAuthentication: false
description: "Scaling Capabilities of NSX-T edges cluster on specified datacenter"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/nsxtEdgesScalingCapabilities/get"
required: true
}
]
}
]
description: "nsxtEdgesScalingCapabilities operations"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/orderableFilerProfiles"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.filer.Profile[]"
noAuthentication: false
description: "List available datastore profiles"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/orderableFilerProfiles/get"
required: true
}
]
}
]
description: "orderableFilerProfiles operations"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/orderableHostProfiles"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.host.Profile[]"
noAuthentication: false
description: "List available host profiles"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/orderableHostProfiles/get"
required: true
}
]
}
]
description: "orderableHostProfiles operations"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/orderNewFilerHourly"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "name"
dataType: "string"
paramType: "body"
fullType: "string"
required: true
description: "Filer profile you want to order"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Order hourly datastore"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/orderNewFilerHourly"
required: true
}
]
}
]
description: "orderNewFilerHourly operations"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/orderNewHostHourly"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "name"
dataType: "string"
paramType: "body"
fullType: "string"
required: true
description: "Host profile you want to order"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "vmwareClusterId"
dataType: "string"
paramType: "body"
fullType: "string"
required: false
description: "Id of the cluster you want the host to be added ("domain-cXX")"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Order hourly host"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/orderNewHostHourly"
required: true
}
]
}
]
description: "orderNewHostHourly operations"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/privateGateway"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.PrivateGateway"
noAuthentication: false
description: "Get private management gateway"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/privateGateway/get"
required: true
}
]
}
]
description: "Private management gateway"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/privateGateway/disable"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Remove the private management gateway"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/privateGateway/disable"
required: true
}
]
}
]
description: "disable operations"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/privateGateway/enable"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "ip"
dataType: "ip"
paramType: "body"
fullType: "ip"
required: true
description: "Ip to set on your private gateway in your network"
}
-{
name: "netmask"
dataType: "ip"
paramType: "body"
fullType: "ip"
required: true
description: "Your netmask to set on the private gateway"
}
-{
name: "portgroup"
dataType: "string"
paramType: "body"
fullType: "string"
required: true
description: "Portgroup in your VMware on OVHcloud used to deploy the private gateway"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Deploy private management gateway"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/privateGateway/enable"
required: true
}
]
}
]
description: "enable operations"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/privateGateway/reconfigure"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "ip"
dataType: "ip"
paramType: "body"
fullType: "ip"
required: false
description: "Ip to set on your private gateway in your network"
}
-{
name: "netmask"
dataType: "ip"
paramType: "body"
fullType: "ip"
required: false
description: "Your netmask to set on the private gateway"
}
-{
name: "newDatacenterId"
dataType: "long"
paramType: "body"
fullType: "long"
required: false
description: "Datacenter id where your private gateway will be moved"
}
-{
name: "portgroup"
dataType: "string"
paramType: "body"
fullType: "string"
required: false
description: "Portgroup in your VMware on OVHcloud used to deploy the private gateway"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Reconfigure private management gateway"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/privateGateway/reconfigure"
required: true
}
]
}
]
description: "reconfigure operations"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/resizeNsxtEdgeCluster"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "size"
dataType: "dedicatedCloud.nsxt.NsxtEdgeSizeEnum"
paramType: "body"
fullType: "dedicatedCloud.nsxt.NsxtEdgeSizeEnum"
required: true
description: "Size of NSX-T edge"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Resize NSX-T edges on specified datacenter"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/resizeNsxtEdgeCluster"
required: true
}
]
}
]
description: "resizeNsxtEdgeCluster operations"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/task"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "name"
dataType: "string"
paramType: "query"
fullType: "string"
required: false
description: "Filter the value of name property (like)"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "state"
dataType: "dedicatedCloud.TaskStateEnum"
paramType: "query"
fullType: "dedicatedCloud.TaskStateEnum"
required: false
description: "Filter the value of state property (=)"
}
]
responseType: "long[]"
noAuthentication: false
description: "List operations associated to virtual datacenter"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/task/get"
required: true
}
]
}
]
description: "List the dedicatedCloud.Task objects"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/task/{taskId}"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "taskId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Task id"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Get operation"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/task/get"
required: true
}
]
}
]
description: "Operation"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/task/{taskId}/changeMaintenanceExecutionDate"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "executionDate"
dataType: "datetime"
paramType: "body"
fullType: "datetime"
required: true
description: "The new execution date"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "taskId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Task id"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Change the execution date of a maintenance operation"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/task/changeMaintenanceExecutionDate"
required: true
}
]
}
]
description: "changeMaintenanceExecutionDate operations"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/task/{taskId}/resetTaskState"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "reason"
dataType: "string"
paramType: "body"
fullType: "string"
required: true
description: "Reason of task restart"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "taskId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Task id"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Relaunch operation currently in error state"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/task/resetTaskState"
required: true
}
]
}
]
description: "resetTaskState operations"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/vm"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "long[]"
noAuthentication: false
description: "List virtual machines within virtual datacenter"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/vm/get"
required: true
}
]
}
]
description: "List the dedicatedCloud.Vm objects"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/vm/{vmId}"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "vmId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the virtual machine."
}
]
responseType: "dedicatedCloud.Vm"
noAuthentication: false
description: "Get virtual machines"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/vm/get"
required: true
}
]
}
]
description: "Virtual machine"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/vm/{vmId}/backupJob"
-operations: [
-{
-apiStatus: {
description: "Deprecated, will be removed"
value: "DEPRECATED"
deletionDate: "2018-01-01T00:00:00+01:00"
deprecatedDate: "2017-10-03T00:00:00+01:00"
replacement: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/vm/{vmId}"
}
httpMethod: "GET"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "vmId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the virtual machine."
}
]
responseType: "dedicatedCloud.BackupJob"
noAuthentication: false
description: "Get virtual machine backup job"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/vm/backupJob/get"
required: true
}
]
}
-{
-apiStatus: {
description: "Deprecated, will be removed"
value: "DEPRECATED"
deletionDate: "2018-01-01T00:00:00+01:00"
deprecatedDate: "2017-10-03T00:00:00+01:00"
replacement: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/vm/{vmId}"
}
httpMethod: "POST"
-parameters: [
-{
name: "backupDays"
dataType: "dedicatedCloud.backup.BackupDaysEnum[]"
paramType: "body"
fullType: "dedicatedCloud.backup.BackupDaysEnum[]"
required: true
description: "List of days your Virtual Machine will be backuped"
}
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "vmId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the virtual machine."
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Update backup job"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/vm/backupJob/create"
required: true
}
]
}
]
description: "Backup job"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/vm/{vmId}/backupJob/disable"
-operations: [
-{
-apiStatus: {
description: "Deprecated, will be removed"
value: "DEPRECATED"
deletionDate: "2018-01-01T00:00:00+01:00"
deprecatedDate: "2017-10-03T00:00:00+01:00"
replacement: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/vm/{vmId}"
}
httpMethod: "POST"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "vmId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the virtual machine."
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Disable backup job"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/vm/backupJob/disable"
required: true
}
]
}
]
description: "disable operations"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/vm/{vmId}/backupJob/enable"
-operations: [
-{
-apiStatus: {
description: "Deprecated, will be removed"
value: "DEPRECATED"
deletionDate: "2018-01-01T00:00:00+01:00"
deprecatedDate: "2017-10-03T00:00:00+01:00"
replacement: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/vm/{vmId}"
}
httpMethod: "POST"
-parameters: [
-{
name: "backupDays"
dataType: "dedicatedCloud.backup.BackupDaysEnum[]"
paramType: "body"
fullType: "dedicatedCloud.backup.BackupDaysEnum[]"
required: true
description: "Backup offer type"
}
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "vmId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the virtual machine."
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Enable backup job"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/vm/backupJob/enable"
required: true
}
]
}
]
description: "enable operations"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/vm/{vmId}/backupJob/restorePoints"
-operations: [
-{
-apiStatus: {
description: "Deprecated, will be removed"
value: "DEPRECATED"
deletionDate: "2018-01-01T00:00:00+01:00"
deprecatedDate: "2017-10-03T00:00:00+01:00"
replacement: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/vm/{vmId}"
}
httpMethod: "GET"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "vmId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the virtual machine."
}
]
responseType: "long[]"
noAuthentication: false
description: "List restore points"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/vm/backupJob/restorePoints/get"
required: true
}
]
}
]
description: "List the dedicatedCloud.RestorePoint objects"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/vm/{vmId}/backupJob/restorePoints/{restorePointId}"
-operations: [
-{
-apiStatus: {
description: "Deprecated, will be removed"
value: "DEPRECATED"
deletionDate: "2018-01-01T00:00:00+01:00"
deprecatedDate: "2017-10-03T00:00:00+01:00"
replacement: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/vm/{vmId}"
}
httpMethod: "GET"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "restorePointId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the restore point."
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "vmId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the virtual machine."
}
]
responseType: "dedicatedCloud.RestorePoint"
noAuthentication: false
description: "Get restore point"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/vm/backupJob/restorePoints/get"
required: true
}
]
}
]
description: "Restore point"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/vm/{vmId}/backupJob/restorePoints/{restorePointId}/restore"
-operations: [
-{
-apiStatus: {
description: "Deprecated, will be removed"
value: "DEPRECATED"
deletionDate: "2018-01-01T00:00:00+01:00"
deprecatedDate: "2017-10-03T00:00:00+01:00"
replacement: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/vm/{vmId}"
}
httpMethod: "POST"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "filerId"
dataType: "long"
paramType: "body"
fullType: "long"
required: true
description: "Id of the filer where we should restore this Backup."
}
-{
name: "restorePointId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the restore point."
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "vmId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the virtual machine."
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Restore from point"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/vm/backupJob/restorePoints/restore"
required: true
}
]
}
]
description: "restore operations"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/vm/{vmId}/disableBackup"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "vmId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the virtual machine."
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Deactivate backup on virtual machine"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/vm/disableBackup"
required: true
}
]
}
]
description: "disableBackup operations"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/vm/{vmId}/disableCarp"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "macAddress"
dataType: "string"
paramType: "body"
fullType: "string"
required: true
description: "Mac address of the port to enable Carp"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "vmId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the virtual machine."
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Disable CARP on virtual machine on VM Network portgroup"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/vm/disableCarp"
required: true
}
]
}
]
description: "disableCarp operations"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/vm/{vmId}/editBackup"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "backupDays"
dataType: "dedicatedCloud.backup.BackupDaysEnum[]"
paramType: "body"
fullType: "dedicatedCloud.backup.BackupDaysEnum[]"
required: true
description: "List of days your Virtual Machine will be backuped"
}
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "vmId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the virtual machine."
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Update backup configuration"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/vm/editBackup"
required: true
}
]
}
]
description: "editBackup operations"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/vm/{vmId}/enableBackup"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "backupDays"
dataType: "dedicatedCloud.backup.BackupDaysEnum[]"
paramType: "body"
fullType: "dedicatedCloud.backup.BackupDaysEnum[]"
required: true
description: "List of days your Virtual Machine will be backuped"
}
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "vmId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the virtual machine."
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Activate backup on virtual machine"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/vm/enableBackup"
required: true
}
]
}
]
description: "enableBackup operations"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/vm/{vmId}/enableCarp"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "macAddress"
dataType: "string"
paramType: "body"
fullType: "string"
required: true
description: "Mac address of the port to enable Carp"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "vmId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the virtual machine."
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Enable CARP on virtual machine on VM Network portgroup"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/vm/enableCarp"
required: true
}
]
}
]
description: "enableCarp operations"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/vm/{vmId}/removeLicense"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "vmId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the virtual machine."
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Remove a managed license from virtual machine"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/vm/removeLicense"
required: true
}
]
}
]
description: "removeLicense operations"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/vm/{vmId}/restoreBackup"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "filerId"
dataType: "long"
paramType: "body"
fullType: "long"
required: true
description: "Id of the filer where we should restore this Backup"
}
-{
name: "filerType"
dataType: "dedicatedCloud.filer.FilerTypeEnum"
paramType: "body"
fullType: "dedicatedCloud.filer.FilerTypeEnum"
required: false
description: "Type of filer where vm will be restored(Default value : nas)"
}
-{
name: "restorePointId"
dataType: "long"
paramType: "body"
fullType: "long"
required: true
description: "Id of the restorePoint you want to restore"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "vmId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the virtual machine."
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Restore backup"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/vm/restoreBackup"
required: true
}
]
}
]
description: "restoreBackup operations"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/vm/{vmId}/setLicense"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "bypassGuestOsFamilyCheck"
dataType: "boolean"
paramType: "body"
fullType: "boolean"
required: true
description: "Bypass compatibility check between managed license and current VMware guest configured OS family"
}
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "kmsLicense"
dataType: "dedicatedCloud.spla.KmsLicenseEnum"
paramType: "body"
fullType: "dedicatedCloud.spla.KmsLicenseEnum"
required: true
description: "License to use"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "vmId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the virtual machine."
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Set a managed license on virtual machine"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/vm/setLicense"
required: true
}
]
}
]
description: "setLicense operations"
}
-{
path: "/dedicatedCloud/{serviceName}/datacenter/{datacenterId}/vmLicensed"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Datacenter"
}
-{
name: "kmsLicense"
dataType: "dedicatedCloud.spla.KmsLicenseIncludingLegacyEnum"
paramType: "query"
fullType: "dedicatedCloud.spla.KmsLicenseIncludingLegacyEnum"
required: false
description: "Only display virtual machines with this license"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.virtualMachineLicensingSummary[]"
noAuthentication: false
description: "Get virtual machines with managed license"
-iamActions: [
-{
name: "pccVMware:apiovh:datacenter/vmLicensed/get"
required: true
}
]
}
]
description: "vmLicensed operations"
}
-{
path: "/dedicatedCloud/{serviceName}/federation"
-operations: [
-{
-apiStatus: {
description: "Deprecated, will be removed"
value: "DEPRECATED"
deletionDate: "2025-02-01T00:00:00+01:00"
deprecatedDate: "2024-05-14T00:00:00+01:00"
replacement: "/dedicatedCloud/{serviceName}/iam"
}
httpMethod: "GET"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Federation"
noAuthentication: false
description: "Get Active Directory federation option"
-iamActions: [
-{
name: "pccVMware:apiovh:federation/get"
required: true
}
]
}
]
description: "Active Directory federation option"
}
-{
path: "/dedicatedCloud/{serviceName}/federation/activeDirectory"
-operations: [
-{
-apiStatus: {
description: "Deprecated, will be removed"
value: "DEPRECATED"
deletionDate: "2025-02-01T00:00:00+01:00"
deprecatedDate: "2024-05-14T00:00:00+01:00"
replacement: "/dedicatedCloud/{serviceName}/iam"
}
httpMethod: "GET"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "long[]"
noAuthentication: false
description: "List federated Active Directories"
-iamActions: [
-{
name: "pccVMware:apiovh:federation/activeDirectory/get"
required: true
}
]
}
-{
-apiStatus: {
description: "Deprecated, will be removed"
value: "DEPRECATED"
deletionDate: "2025-02-01T00:00:00+01:00"
deprecatedDate: "2024-05-14T00:00:00+01:00"
replacement: "/dedicatedCloud/{serviceName}/iam/enable"
}
httpMethod: "POST"
-parameters: [
-{
name: "baseDnForGroups"
dataType: "string"
paramType: "body"
fullType: "string"
required: true
description: "Active Directory base DN for groups, e.g. dc=example,dc=com"
}
-{
name: "baseDnForUsers"
dataType: "string"
paramType: "body"
fullType: "string"
required: true
description: "Active Directory base DN for users, e.g. dc=example,dc=com"
}
-{
name: "description"
dataType: "string"
paramType: "body"
fullType: "string"
required: false
description: "Description of your option access network"
}
-{
name: "domainAlias"
dataType: "string"
paramType: "body"
fullType: "string"
required: true
description: "Active Directory NetBIOS name, e.g. example"
}
-{
name: "domainName"
dataType: "string"
paramType: "body"
fullType: "string"
required: true
description: "Active Directory domain name, e.g. example.com"
}
-{
name: "ip"
dataType: "ipv4"
paramType: "body"
fullType: "ipv4"
required: true
description: "IP address of the remote service, e.g. 123.100.200.0"
}
-{
name: "ldapHostname"
dataType: "string"
paramType: "body"
fullType: "string"
required: false
description: "Active Directory LDAP hostname"
}
-{
name: "ldapTcpPort"
dataType: "long"
paramType: "body"
fullType: "long"
required: false
description: "Active Directory LDAP/LDAPS TCP port (636 for LDAPS or 389 for LDAP)"
}
-{
name: "noSsl"
dataType: "boolean"
paramType: "body"
fullType: "boolean"
required: false
description: "Use unsecure LDAP instead of LDAPS"
}
-{
name: "password"
dataType: "password"
paramType: "body"
fullType: "password"
required: true
description: "Active Directory password"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "sslThumbprint"
dataType: "string"
paramType: "body"
fullType: "string"
required: false
description: "SSL thumbprint of the remote service, e.g. A7:61:68:...:61:91:2F"
}
-{
name: "username"
dataType: "string"
paramType: "body"
fullType: "string"
required: true
description: "Active Directory user name (pre-Windows 2000 name), e.g. jdoe@example.com"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Create federated Active Directory"
-iamActions: [
-{
name: "pccVMware:apiovh:federation/activeDirectory/create"
required: true
}
]
}
]
description: "List the dedicatedCloud.FederationAccessNetwork objects"
}
-{
path: "/dedicatedCloud/{serviceName}/federation/activeDirectory/{activeDirectoryId}"
-operations: [
-{
-apiStatus: {
description: "Deprecated, will be removed"
value: "DEPRECATED"
deletionDate: "2025-02-01T00:00:00+01:00"
deprecatedDate: "2024-05-14T00:00:00+01:00"
replacement: "/dedicatedCloud/{serviceName}/iam"
}
httpMethod: "DELETE"
-parameters: [
-{
name: "activeDirectoryId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Active Directory"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Remove federated Active Directory"
-iamActions: [
-{
name: "pccVMware:apiovh:federation/activeDirectory/delete"
required: true
}
]
}
-{
-apiStatus: {
description: "Deprecated, will be removed"
value: "DEPRECATED"
deletionDate: "2025-02-01T00:00:00+01:00"
deprecatedDate: "2024-05-14T00:00:00+01:00"
replacement: "/dedicatedCloud/{serviceName}/iam"
}
httpMethod: "GET"
-parameters: [
-{
name: "activeDirectoryId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Active Directory"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.FederationAccessNetwork"
noAuthentication: false
description: "Get federated Active Directory"
-iamActions: [
-{
name: "pccVMware:apiovh:federation/activeDirectory/get"
required: true
}
]
}
]
description: "Federated Active Directory"
}
-{
path: "/dedicatedCloud/{serviceName}/federation/activeDirectory/{activeDirectoryId}/changeProperties"
-operations: [
-{
-apiStatus: {
description: "Deprecated, will be removed"
value: "DEPRECATED"
deletionDate: "2025-02-01T00:00:00+01:00"
deprecatedDate: "2024-05-14T00:00:00+01:00"
replacement: "/dedicatedCloud/{serviceName}/iam"
}
httpMethod: "POST"
-parameters: [
-{
name: "activeDirectoryId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Active Directory"
}
-{
name: "description"
dataType: "string"
paramType: "body"
fullType: "string"
required: false
description: "Description of your option access network"
}
-{
name: "password"
dataType: "password"
paramType: "body"
fullType: "password"
required: true
description: "Active Directory password"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "sslThumbprint"
dataType: "string"
paramType: "body"
fullType: "string"
required: false
description: "SSL thumbprint of the remote service, e.g. A7:61:68:...:61:91:2F"
}
-{
name: "username"
dataType: "string"
paramType: "body"
fullType: "string"
required: true
description: "Active Directory user name (pre-Windows 2000 name), e.g. jdoe@example.com or jdoe"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Update federated Active Directory"
-iamActions: [
-{
name: "pccVMware:apiovh:federation/activeDirectory/changeProperties"
required: true
}
]
}
]
description: "changeProperties operations"
}
-{
path: "/dedicatedCloud/{serviceName}/federation/activeDirectory/{activeDirectoryId}/grantActiveDirectoryGroup"
-operations: [
-{
-apiStatus: {
description: "Deprecated, will be removed"
value: "DEPRECATED"
deletionDate: "2025-02-01T00:00:00+01:00"
deprecatedDate: "2024-05-14T00:00:00+01:00"
replacement: "/dedicatedCloud/{serviceName}/iam/addRole"
}
httpMethod: "POST"
-parameters: [
-{
name: "activeDirectoryId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Active Directory"
}
-{
name: "groupName"
dataType: "string"
paramType: "body"
fullType: "string"
required: true
description: "Active Directory group name (pre-Windows 2000 name), e.g. mygroup"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Grant Active Directory group"
-iamActions: [
-{
name: "pccVMware:apiovh:federation/activeDirectory/grantActiveDirectoryGroup"
required: true
}
]
}
]
description: "grantActiveDirectoryGroup operations"
}
-{
path: "/dedicatedCloud/{serviceName}/federation/activeDirectory/{activeDirectoryId}/grantActiveDirectoryUser"
-operations: [
-{
-apiStatus: {
description: "Deprecated, will be removed"
value: "DEPRECATED"
deletionDate: "2025-02-01T00:00:00+01:00"
deprecatedDate: "2024-05-14T00:00:00+01:00"
replacement: "/dedicatedCloud/{serviceName}/iam/addRole"
}
httpMethod: "POST"
-parameters: [
-{
name: "activeDirectoryId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the Active Directory"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "username"
dataType: "string"
paramType: "body"
fullType: "string"
required: true
description: "Active Directory user name (pre-Windows 2000 name), e.g. jdoe@example.com or jdoe"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Grant Active Directory user"
-iamActions: [
-{
name: "pccVMware:apiovh:federation/activeDirectory/grantActiveDirectoryUser"
required: true
}
]
}
]
description: "grantActiveDirectoryUser operations"
}
-{
path: "/dedicatedCloud/{serviceName}/filer"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "long[]"
noAuthentication: false
description: "List global datastores mounted on all virtual datacenters"
-iamActions: [
-{
name: "pccVMware:apiovh:filer/get"
required: true
}
]
}
]
description: "List the dedicatedCloud.Filer objects"
}
-{
path: "/dedicatedCloud/{serviceName}/filer/{filerId}"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "filerId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Filer Id"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Filer"
noAuthentication: false
description: "Get datastore"
-iamActions: [
-{
name: "pccVMware:apiovh:filer/get"
required: true
}
]
}
]
description: "Datastore"
}
-{
path: "/dedicatedCloud/{serviceName}/filer/{filerId}/checkGlobalCompatible"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "filerId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Filer Id"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "boolean"
noAuthentication: false
description: "Check ability to convert datastore to global datastore"
-iamActions: [
-{
name: "pccVMware:apiovh:filer/checkGlobalCompatible/get"
required: true
}
]
}
]
description: "checkGlobalCompatible operations"
}
-{
path: "/dedicatedCloud/{serviceName}/filer/{filerId}/convertToGlobal"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "filerId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Filer Id"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Convert datastore to global datastore"
-iamActions: [
-{
name: "pccVMware:apiovh:filer/convertToGlobal"
required: true
}
]
}
]
description: "convertToGlobal operations"
}
-{
path: "/dedicatedCloud/{serviceName}/filer/{filerId}/hourlyConsumption"
-operations: [
-{
-apiStatus: {
description: "Deprecated, will be removed"
value: "DEPRECATED"
deletionDate: "2019-07-01T00:00:00+01:00"
deprecatedDate: "2019-06-01T00:00:00+01:00"
replacement: "/me/consumption/usage/current"
}
httpMethod: "GET"
-parameters: [
-{
name: "filerId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Filer Id"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.filer.HourlyConsumption"
noAuthentication: false
description: "Get datastore hourly consumption"
-iamActions: [
-{
name: "pccVMware:apiovh:filer/hourlyConsumption/get"
required: true
}
]
}
]
description: "hourlyConsumption operations"
}
-{
path: "/dedicatedCloud/{serviceName}/filer/{filerId}/location"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "filerId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Filer Id"
}
-{
name: "node"
dataType: "dedicatedCloud.filer.NodeTypeEnum"
paramType: "query"
fullType: "dedicatedCloud.filer.NodeTypeEnum"
required: false
description: "Filer cluster node used to get location (default value: master)"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.filer.Location"
noAuthentication: false
description: "Get datastore location"
-iamActions: [
-{
name: "pccVMware:apiovh:filer/location/get"
required: true
}
]
}
]
description: "location operations"
}
-{
path: "/dedicatedCloud/{serviceName}/filer/{filerId}/remove"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "filerId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Filer Id"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Remove datastore"
-iamActions: [
-{
name: "pccVMware:apiovh:filer/remove"
required: true
}
]
}
]
description: "remove operations"
}
-{
path: "/dedicatedCloud/{serviceName}/filer/{filerId}/task"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "filerId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Filer Id"
}
-{
name: "name"
dataType: "string"
paramType: "query"
fullType: "string"
required: false
description: "Filter the value of name property (like)"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "state"
dataType: "dedicatedCloud.TaskStateEnum"
paramType: "query"
fullType: "dedicatedCloud.TaskStateEnum"
required: false
description: "Filter the value of state property (=)"
}
]
responseType: "long[]"
noAuthentication: false
description: "List operations associated to datastore"
-iamActions: [
-{
name: "pccVMware:apiovh:filer/task/get"
required: true
}
]
}
]
description: "List the dedicatedCloud.Task objects"
}
-{
path: "/dedicatedCloud/{serviceName}/filer/{filerId}/task/{taskId}"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "filerId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Filer Id"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "taskId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Task id"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Get operation"
-iamActions: [
-{
name: "pccVMware:apiovh:filer/task/get"
required: true
}
]
}
]
description: "Operation"
}
-{
path: "/dedicatedCloud/{serviceName}/filer/{filerId}/task/{taskId}/changeMaintenanceExecutionDate"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "executionDate"
dataType: "datetime"
paramType: "body"
fullType: "datetime"
required: true
description: "The new execution date"
}
-{
name: "filerId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Filer Id"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "taskId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Task id"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Change the execution date of a maintenance operation"
-iamActions: [
-{
name: "pccVMware:apiovh:filer/task/changeMaintenanceExecutionDate"
required: true
}
]
}
]
description: "changeMaintenanceExecutionDate operations"
}
-{
path: "/dedicatedCloud/{serviceName}/filer/{filerId}/task/{taskId}/resetTaskState"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "filerId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Filer Id"
}
-{
name: "reason"
dataType: "string"
paramType: "body"
fullType: "string"
required: true
description: "Reason of task restart"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "taskId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Task id"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Relaunch operation currently in error state"
-iamActions: [
-{
name: "pccVMware:apiovh:filer/task/resetTaskState"
required: true
}
]
}
]
description: "resetTaskState operations"
}
-{
path: "/dedicatedCloud/{serviceName}/generateNsxvInventory"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Generate a NSX-V inventory"
-iamActions: [
-{
name: "pccVMware:apiovh:generateNsxvInventory"
required: true
}
]
}
]
description: "generateNsxvInventory operations"
}
-{
path: "/dedicatedCloud/{serviceName}/generateVxlanToVrackMapping"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Generate a NSX-V VXLAN to vRack mapping"
-iamActions: [
-{
name: "pccVMware:apiovh:generateVxlanToVrackMapping"
required: true
}
]
}
]
description: "generateVxlanToVrackMapping operations"
}
-{
path: "/dedicatedCloud/{serviceName}/globalTasks"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "datacenterId"
dataType: "long"
paramType: "query"
fullType: "long"
required: false
description: "Filter the tasks by datacenter Id"
}
-{
name: "endDate.from"
dataType: "date"
paramType: "query"
fullType: "date"
required: false
description: "Filter the tasks by end date (>=)"
}
-{
name: "endDate.to"
dataType: "date"
paramType: "query"
fullType: "date"
required: false
description: "Filter the tasks by end date (<=)"
}
-{
name: "executionDate.from"
dataType: "datetime"
paramType: "query"
fullType: "datetime"
required: false
description: "Filter the tasks by execution date (>=)"
}
-{
name: "executionDate.to"
dataType: "datetime"
paramType: "query"
fullType: "datetime"
required: false
description: "Filter the tasks by execution date (<=)"
}
-{
name: "filerId"
dataType: "long"
paramType: "query"
fullType: "long"
required: false
description: "Filter the tasks by filer Id"
}
-{
name: "hostId"
dataType: "long"
paramType: "query"
fullType: "long"
required: false
description: "Filter the tasks by host Id"
}
-{
name: "lastModificationDate.from"
dataType: "datetime"
paramType: "query"
fullType: "datetime"
required: false
description: "Filter the tasks by last modification date (>=)"
}
-{
name: "lastModificationDate.to"
dataType: "datetime"
paramType: "query"
fullType: "datetime"
required: false
description: "Filter the tasks by last modification date (<=)"
}
-{
name: "name"
dataType: "string"
paramType: "query"
fullType: "string"
required: false
description: "Filter the tasks by name"
}
-{
name: "networkAccessId"
dataType: "long"
paramType: "query"
fullType: "long"
required: false
description: "Filter the tasks by network access Id"
}
-{
name: "orderId"
dataType: "long"
paramType: "query"
fullType: "long"
required: false
description: "Filter the tasks by order Id"
}
-{
name: "parentTaskId"
dataType: "long"
paramType: "query"
fullType: "long"
required: false
description: "Filter the tasks by parent task Id"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "state"
dataType: "dedicatedCloud.TaskStateEnum[]"
paramType: "query"
fullType: "dedicatedCloud.TaskStateEnum[]"
required: false
description: "Filter the tasks by state"
}
-{
name: "userId"
dataType: "long"
paramType: "query"
fullType: "long"
required: false
description: "Filter the tasks by user Id"
}
-{
name: "vlanId"
dataType: "long"
paramType: "query"
fullType: "long"
required: false
description: "Filter the tasks by vlan Id"
}
]
responseType: "long[]"
noAuthentication: false
description: "List filtered operations"
-iamActions: [
-{
name: "pccVMware:apiovh:globalTasks/get"
required: true
}
]
}
]
description: "globalTasks operations"
}
-{
path: "/dedicatedCloud/{serviceName}/hcx"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Hcx"
noAuthentication: false
description: "Get VMware Hybrid Cloud Extension option"
-iamActions: [
-{
name: "pccVMware:apiovh:hcx/get"
required: true
}
]
}
]
description: "VMware Hybrid Cloud Extension option"
}
-{
path: "/dedicatedCloud/{serviceName}/hcx/canBeDisabled"
-operations: [
-{
-apiStatus: {
description: "Deprecated, will be removed"
value: "DEPRECATED"
deletionDate: "2019-07-01T00:00:00+01:00"
deprecatedDate: "2019-06-01T00:00:00+01:00"
replacement: "/order/cart/{cartId}/privateCloud"
}
httpMethod: "GET"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "boolean"
noAuthentication: false
description: "Check if VMware Hybrid Cloud Extension option can be disabled"
-iamActions: [
-{
name: "pccVMware:apiovh:hcx/canBeDisabled/get"
required: true
}
]
}
]
description: "canBeDisabled operations"
}
-{
path: "/dedicatedCloud/{serviceName}/hcx/canBeEnabled"
-operations: [
-{
-apiStatus: {
description: "Deprecated, will be removed"
value: "DEPRECATED"
deletionDate: "2019-07-01T00:00:00+01:00"
deprecatedDate: "2019-06-01T00:00:00+01:00"
replacement: "/order/cart/{cartId}/privateCloud"
}
httpMethod: "GET"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "boolean"
noAuthentication: false
description: "Check if VMware Hybrid Cloud Extension option can be enabled"
-iamActions: [
-{
name: "pccVMware:apiovh:hcx/canBeEnabled/get"
required: true
}
]
}
]
description: "canBeEnabled operations"
}
-{
path: "/dedicatedCloud/{serviceName}/hcx/disable"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Disable VMware Hybrid Cloud Extension option"
-iamActions: [
-{
name: "pccVMware:apiovh:hcx/disable"
required: true
}
]
}
]
description: "disable operations"
}
-{
path: "/dedicatedCloud/{serviceName}/hcx/enable"
-operations: [
-{
-apiStatus: {
description: "Deprecated, will be removed"
value: "DEPRECATED"
deletionDate: "2019-07-01T00:00:00+01:00"
deprecatedDate: "2019-06-01T00:00:00+01:00"
replacement: "/order/cart/{cartId}/privateCloud"
}
httpMethod: "POST"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Enable VMware Hybrid Cloud Extension option"
-iamActions: [
-{
name: "pccVMware:apiovh:hcx/enable"
required: true
}
]
}
]
description: "enable operations"
}
-{
path: "/dedicatedCloud/{serviceName}/hds"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Hds"
noAuthentication: false
description: "Get HDS certification option"
-iamActions: [
-{
name: "pccVMware:apiovh:hds/get"
required: true
}
]
}
]
description: "HDS certification option"
}
-{
path: "/dedicatedCloud/{serviceName}/hds/canBeDisabled"
-operations: [
-{
-apiStatus: {
description: "Deprecated, will be removed"
value: "DEPRECATED"
deletionDate: "2019-07-01T00:00:00+01:00"
deprecatedDate: "2019-06-01T00:00:00+01:00"
replacement: "/order/upgrade/privateCloud/{serviceName}/{planCode}"
}
httpMethod: "GET"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.optionCompatibility"
noAuthentication: false
description: "Check if HDS certification option can be disabled"
-iamActions: [
-{
name: "pccVMware:apiovh:hds/canBeDisabled/get"
required: true
}
]
}
]
description: "canBeDisabled operations"
}
-{
path: "/dedicatedCloud/{serviceName}/hds/canBeEnabled"
-operations: [
-{
-apiStatus: {
description: "Deprecated, will be removed"
value: "DEPRECATED"
deletionDate: "2019-07-01T00:00:00+01:00"
deprecatedDate: "2019-06-01T00:00:00+01:00"
replacement: "/order/upgrade/privateCloud/{serviceName}/{planCode}"
}
httpMethod: "GET"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.optionCompatibility"
noAuthentication: false
description: "Check if HDS certification option can be enabled"
-iamActions: [
-{
name: "pccVMware:apiovh:hds/canBeEnabled/get"
required: true
}
]
}
]
description: "canBeEnabled operations"
}
-{
path: "/dedicatedCloud/{serviceName}/hds/disable"
-operations: [
-{
-apiStatus: {
description: "Deprecated, will be removed"
value: "DEPRECATED"
deletionDate: "2019-07-01T00:00:00+01:00"
deprecatedDate: "2019-06-01T00:00:00+01:00"
replacement: "/order/upgrade/privateCloud/{serviceName}/{planCode}"
}
httpMethod: "POST"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Disable HDS certification option"
-iamActions: [
-{
name: "pccVMware:apiovh:hds/disable"
required: true
}
]
}
]
description: "disable operations"
}
-{
path: "/dedicatedCloud/{serviceName}/hds/enable"
-operations: [
-{
-apiStatus: {
description: "Deprecated, will be removed"
value: "DEPRECATED"
deletionDate: "2019-07-01T00:00:00+01:00"
deprecatedDate: "2019-06-01T00:00:00+01:00"
replacement: "/order/upgrade/privateCloud/{serviceName}/{planCode}"
}
httpMethod: "POST"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Enable HDS certification option"
-iamActions: [
-{
name: "pccVMware:apiovh:hds/enable"
required: true
}
]
}
]
description: "enable operations"
}
-{
path: "/dedicatedCloud/{serviceName}/hipaa"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Hipaa"
noAuthentication: false
description: "Get HIPAA certification option"
-iamActions: [
-{
name: "pccVMware:apiovh:hipaa/get"
required: true
}
]
}
]
description: "HIPAA certification option"
}
-{
path: "/dedicatedCloud/{serviceName}/hipaa/canBeDisabled"
-operations: [
-{
-apiStatus: {
description: "Deprecated, will be removed"
value: "DEPRECATED"
deletionDate: "2019-07-01T00:00:00+01:00"
deprecatedDate: "2019-06-01T00:00:00+01:00"
replacement: "/order/upgrade/privateCloud/{serviceName}/{planCode}"
}
httpMethod: "GET"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.optionCompatibility"
noAuthentication: false
description: "Check if HIPAA certification option can be disabled"
-iamActions: [
-{
name: "pccVMware:apiovh:hipaa/canBeDisabled/get"
required: true
}
]
}
]
description: "canBeDisabled operations"
}
-{
path: "/dedicatedCloud/{serviceName}/hipaa/canBeEnabled"
-operations: [
-{
-apiStatus: {
description: "Deprecated, will be removed"
value: "DEPRECATED"
deletionDate: "2019-07-01T00:00:00+01:00"
deprecatedDate: "2019-06-01T00:00:00+01:00"
replacement: "/order/upgrade/privateCloud/{serviceName}/{planCode}"
}
httpMethod: "GET"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.optionCompatibility"
noAuthentication: false
description: "Check if HIPAA certification option can be enabled"
-iamActions: [
-{
name: "pccVMware:apiovh:hipaa/canBeEnabled/get"
required: true
}
]
}
]
description: "canBeEnabled operations"
}
-{
path: "/dedicatedCloud/{serviceName}/hipaa/disable"
-operations: [
-{
-apiStatus: {
description: "Deprecated, will be removed"
value: "DEPRECATED"
deletionDate: "2019-07-01T00:00:00+01:00"
deprecatedDate: "2019-06-01T00:00:00+01:00"
replacement: "/order/upgrade/privateCloud/{serviceName}/{planCode}"
}
httpMethod: "POST"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Disable HIPAA certification option"
-iamActions: [
-{
name: "pccVMware:apiovh:hipaa/disable"
required: true
}
]
}
]
description: "disable operations"
}
-{
path: "/dedicatedCloud/{serviceName}/hipaa/enable"
-operations: [
-{
-apiStatus: {
description: "Deprecated, will be removed"
value: "DEPRECATED"
deletionDate: "2019-07-01T00:00:00+01:00"
deprecatedDate: "2019-06-01T00:00:00+01:00"
replacement: "/order/upgrade/privateCloud/{serviceName}/{planCode}"
}
httpMethod: "POST"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Enable HIPAA certification option"
-iamActions: [
-{
name: "pccVMware:apiovh:hipaa/enable"
required: true
}
]
}
]
description: "enable operations"
}
-{
path: "/dedicatedCloud/{serviceName}/iam"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Iam"
noAuthentication: false
description: "Get OVHcloud IAM option"
-iamActions: [
-{
name: "pccVMware:apiovh:iam/get"
required: true
}
]
}
]
description: "OVHcloud IAM option"
}
-{
path: "/dedicatedCloud/{serviceName}/iam/addRole"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "name"
dataType: "string"
paramType: "body"
fullType: "string"
required: true
description: "Role name, e.g. mygroup"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Create IAM role"
-iamActions: [
-{
name: "pccVMware:apiovh:iam/addRole"
required: true
}
]
}
]
description: "addRole operations"
}
-{
path: "/dedicatedCloud/{serviceName}/iam/canBeDisabled"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "boolean"
noAuthentication: false
description: "Check if OVHcloud IAM option can be disabled"
-iamActions: [
-{
name: "pccVMware:apiovh:iam/canBeDisabled/get"
required: true
}
]
}
]
description: "canBeDisabled operations"
}
-{
path: "/dedicatedCloud/{serviceName}/iam/canBeEnabled"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "boolean"
noAuthentication: false
description: "Check if OVHcloud IAM option can be enabled"
-iamActions: [
-{
name: "pccVMware:apiovh:iam/canBeEnabled/get"
required: true
}
]
}
]
description: "canBeEnabled operations"
}
-{
path: "/dedicatedCloud/{serviceName}/iam/disable"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Disable OVHcloud IAM option"
-iamActions: [
-{
name: "pccVMware:apiovh:iam/disable"
required: true
}
]
}
]
description: "disable operations"
}
-{
path: "/dedicatedCloud/{serviceName}/iam/enable"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Enable OVHcloud IAM option"
-iamActions: [
-{
name: "pccVMware:apiovh:iam/enable"
required: true
}
]
}
]
description: "enable operations"
}
-{
path: "/dedicatedCloud/{serviceName}/ip"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "ipv4Block[]"
noAuthentication: false
description: "List IP blocks"
-iamActions: [
-{
name: "pccVMware:apiovh:ip/get"
required: true
}
]
}
]
description: "List the dedicatedCloud.Ip objects"
}
-{
path: "/dedicatedCloud/{serviceName}/ip/{network}"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "network"
dataType: "ipv4Block"
paramType: "path"
fullType: "ipv4Block"
required: true
description: "IP ex: 213.186.33.34/24"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Ip"
noAuthentication: false
description: "Get IP block"
-iamActions: [
-{
name: "pccVMware:apiovh:ip/get"
required: true
}
]
}
]
description: "IP block"
}
-{
path: "/dedicatedCloud/{serviceName}/ip/{network}/details"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "network"
dataType: "ipv4Block"
paramType: "path"
fullType: "ipv4Block"
required: true
description: "IP ex: 213.186.33.34/24"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.IpDetails[]"
noAuthentication: false
description: "Get details about this IP Block"
-iamActions: [
-{
name: "pccVMware:apiovh:ip/details/get"
required: true
}
]
}
]
description: "details operations"
}
-{
path: "/dedicatedCloud/{serviceName}/ip/{network}/task"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "name"
dataType: "string"
paramType: "query"
fullType: "string"
required: false
description: "Filter the value of name property (like)"
}
-{
name: "network"
dataType: "ipv4Block"
paramType: "path"
fullType: "ipv4Block"
required: true
description: "IP ex: 213.186.33.34/24"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "state"
dataType: "dedicatedCloud.TaskStateEnum"
paramType: "query"
fullType: "dedicatedCloud.TaskStateEnum"
required: false
description: "Filter the value of state property (=)"
}
]
responseType: "long[]"
noAuthentication: false
description: "List operations associated to IP block"
-iamActions: [
-{
name: "pccVMware:apiovh:ip/task/get"
required: true
}
]
}
]
description: "List the dedicatedCloud.Task objects"
}
-{
path: "/dedicatedCloud/{serviceName}/ip/{network}/task/{taskId}"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "network"
dataType: "ipv4Block"
paramType: "path"
fullType: "ipv4Block"
required: true
description: "IP ex: 213.186.33.34/24"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "taskId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Task id"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Get operation"
-iamActions: [
-{
name: "pccVMware:apiovh:ip/task/get"
required: true
}
]
}
]
description: "Operation"
}
-{
path: "/dedicatedCloud/{serviceName}/ip/{network}/task/{taskId}/changeMaintenanceExecutionDate"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "executionDate"
dataType: "datetime"
paramType: "body"
fullType: "datetime"
required: true
description: "The new execution date"
}
-{
name: "network"
dataType: "ipv4Block"
paramType: "path"
fullType: "ipv4Block"
required: true
description: "IP ex: 213.186.33.34/24"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "taskId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Task id"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Change the execution date of a maintenance operation"
-iamActions: [
-{
name: "pccVMware:apiovh:ip/task/changeMaintenanceExecutionDate"
required: true
}
]
}
]
description: "changeMaintenanceExecutionDate operations"
}
-{
path: "/dedicatedCloud/{serviceName}/ip/{network}/task/{taskId}/resetTaskState"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "network"
dataType: "ipv4Block"
paramType: "path"
fullType: "ipv4Block"
required: true
description: "IP ex: 213.186.33.34/24"
}
-{
name: "reason"
dataType: "string"
paramType: "body"
fullType: "string"
required: true
description: "Reason of task restart"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "taskId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Task id"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Relaunch operation currently in error state"
-iamActions: [
-{
name: "pccVMware:apiovh:ip/task/resetTaskState"
required: true
}
]
}
]
description: "resetTaskState operations"
}
-{
path: "/dedicatedCloud/{serviceName}/location"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.PccZone"
noAuthentication: false
description: "Get hosting location"
-iamActions: [
-{
name: "pccVMware:apiovh:location/get"
required: true
}
]
}
]
description: "Hosting location"
}
-{
path: "/dedicatedCloud/{serviceName}/location/hostProfile"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "long[]"
noAuthentication: false
description: "List host profiles on hosting location"
-iamActions: [
-{
name: "pccVMware:apiovh:location/hostProfile/get"
required: true
}
]
}
]
description: "List the dedicatedCloud.HostProfile objects"
}
-{
path: "/dedicatedCloud/{serviceName}/location/hostProfile/{id}"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "id"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of Host profile"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.HostProfile"
noAuthentication: false
description: "Get host profile"
-iamActions: [
-{
name: "pccVMware:apiovh:location/hostProfile/get"
required: true
}
]
}
]
description: "Host profile"
}
-{
path: "/dedicatedCloud/{serviceName}/location/hypervisor"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "string[]"
noAuthentication: false
description: "List hypervisor versions on hosting location"
-iamActions: [
-{
name: "pccVMware:apiovh:location/hypervisor/get"
required: true
}
]
}
]
description: "List the dedicatedCloud.Os objects"
}
-{
path: "/dedicatedCloud/{serviceName}/location/hypervisor/{shortName}"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "shortName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Short name of hypervisor"
}
]
responseType: "dedicatedCloud.Os"
noAuthentication: false
description: "Get hypervisor"
-iamActions: [
-{
name: "pccVMware:apiovh:location/hypervisor/get"
required: true
}
]
}
]
description: "Hypervisor"
}
-{
path: "/dedicatedCloud/{serviceName}/log/kind"
-operations: [
-{
-apiStatus: {
description: "Beta version"
value: "BETA"
}
httpMethod: "GET"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "string[]"
noAuthentication: false
description: "Log kinds for your dedicated cloud"
-iamActions: [
-{
name: "pccVMware:apiovh:log/kind/get"
required: true
}
]
}
]
description: "List the dedicatedCloud.ldpKind objects"
}
-{
path: "/dedicatedCloud/{serviceName}/log/kind/{name}"
-operations: [
-{
-apiStatus: {
description: "Beta version"
value: "BETA"
}
httpMethod: "GET"
-parameters: [
-{
name: "name"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Log kind name"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.ldpKind"
noAuthentication: false
description: "Get this object properties"
-iamActions: [
-{
name: "pccVMware:apiovh:log/kind/get"
required: true
}
]
}
]
description: "Log kind for your dedicated cloud"
}
-{
path: "/dedicatedCloud/{serviceName}/log/subscription"
-operations: [
-{
-apiStatus: {
description: "Beta version"
value: "BETA"
}
httpMethod: "GET"
-parameters: [
-{
name: "kind"
dataType: "string"
paramType: "query"
fullType: "string"
required: false
description: "Filter the value of kind property (=)"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "uuid[]"
noAuthentication: false
description: "Log subscriptions for your dedicated cloud"
-iamActions: [
-{
name: "pccVMware:apiovh:log/subscription/get"
required: true
}
]
}
-{
-apiStatus: {
description: "Beta version"
value: "BETA"
}
httpMethod: "POST"
-parameters: [
-{
name: "kind"
dataType: "string"
paramType: "body"
fullType: "string"
required: true
description: "Log kind name of the subscription"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "streamId"
dataType: "uuid"
paramType: "body"
fullType: "uuid"
required: true
description: "Id of the destination log stream"
}
]
responseType: "dedicatedCloud.LogSubscriptionResponse"
noAuthentication: false
description: "Create a log subscription for your dedicated cloud"
-iamActions: [
-{
name: "pccVMware:apiovh:log/subscription/create"
required: true
}
-{
name: "ldp:apiovh:output/graylog/stream/forwardTo"
description: "Required on the targeted LDP service"
required: true
}
]
}
]
description: "List the dedicatedCloud.ldpSubscription objects"
}
-{
path: "/dedicatedCloud/{serviceName}/log/subscription/{subscriptionId}"
-operations: [
-{
-apiStatus: {
description: "Beta version"
value: "BETA"
}
httpMethod: "DELETE"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "subscriptionId"
dataType: "uuid"
paramType: "path"
fullType: "uuid"
required: true
description: "Subscription ID"
}
]
responseType: "dedicatedCloud.LogSubscriptionResponse"
noAuthentication: false
description: "Delete a log subscription for your dedicated cloud"
-iamActions: [
-{
name: "pccVMware:apiovh:log/subscription/delete"
required: true
}
]
}
-{
-apiStatus: {
description: "Beta version"
value: "BETA"
}
httpMethod: "GET"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "subscriptionId"
dataType: "uuid"
paramType: "path"
fullType: "uuid"
required: true
description: "Subscription ID"
}
]
responseType: "dedicatedCloud.ldpSubscription"
noAuthentication: false
description: "Get this object properties"
-iamActions: [
-{
name: "pccVMware:apiovh:log/subscription/get"
required: true
}
]
}
]
description: "Log subscription for your dedicated cloud"
}
-{
path: "/dedicatedCloud/{serviceName}/log/url"
-operations: [
-{
-apiStatus: {
description: "Beta version"
value: "BETA"
}
httpMethod: "POST"
-parameters: [
-{
name: "kind"
dataType: "string"
paramType: "body"
fullType: "string"
required: true
description: "Log kinds for your dedicated cloud"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.LogsURL"
noAuthentication: false
description: "Generate a log url"
-iamActions: [
-{
name: "pccVMware:apiovh:log/url/create"
required: true
}
]
}
]
description: "url operations"
}
-{
path: "/dedicatedCloud/{serviceName}/logForwarder"
-operations: [
-{
-apiStatus: {
description: "Beta version"
value: "BETA"
}
httpMethod: "GET"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.LogForwarder"
noAuthentication: false
description: "Enable or disable log forwarder option"
-iamActions: [
-{
name: "pccVMware:apiovh:logForwarder/get"
required: true
}
]
}
]
description: "Log forwarder option"
}
-{
path: "/dedicatedCloud/{serviceName}/logForwarder/canBeDisabled"
-operations: [
-{
-apiStatus: {
description: "Beta version"
value: "BETA"
}
httpMethod: "GET"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "boolean"
noAuthentication: false
description: "Check if log forwarder option can be disabled"
-iamActions: [
-{
name: "pccVMware:apiovh:logForwarder/canBeDisabled/get"
required: true
}
]
}
]
description: "canBeDisabled operations"
}
-{
path: "/dedicatedCloud/{serviceName}/logForwarder/canBeEnabled"
-operations: [
-{
-apiStatus: {
description: "Beta version"
value: "BETA"
}
httpMethod: "GET"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "boolean"
noAuthentication: false
description: "Check if the log forwarder option can be enabled"
-iamActions: [
-{
name: "pccVMware:apiovh:logForwarder/canBeEnabled/get"
required: true
}
]
}
]
description: "canBeEnabled operations"
}
-{
path: "/dedicatedCloud/{serviceName}/logForwarder/disable"
-operations: [
-{
-apiStatus: {
description: "Beta version"
value: "BETA"
}
httpMethod: "POST"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Disable log forwarder option"
-iamActions: [
-{
name: "pccVMware:apiovh:logForwarder/disable"
required: true
}
]
}
]
description: "disable operations"
}
-{
path: "/dedicatedCloud/{serviceName}/logForwarder/enable"
-operations: [
-{
-apiStatus: {
description: "Beta version"
value: "BETA"
}
httpMethod: "POST"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Enable log forwarder option"
-iamActions: [
-{
name: "pccVMware:apiovh:logForwarder/enable"
required: true
}
]
}
]
description: "enable operations"
}
-{
path: "/dedicatedCloud/{serviceName}/newPrices"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.resourceNewPrices"
noAuthentication: false
description: "Get new prices"
-iamActions: [
-{
name: "pccVMware:apiovh:newPrices/get"
required: true
}
]
}
]
description: "newPrices operations"
}
-{
path: "/dedicatedCloud/{serviceName}/nsx"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Nsx"
noAuthentication: false
description: "Get VMware NSX-V option"
-iamActions: [
-{
name: "pccVMware:apiovh:nsx/get"
required: true
}
]
}
]
description: "VMware NSX-V option"
}
-{
path: "/dedicatedCloud/{serviceName}/nsx/canBeDisabled"
-operations: [
-{
-apiStatus: {
description: "Deprecated, will be removed"
value: "DEPRECATED"
deletionDate: "2019-07-01T00:00:00+01:00"
deprecatedDate: "2019-06-01T00:00:00+01:00"
replacement: "/order/upgrade/privateCloud/{serviceName}/{planCode}"
}
httpMethod: "GET"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.optionCompatibility"
noAuthentication: false
description: "Check if VMware NSX-V option can be disabled"
-iamActions: [
-{
name: "pccVMware:apiovh:nsx/canBeDisabled/get"
required: true
}
]
}
]
description: "canBeDisabled operations"
}
-{
path: "/dedicatedCloud/{serviceName}/nsx/canBeEnabled"
-operations: [
-{
-apiStatus: {
description: "Deprecated, will be removed"
value: "DEPRECATED"
deletionDate: "2019-07-01T00:00:00+01:00"
deprecatedDate: "2019-06-01T00:00:00+01:00"
replacement: "/order/upgrade/privateCloud/{serviceName}/{planCode}"
}
httpMethod: "GET"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.optionCompatibility"
noAuthentication: false
description: "Check if VMware NSX-V option can be enabled"
-iamActions: [
-{
name: "pccVMware:apiovh:nsx/canBeEnabled/get"
required: true
}
]
}
]
description: "canBeEnabled operations"
}
-{
path: "/dedicatedCloud/{serviceName}/nsx/disable"
-operations: [
-{
-apiStatus: {
description: "Deprecated, will be removed"
value: "DEPRECATED"
deletionDate: "2019-07-01T00:00:00+01:00"
deprecatedDate: "2019-06-01T00:00:00+01:00"
replacement: "/order/upgrade/privateCloud/{serviceName}/{planCode}"
}
httpMethod: "POST"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Disable VMware NSX-V option"
-iamActions: [
-{
name: "pccVMware:apiovh:nsx/disable"
required: true
}
]
}
]
description: "disable operations"
}
-{
path: "/dedicatedCloud/{serviceName}/nsx/enable"
-operations: [
-{
-apiStatus: {
description: "Deprecated, will be removed"
value: "DEPRECATED"
deletionDate: "2019-07-01T00:00:00+01:00"
deprecatedDate: "2019-06-01T00:00:00+01:00"
replacement: "/order/upgrade/privateCloud/{serviceName}/{planCode}"
}
httpMethod: "POST"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Enable VMware NSX-V option"
-iamActions: [
-{
name: "pccVMware:apiovh:nsx/enable"
required: true
}
]
}
]
description: "enable operations"
}
-{
path: "/dedicatedCloud/{serviceName}/nsxt"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Nsxt"
noAuthentication: false
description: "Get VMware NSX-T option"
-iamActions: [
-{
name: "pccVMware:apiovh:nsxt/get"
required: true
}
]
}
]
description: "VMware NSX-T option"
}
-{
path: "/dedicatedCloud/{serviceName}/orderableIpCountries"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.IpCountriesEnum[]"
noAuthentication: false
description: "Get orderable IP blocks countries"
-iamActions: [
-{
name: "pccVMware:apiovh:orderableIpCountries/get"
required: true
}
]
}
]
description: "orderableIpCountries operations"
}
-{
path: "/dedicatedCloud/{serviceName}/orderNewFilerHourly"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "name"
dataType: "string"
paramType: "body"
fullType: "string"
required: true
description: "Filer profile you want to order"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Order hourly global datastore mounted on all virtual datacenters"
-iamActions: [
-{
name: "pccVMware:apiovh:orderNewFilerHourly"
required: true
}
]
}
]
description: "orderNewFilerHourly operations"
}
-{
path: "/dedicatedCloud/{serviceName}/passwordPolicy"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.passwordPolicy"
noAuthentication: false
description: "Get password policy"
-iamActions: [
-{
name: "pccVMware:apiovh:passwordPolicy/get"
required: true
}
]
}
]
description: "passwordPolicy operations"
}
-{
path: "/dedicatedCloud/{serviceName}/pcidss"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.PciDss"
noAuthentication: false
description: "Get PCI-DSS certification option"
-iamActions: [
-{
name: "pccVMware:apiovh:pcidss/get"
required: true
}
]
}
]
description: "PCI-DSS certification option"
}
-{
path: "/dedicatedCloud/{serviceName}/pcidss/canBeDisabled"
-operations: [
-{
-apiStatus: {
description: "Deprecated, will be removed"
value: "DEPRECATED"
deletionDate: "2019-07-01T00:00:00+01:00"
deprecatedDate: "2019-06-01T00:00:00+01:00"
replacement: "/order/upgrade/privateCloud/{serviceName}/{planCode}"
}
httpMethod: "GET"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.optionCompatibility"
noAuthentication: false
description: "Check if PCI-DSS certification option can be disabled"
-iamActions: [
-{
name: "pccVMware:apiovh:pcidss/canBeDisabled/get"
required: true
}
]
}
]
description: "canBeDisabled operations"
}
-{
path: "/dedicatedCloud/{serviceName}/pcidss/canBeEnabled"
-operations: [
-{
-apiStatus: {
description: "Deprecated, will be removed"
value: "DEPRECATED"
deletionDate: "2019-07-01T00:00:00+01:00"
deprecatedDate: "2019-06-01T00:00:00+01:00"
replacement: "/order/upgrade/privateCloud/{serviceName}/{planCode}"
}
httpMethod: "GET"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.optionCompatibility"
noAuthentication: false
description: "Check if PCI-DSS certification option can be enabled"
-iamActions: [
-{
name: "pccVMware:apiovh:pcidss/canBeEnabled/get"
required: true
}
]
}
]
description: "canBeEnabled operations"
}
-{
path: "/dedicatedCloud/{serviceName}/pcidss/disable"
-operations: [
-{
-apiStatus: {
description: "Deprecated, will be removed"
value: "DEPRECATED"
deletionDate: "2019-07-01T00:00:00+01:00"
deprecatedDate: "2019-06-01T00:00:00+01:00"
replacement: "/order/upgrade/privateCloud/{serviceName}/{planCode}"
}
httpMethod: "POST"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Disable PCI-DSS certification option"
-iamActions: [
-{
name: "pccVMware:apiovh:pcidss/disable"
required: true
}
]
}
]
description: "disable operations"
}
-{
path: "/dedicatedCloud/{serviceName}/pcidss/enable"
-operations: [
-{
-apiStatus: {
description: "Deprecated, will be removed"
value: "DEPRECATED"
deletionDate: "2019-07-01T00:00:00+01:00"
deprecatedDate: "2019-06-01T00:00:00+01:00"
replacement: "/order/upgrade/privateCloud/{serviceName}/{planCode}"
}
httpMethod: "POST"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Enable PCI-DSS certification option"
-iamActions: [
-{
name: "pccVMware:apiovh:pcidss/enable"
required: true
}
]
}
]
description: "enable operations"
}
-{
path: "/dedicatedCloud/{serviceName}/resetTriggeredAlarm"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Reset all hypervisor triggered alarms"
-iamActions: [
-{
name: "pccVMware:apiovh:resetTriggeredAlarm"
required: true
}
]
}
]
description: "resetTriggeredAlarm operations"
}
-{
path: "/dedicatedCloud/{serviceName}/robot"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "string[]"
noAuthentication: false
description: "List robots"
-iamActions: [
-{
name: "pccVMware:apiovh:robot/get"
required: true
}
]
}
]
description: "List the dedicatedCloud.Robot objects"
}
-{
path: "/dedicatedCloud/{serviceName}/robot/{name}"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "name"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "The name of this robot"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Robot"
noAuthentication: false
description: "Get robot"
-iamActions: [
-{
name: "pccVMware:apiovh:robot/get"
required: true
}
]
}
]
description: "Robot"
}
-{
path: "/dedicatedCloud/{serviceName}/securityOptions"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.SecurityOption"
noAuthentication: false
description: "Get security options"
-iamActions: [
-{
name: "pccVMware:apiovh:securityOptions/get"
required: true
}
]
}
]
description: "Security option"
}
-{
path: "/dedicatedCloud/{serviceName}/securityOptions/compatibilityMatrix"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "showIncompatible"
dataType: "boolean"
paramType: "query"
fullType: "boolean"
required: false
description: "Show incompatible security options (enabled by default)"
}
-{
name: "showInternal"
dataType: "boolean"
paramType: "query"
fullType: "boolean"
required: false
description: "Show internal security options"
}
]
responseType: "dedicatedCloud.securityOption.CompatibilityMatrixEntry[]"
noAuthentication: false
description: "Get security options compatibility matrix"
-iamActions: [
-{
name: "pccVMware:apiovh:securityOptions/compatibilityMatrix/get"
required: true
}
]
}
]
description: "compatibilityMatrix operations"
}
-{
path: "/dedicatedCloud/{serviceName}/securityOptions/dependenciesTree"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "option"
dataType: "dedicatedCloud.securityOption.SecurityOptionEnum"
paramType: "query"
fullType: "dedicatedCloud.securityOption.SecurityOptionEnum"
required: true
description: "Target security option"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.securityOption.DependenciesTree"
noAuthentication: false
description: "Get security options dependencies tree"
-iamActions: [
-{
name: "pccVMware:apiovh:securityOptions/dependenciesTree/get"
required: true
}
]
}
]
description: "dependenciesTree operations"
}
-{
path: "/dedicatedCloud/{serviceName}/securityOptions/pendingOptions"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.securityOption.SecurityOptionEnum[]"
noAuthentication: false
description: "Get pending activation security options"
-iamActions: [
-{
name: "pccVMware:apiovh:securityOptions/pendingOptions/get"
required: true
}
]
}
]
description: "pendingOptions operations"
}
-{
path: "/dedicatedCloud/{serviceName}/securityOptions/resumePendingEnabling"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "option"
dataType: "dedicatedCloud.securityOption.SecurityOptionEnum"
paramType: "body"
fullType: "dedicatedCloud.securityOption.SecurityOptionEnum"
required: true
description: "Security option to resume enabling"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Retry pending security option activation"
-iamActions: [
-{
name: "pccVMware:apiovh:securityOptions/resumePendingEnabling"
required: true
}
]
}
]
description: "resumePendingEnabling operations"
}
-{
path: "/dedicatedCloud/{serviceName}/serviceInfos"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "services.Service"
noAuthentication: false
description: "Get service information"
-iamActions: [
-{
name: "pccVMware:apiovh:serviceInfos/get"
required: true
}
]
}
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "PUT"
-parameters: [
-{
dataType: "services.Service"
paramType: "body"
fullType: "services.Service"
required: true
description: "New object properties"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "void"
noAuthentication: false
description: "Update service information"
-iamActions: [
-{
name: "pccVMware:apiovh:serviceInfos/edit"
required: true
}
]
}
]
description: "Details about a Service"
}
-{
path: "/dedicatedCloud/{serviceName}/servicePack"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.servicePackStatus"
noAuthentication: false
description: "Get service pack information"
-iamActions: [
-{
name: "pccVMware:apiovh:servicePack/get"
required: true
}
]
}
]
description: "servicePack operations"
}
-{
path: "/dedicatedCloud/{serviceName}/servicePacks"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "string[]"
noAuthentication: false
description: "List service packs"
-iamActions: [
-{
name: "pccVMware:apiovh:servicePacks/get"
required: true
}
]
}
]
description: "List the dedicatedCloud.ServicePack objects"
}
-{
path: "/dedicatedCloud/{serviceName}/servicePacks/{name}"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "name"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Name of the Service Pack"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.ServicePack"
noAuthentication: false
description: "Get service pack"
-iamActions: [
-{
name: "pccVMware:apiovh:servicePacks/get"
required: true
}
]
}
]
description: "Service pack"
}
-{
path: "/dedicatedCloud/{serviceName}/tag"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "string[]"
noAuthentication: false
description: "List tags"
-iamActions: [
-{
name: "pccVMware:apiovh:tag/get"
required: true
}
]
}
]
description: "List the dedicatedCloud.Tag objects"
}
-{
path: "/dedicatedCloud/{serviceName}/tag/{name}"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "name"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Name of the tag"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Tag"
noAuthentication: false
description: "Get this object properties"
-iamActions: [
-{
name: "pccVMware:apiovh:tag/get"
required: true
}
]
}
]
description: "Tag"
}
-{
path: "/dedicatedCloud/{serviceName}/task"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "executionDate"
dataType: "datetime"
paramType: "query"
fullType: "datetime"
required: false
description: "Filter the value of executionDate property (>=)"
}
-{
name: "name"
dataType: "string"
paramType: "query"
fullType: "string"
required: false
description: "Filter the value of name property (like)"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "state"
dataType: "dedicatedCloud.TaskStateEnum"
paramType: "query"
fullType: "dedicatedCloud.TaskStateEnum"
required: false
description: "Filter the value of state property (=)"
}
]
responseType: "long[]"
noAuthentication: false
description: "List operations"
-iamActions: [
-{
name: "pccVMware:apiovh:task/get"
required: true
}
]
}
]
description: "List the dedicatedCloud.Task objects"
}
-{
path: "/dedicatedCloud/{serviceName}/task/{taskId}"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "taskId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Task id"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Get operation"
-iamActions: [
-{
name: "pccVMware:apiovh:task/get"
required: true
}
]
}
]
description: "Operation"
}
-{
path: "/dedicatedCloud/{serviceName}/task/{taskId}/changeMaintenanceExecutionDate"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "executionDate"
dataType: "datetime"
paramType: "body"
fullType: "datetime"
required: true
description: "The new execution date"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "taskId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Task id"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Change the execution date of a maintenance operation"
-iamActions: [
-{
name: "pccVMware:apiovh:task/changeMaintenanceExecutionDate"
required: true
}
]
}
]
description: "changeMaintenanceExecutionDate operations"
}
-{
path: "/dedicatedCloud/{serviceName}/task/{taskId}/resetTaskState"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "reason"
dataType: "string"
paramType: "body"
fullType: "string"
required: true
description: "Reason of task restart"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "taskId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Task id"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Relaunch operation currently in error state"
-iamActions: [
-{
name: "pccVMware:apiovh:task/resetTaskState"
required: true
}
]
}
]
description: "resetTaskState operations"
}
-{
path: "/dedicatedCloud/{serviceName}/terminate"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "string"
noAuthentication: false
description: "Ask for the termination of your service"
longDescription: "Ask for the termination of your service. Admin contact of this service will receive a termination token by email in order to confirm its termination with /confirmTermination endpoint."
-iamActions: [
-{
name: "pccVMware:apiovh:terminate"
required: true
}
]
}
]
description: "Ask for the termination of your service. Admin contact of this service will receive a termination token in order to confirm its termination with /confirmTermination endpoint."
}
-{
path: "/dedicatedCloud/{serviceName}/twoFAWhitelist"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "long[]"
noAuthentication: false
description: "List two factor authentication whitelisted networks"
-iamActions: [
-{
name: "pccVMware:apiovh:twoFAWhitelist/get"
required: true
}
]
}
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "description"
dataType: "string"
paramType: "body"
fullType: "string"
required: true
description: "Description of the exception"
}
-{
name: "ip"
dataType: "ipBlock"
paramType: "body"
fullType: "ipBlock"
required: true
description: "IP address or network of the remote service, e.g. 123.100.200.0"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Create two factor authentication whitelisted network"
-iamActions: [
-{
name: "pccVMware:apiovh:twoFAWhitelist/create"
required: true
}
]
}
]
description: "List the dedicatedCloud.twoFAWhitelist objects"
}
-{
path: "/dedicatedCloud/{serviceName}/twoFAWhitelist/{id}"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "DELETE"
-parameters: [
-{
name: "id"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the trusted IP"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Remove two factor authentication whitelisted network"
-iamActions: [
-{
name: "pccVMware:apiovh:twoFAWhitelist/delete"
required: true
}
]
}
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "id"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the trusted IP"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.twoFAWhitelist"
noAuthentication: false
description: "Get two factor authentication whitelisted network"
-iamActions: [
-{
name: "pccVMware:apiovh:twoFAWhitelist/get"
required: true
}
]
}
]
description: "Two factor authentication whitelisted network"
}
-{
path: "/dedicatedCloud/{serviceName}/twoFAWhitelist/{id}/changeProperties"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "description"
dataType: "string"
paramType: "body"
fullType: "string"
required: false
description: "Description of your whitelist"
}
-{
name: "id"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the trusted IP"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Update two factor authentication whitelisted network"
-iamActions: [
-{
name: "pccVMware:apiovh:twoFAWhitelist/changeProperties"
required: true
}
]
}
]
description: "changeProperties operations"
}
-{
path: "/dedicatedCloud/{serviceName}/upgradeHypervisor"
-operations: [
-{
-apiStatus: {
description: "Deprecated, will be removed"
value: "DEPRECATED"
deletionDate: "2020-03-01T00:00:00+01:00"
deprecatedDate: "2019-12-16T00:00:00+01:00"
replacement: "/dedicatedCloud/{serviceName}/upgradeVcenter"
}
httpMethod: "POST"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Upgrade hypervisor to next version"
-iamActions: [
-{
name: "pccVMware:apiovh:upgradeHypervisor"
required: true
}
]
}
]
description: "upgradeHypervisor operations"
}
-{
path: "/dedicatedCloud/{serviceName}/upgradeVcenter"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "release"
dataType: "dedicatedCloud.releaseEnum"
paramType: "body"
fullType: "dedicatedCloud.releaseEnum"
required: false
description: "Version information for vCenter upgrade (minor by default)"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Upgrade hypervisor to next version"
-iamActions: [
-{
name: "pccVMware:apiovh:upgradeVcenter"
required: true
}
]
}
]
description: "upgradeVcenter operations"
}
-{
path: "/dedicatedCloud/{serviceName}/user"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "name"
dataType: "string"
paramType: "query"
fullType: "string"
required: false
description: "Filter the value of name property (like)"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "long[]"
noAuthentication: false
description: "List users"
-iamActions: [
-{
name: "pccVMware:apiovh:user/get"
required: true
}
]
}
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "canAddRessource"
dataType: "boolean"
paramType: "body"
fullType: "boolean"
required: false
description: "Is this User able to add ressources in the Datacenter he has access ? (default is no right to add ressource)"
}
-{
name: "canManageRights"
dataType: "boolean"
paramType: "body"
fullType: "boolean"
required: false
description: "Is this user able to manage the users rights"
}
-{
name: "email"
dataType: "string"
paramType: "body"
fullType: "string"
required: false
description: "The user email. If this field is empty, user informations will be sent to the dedicatedCloud administrator contact."
}
-{
name: "encryptionRight"
dataType: "boolean"
paramType: "body"
fullType: "boolean"
required: false
description: "Defines if the user can manage encryption / KMS configuration"
}
-{
name: "expirationDate"
dataType: "datetime"
paramType: "body"
fullType: "datetime"
required: false
description: "Date of removal of the user."
}
-{
name: "firstName"
dataType: "string"
paramType: "body"
fullType: "string"
required: false
description: "First name of the user"
}
-{
name: "lastName"
dataType: "string"
paramType: "body"
fullType: "string"
required: false
description: "Last name of the user"
}
-{
name: "name"
dataType: "string"
paramType: "body"
fullType: "string"
required: true
description: "Name of the user (login)"
}
-{
name: "networkRole"
dataType: "dedicatedCloud.right.NetworkRoleEnum"
paramType: "body"
fullType: "dedicatedCloud.right.NetworkRoleEnum"
required: false
description: "Determine how this user will be able to act on this VMware on OVHcloud v(x)Lans"
}
-{
name: "nsxRight"
dataType: "boolean"
paramType: "body"
fullType: "boolean"
required: false
description: "Is this User able to access nsx interface (requires NSX option)"
}
-{
name: "password"
dataType: "password"
paramType: "body"
fullType: "password"
required: false
description: "The user password. It must fits your VMware on OVHcloud password policy. If this field is empty, a random password will be generated and sent by email."
}
-{
name: "phoneNumber"
dataType: "string"
paramType: "body"
fullType: "string"
required: false
description: "Mobile phone number of the user"
}
-{
name: "receiveAlerts"
dataType: "boolean"
paramType: "body"
fullType: "boolean"
required: false
description: "Defines if the user receives technical alerts"
}
-{
name: "right"
dataType: "dedicatedCloud.right.RightEnum"
paramType: "body"
fullType: "dedicatedCloud.right.RightEnum"
required: false
description: "Determine what kind of access the User will have in all Datacenters of your VMware on OVHcloud (default is disabled)"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "tokenValidator"
dataType: "boolean"
paramType: "body"
fullType: "boolean"
required: false
description: "Defines if the user can confirm security tokens (if a compatible option is enabled)"
}
-{
name: "vmNetworkRole"
dataType: "dedicatedCloud.right.VmNetworkRoleEnum"
paramType: "body"
fullType: "dedicatedCloud.right.VmNetworkRoleEnum"
required: false
description: "Determine how this user will be able to act on this VMware on OVHcloud VM Network"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Create user"
-iamActions: [
-{
name: "pccVMware:apiovh:user/create"
required: true
}
]
}
]
description: "List the dedicatedCloud.User objects"
}
-{
path: "/dedicatedCloud/{serviceName}/user/{userId}"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "DELETE"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "userId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: ""
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Remove user"
-iamActions: [
-{
name: "pccVMware:apiovh:user/delete"
required: true
}
]
}
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "userId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: ""
}
]
responseType: "dedicatedCloud.User"
noAuthentication: false
description: "Update user"
-iamActions: [
-{
name: "pccVMware:apiovh:user/get"
required: true
}
]
}
]
description: "User"
}
-{
path: "/dedicatedCloud/{serviceName}/user/{userId}/changePassword"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "password"
dataType: "password"
paramType: "body"
fullType: "password"
required: false
description: "New password for this VMware on OVHcloud user. It must fit your VMware on OVHcloud password policy. If this field is empty, a random password will be generated and sent by email."
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "userId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: ""
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Change user password"
-iamActions: [
-{
name: "pccVMware:apiovh:user/changePassword"
required: true
}
]
}
]
description: "changePassword operations"
}
-{
path: "/dedicatedCloud/{serviceName}/user/{userId}/changeProperties"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "canManageIpFailOvers"
dataType: "boolean"
paramType: "body"
fullType: "boolean"
required: false
description: "Defines if the user can manage ip failovers"
}
-{
name: "canManageNetwork"
dataType: "boolean"
paramType: "body"
fullType: "boolean"
required: false
description: "Defines if the user can manage the network"
}
-{
name: "canManageRights"
dataType: "boolean"
paramType: "body"
fullType: "boolean"
required: false
description: "Defines if the user can manage the users rights"
}
-{
name: "email"
dataType: "string"
paramType: "body"
fullType: "string"
required: false
description: "Email address of the user"
}
-{
name: "encryptionRight"
dataType: "boolean"
paramType: "body"
fullType: "boolean"
required: false
description: "Defines if the user can manage encryption / KMS configuration"
}
-{
name: "firstName"
dataType: "string"
paramType: "body"
fullType: "string"
required: false
description: "First name of the user"
}
-{
name: "fullAdminRo"
dataType: "boolean"
paramType: "body"
fullType: "boolean"
required: false
description: "Defines if the user is a full admin in readonly"
}
-{
name: "lastName"
dataType: "string"
paramType: "body"
fullType: "string"
required: false
description: "Last name of the user"
}
-{
name: "nsxRight"
dataType: "boolean"
paramType: "body"
fullType: "boolean"
required: false
description: "Is this User able to access nsx interface (requires NSX option)"
}
-{
name: "phoneNumber"
dataType: "string"
paramType: "body"
fullType: "string"
required: false
description: "Mobile phone number of the user in international format (+prefix.number)"
}
-{
name: "receiveAlerts"
dataType: "boolean"
paramType: "body"
fullType: "boolean"
required: false
description: "Defines if the user receives technical alerts"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "tokenValidator"
dataType: "boolean"
paramType: "body"
fullType: "boolean"
required: false
description: "Defines if the user can confirm security tokens (if a compatible option is enabled)"
}
-{
name: "userId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: ""
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Update user"
-iamActions: [
-{
name: "pccVMware:apiovh:user/changeProperties"
required: true
}
]
}
]
description: "changeProperties operations"
}
-{
path: "/dedicatedCloud/{serviceName}/user/{userId}/confirmPhoneNumber"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "token"
dataType: "password"
paramType: "body"
fullType: "password"
required: true
description: "Token sent by SMS"
}
-{
name: "userId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: ""
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Confirm user phone number"
-iamActions: [
-{
name: "pccVMware:apiovh:user/confirmPhoneNumber"
required: true
}
]
}
]
description: "confirmPhoneNumber operations"
}
-{
path: "/dedicatedCloud/{serviceName}/user/{userId}/disable"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "userId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: ""
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Disable user"
-iamActions: [
-{
name: "pccVMware:apiovh:user/disable"
required: true
}
]
}
]
description: "disable operations"
}
-{
path: "/dedicatedCloud/{serviceName}/user/{userId}/enable"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "userId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: ""
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Enable user"
-iamActions: [
-{
name: "pccVMware:apiovh:user/enable"
required: true
}
]
}
]
description: "enable operations"
}
-{
path: "/dedicatedCloud/{serviceName}/user/{userId}/objectRight"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "userId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: ""
}
]
responseType: "long[]"
noAuthentication: false
description: "List user object rights"
-iamActions: [
-{
name: "pccVMware:apiovh:user/objectRight/get"
required: true
}
]
}
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "propagate"
dataType: "boolean"
paramType: "body"
fullType: "boolean"
required: false
description: "Right propagation on children objects"
}
-{
name: "right"
dataType: "dedicatedCloud.right.RightEnum"
paramType: "body"
fullType: "dedicatedCloud.right.RightEnum"
required: true
description: "User access on the VMware object"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "type"
dataType: "dedicatedCloud.right.UserObjectRightTypeEnum"
paramType: "body"
fullType: "dedicatedCloud.right.UserObjectRightTypeEnum"
required: true
description: "Type of the object"
}
-{
name: "userId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: ""
}
-{
name: "vmwareObjectId"
dataType: "string"
paramType: "body"
fullType: "string"
required: true
description: "The VMware MoRef of the object"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Create user object right"
-iamActions: [
-{
name: "pccVMware:apiovh:user/objectRight/create"
required: true
}
]
}
]
description: "List the dedicatedCloud.ObjectRight objects"
}
-{
path: "/dedicatedCloud/{serviceName}/user/{userId}/objectRight/{objectRightId}"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "DELETE"
-parameters: [
-{
name: "objectRightId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: ""
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "userId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: ""
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Remove user object right"
-iamActions: [
-{
name: "pccVMware:apiovh:user/objectRight/delete"
required: true
}
]
}
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "objectRightId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: ""
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "userId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: ""
}
]
responseType: "dedicatedCloud.ObjectRight"
noAuthentication: false
description: "Get user object right"
-iamActions: [
-{
name: "pccVMware:apiovh:user/objectRight/get"
required: true
}
]
}
]
description: "User object right"
}
-{
path: "/dedicatedCloud/{serviceName}/user/{userId}/right"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "userId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: ""
}
]
responseType: "long[]"
noAuthentication: false
description: "List user datacenter rights"
-iamActions: [
-{
name: "pccVMware:apiovh:user/right/get"
required: true
}
]
}
]
description: "List the dedicatedCloud.Right objects"
}
-{
path: "/dedicatedCloud/{serviceName}/user/{userId}/right/{rightId}"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "rightId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: ""
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "userId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: ""
}
]
responseType: "dedicatedCloud.Right"
noAuthentication: false
description: "Get user datacenter right"
-iamActions: [
-{
name: "pccVMware:apiovh:user/right/get"
required: true
}
]
}
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "PUT"
-parameters: [
-{
dataType: "dedicatedCloud.Right"
paramType: "body"
fullType: "dedicatedCloud.Right"
required: true
description: "New object properties"
}
-{
name: "rightId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: ""
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "userId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: ""
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Update user datacenter right"
-iamActions: [
-{
name: "pccVMware:apiovh:user/right/edit"
required: true
}
]
}
]
description: "User datacenter right"
}
-{
path: "/dedicatedCloud/{serviceName}/user/{userId}/task"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "name"
dataType: "string"
paramType: "query"
fullType: "string"
required: false
description: "Filter the value of name property (like)"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "state"
dataType: "dedicatedCloud.TaskStateEnum"
paramType: "query"
fullType: "dedicatedCloud.TaskStateEnum"
required: false
description: "Filter the value of state property (=)"
}
-{
name: "userId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: ""
}
]
responseType: "long[]"
noAuthentication: false
description: "List operations associated to user"
-iamActions: [
-{
name: "pccVMware:apiovh:user/task/get"
required: true
}
]
}
]
description: "List the dedicatedCloud.Task objects"
}
-{
path: "/dedicatedCloud/{serviceName}/user/{userId}/task/{taskId}"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "taskId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Task id"
}
-{
name: "userId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: ""
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Get operation"
-iamActions: [
-{
name: "pccVMware:apiovh:user/task/get"
required: true
}
]
}
]
description: "Operation"
}
-{
path: "/dedicatedCloud/{serviceName}/user/{userId}/task/{taskId}/changeMaintenanceExecutionDate"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "executionDate"
dataType: "datetime"
paramType: "body"
fullType: "datetime"
required: true
description: "The new execution date"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "taskId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Task id"
}
-{
name: "userId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: ""
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Change the execution date of a maintenance operation"
-iamActions: [
-{
name: "pccVMware:apiovh:user/task/changeMaintenanceExecutionDate"
required: true
}
]
}
]
description: "changeMaintenanceExecutionDate operations"
}
-{
path: "/dedicatedCloud/{serviceName}/user/{userId}/task/{taskId}/resetTaskState"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "reason"
dataType: "string"
paramType: "body"
fullType: "string"
required: true
description: "Reason of task restart"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "taskId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Task id"
}
-{
name: "userId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: ""
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Relaunch operation currently in error state"
-iamActions: [
-{
name: "pccVMware:apiovh:user/task/resetTaskState"
required: true
}
]
}
]
description: "resetTaskState operations"
}
-{
path: "/dedicatedCloud/{serviceName}/vcenterVersion"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.vcenter"
noAuthentication: false
description: "Get available upgrades for hypervisor"
-iamActions: [
-{
name: "pccVMware:apiovh:vcenterVersion/get"
required: true
}
]
}
]
description: "vcenterVersion operations"
}
-{
path: "/dedicatedCloud/{serviceName}/vendor"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Vendor"
noAuthentication: false
description: "Get vendor information"
-iamActions: [
-{
name: "pccVMware:apiovh:vendor/get"
required: true
}
]
}
]
description: "Vendor information"
}
-{
path: "/dedicatedCloud/{serviceName}/vendor/objectType"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "string[]"
noAuthentication: false
description: "Get vendor object types"
-iamActions: [
-{
name: "pccVMware:apiovh:vendor/objectType/create"
required: true
}
]
}
]
description: "objectType operations"
}
-{
path: "/dedicatedCloud/{serviceName}/vendor/ovhId"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "objectType"
dataType: "dedicatedCloud.VendorObjectTypeEnum"
paramType: "body"
fullType: "dedicatedCloud.VendorObjectTypeEnum"
required: true
description: "object type"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "vendorId"
dataType: "string"
paramType: "body"
fullType: "string"
required: true
description: "object type id"
}
]
responseType: "dedicatedCloud.vendor.OvhId"
noAuthentication: false
description: "Get OVHcloud API id for object"
-iamActions: [
-{
name: "pccVMware:apiovh:vendor/ovhId/create"
required: true
}
]
}
]
description: "ovhId operations"
}
-{
path: "/dedicatedCloud/{serviceName}/vlan"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "long[]"
noAuthentication: false
description: "List vLANs"
-iamActions: [
-{
name: "pccVMware:apiovh:vlan/get"
required: true
}
]
}
]
description: "List the dedicatedCloud.Vlan objects"
}
-{
path: "/dedicatedCloud/{serviceName}/vlan/{vlanId}"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "vlanId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: ""
}
]
responseType: "dedicatedCloud.Vlan"
noAuthentication: false
description: "Get vLAN"
-iamActions: [
-{
name: "pccVMware:apiovh:vlan/get"
required: true
}
]
}
]
description: "vLAN"
}
-{
path: "/dedicatedCloud/{serviceName}/vmEncryption"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.VMEncryption"
noAuthentication: false
description: "Get virtual machine encryption option"
-iamActions: [
-{
name: "pccVMware:apiovh:vmEncryption/get"
required: true
}
]
}
]
description: "Virtual machine encryption option"
}
-{
path: "/dedicatedCloud/{serviceName}/vmEncryption/kms"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "long[]"
noAuthentication: false
description: "List virtual machine encryption KMS servers"
-iamActions: [
-{
name: "pccVMware:apiovh:vmEncryption/kms/get"
required: true
}
]
}
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "description"
dataType: "string"
paramType: "body"
fullType: "string"
required: false
description: "Description of your option access network"
}
-{
name: "ip"
dataType: "ipv4"
paramType: "body"
fullType: "ipv4"
required: true
description: "IP address of the remote service, e.g. 123.100.200.0"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "sslThumbprint"
dataType: "string"
paramType: "body"
fullType: "string"
required: true
description: "SSL thumbprint of the remote service, e.g. A7:61:68:...:61:91:2F"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Create virtual machine encryption KMS server"
-iamActions: [
-{
name: "pccVMware:apiovh:vmEncryption/kms/create"
required: true
}
]
}
]
description: "List the dedicatedCloud.VMEncryptionAccessNetwork objects"
}
-{
path: "/dedicatedCloud/{serviceName}/vmEncryption/kms/{kmsId}"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "DELETE"
-parameters: [
-{
name: "kmsId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the VM Encryption KMS"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Remove virtual machine encryption KMS server"
-iamActions: [
-{
name: "pccVMware:apiovh:vmEncryption/kms/delete"
required: true
}
]
}
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "kmsId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the VM Encryption KMS"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.VMEncryptionAccessNetwork"
noAuthentication: false
description: "Get virtual machine encryption KMS server"
-iamActions: [
-{
name: "pccVMware:apiovh:vmEncryption/kms/get"
required: true
}
]
}
]
description: "Virtual machine encryption KMS server"
}
-{
path: "/dedicatedCloud/{serviceName}/vmEncryption/kms/{kmsId}/changeProperties"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "description"
dataType: "string"
paramType: "body"
fullType: "string"
required: false
description: "Description of your option access network"
}
-{
name: "kmsId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the VM Encryption KMS"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "sslThumbprint"
dataType: "string"
paramType: "body"
fullType: "string"
required: true
description: "SSL thumbprint of the remote service, e.g. A7:61:68:...:61:91:2F"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Update virtual machine encryption KMS server"
-iamActions: [
-{
name: "pccVMware:apiovh:vmEncryption/kms/changeProperties"
required: true
}
]
}
]
description: "changeProperties operations"
}
-{
path: "/dedicatedCloud/{serviceName}/vmwareCloudDirectorEligibility"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Check PCC eligibility for VCD migration"
-iamActions: [
-{
name: "pccVMware:apiovh:vmwareCloudDirectorEligibility"
required: true
}
]
}
]
description: "vmwareCloudDirectorEligibility operations"
}
-{
path: "/dedicatedCloud/{serviceName}/vrack"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "string[]"
noAuthentication: false
description: "List vRacks"
-iamActions: [
-{
name: "pccVMware:apiovh:vrack/get"
required: true
}
]
}
]
description: "List the vrack.dedicatedCloud objects"
}
-{
path: "/dedicatedCloud/{serviceName}/vrack/{vrack}"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "DELETE"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "vrack"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "vrack name"
}
]
responseType: "vrack.Task"
noAuthentication: false
description: "Remove VMware on OVHcloud from vRack"
-iamActions: [
-{
name: "pccVMware:apiovh:vrack/delete"
required: true
}
]
}
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "vrack"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "vrack name"
}
]
responseType: "vrack.dedicatedCloud"
noAuthentication: false
description: "Get vRack"
-iamActions: [
-{
name: "pccVMware:apiovh:vrack/get"
required: true
}
]
}
]
description: "VMware on OVHcloud vRack link"
}
-{
path: "/dedicatedCloud/{serviceName}/vrops"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Vrops"
noAuthentication: false
description: "Get VMware Aria Operations option"
-iamActions: [
-{
name: "pccVMware:apiovh:vrops/get"
required: true
}
]
}
]
description: "VMware Aria Operations option"
}
-{
path: "/dedicatedCloud/{serviceName}/vrops/canBeDisabled"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.optionCompatibility"
noAuthentication: false
description: "Check if VMware Aria Operations option can be disabled"
-iamActions: [
-{
name: "pccVMware:apiovh:vrops/canBeDisabled/get"
required: true
}
]
}
]
description: "canBeDisabled operations"
}
-{
path: "/dedicatedCloud/{serviceName}/vrops/canBeEnabled"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.optionCompatibility"
noAuthentication: false
description: "Check if VMware Aria Operations option can be enabled"
-iamActions: [
-{
name: "pccVMware:apiovh:vrops/canBeEnabled/get"
required: true
}
]
}
]
description: "canBeEnabled operations"
}
-{
path: "/dedicatedCloud/{serviceName}/vrops/disable"
-operations: [
-{
-apiStatus: {
description: "Deprecated, will be removed"
value: "DEPRECATED"
deletionDate: "2019-07-01T00:00:00+01:00"
deprecatedDate: "2019-06-01T00:00:00+01:00"
replacement: "/order/upgrade/privateCloud/{serviceName}/{planCode}"
}
httpMethod: "POST"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Disable VMware Aria Operations option"
-iamActions: [
-{
name: "pccVMware:apiovh:vrops/disable"
required: true
}
]
}
]
description: "disable operations"
}
-{
path: "/dedicatedCloud/{serviceName}/vrops/enable"
-operations: [
-{
-apiStatus: {
description: "Deprecated, will be removed"
value: "DEPRECATED"
deletionDate: "2019-07-01T00:00:00+01:00"
deprecatedDate: "2019-06-01T00:00:00+01:00"
replacement: "/order/upgrade/privateCloud/{serviceName}/{planCode}"
}
httpMethod: "POST"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Enable VMware Aria Operations option"
-iamActions: [
-{
name: "pccVMware:apiovh:vrops/enable"
required: true
}
]
}
]
description: "enable operations"
}
-{
path: "/dedicatedCloud/{serviceName}/vrops/outgoingFlow"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "long[]"
noAuthentication: false
description: "List VMware Aria Operations outgoing flows"
-iamActions: [
-{
name: "pccVMware:apiovh:vrops/outgoingFlow/get"
required: true
}
]
}
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "description"
dataType: "string"
paramType: "body"
fullType: "string"
required: false
description: "Outgoing flow description"
}
-{
name: "ip"
dataType: "ipv4"
paramType: "body"
fullType: "ipv4"
required: true
description: "IP address of the remote service, e.g. 123.100.200.0"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "servicePort"
dataType: "long"
paramType: "body"
fullType: "long"
required: true
description: "Remote service port (25, 465, 587 or 2525)"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Create VMware Aria Operations outgoing flow"
-iamActions: [
-{
name: "pccVMware:apiovh:vrops/outgoingFlow/create"
required: true
}
]
}
]
description: "List the dedicatedCloud.VropsOutgoingFlow objects"
}
-{
path: "/dedicatedCloud/{serviceName}/vrops/outgoingFlow/{outgoingFlowId}"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "DELETE"
-parameters: [
-{
name: "outgoingFlowId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the VMware Aria Operations outgoing flow"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Remove VMware Aria Operations outgoing flow"
-iamActions: [
-{
name: "pccVMware:apiovh:vrops/outgoingFlow/delete"
required: true
}
]
}
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "outgoingFlowId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the VMware Aria Operations outgoing flow"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.VropsOutgoingFlow"
noAuthentication: false
description: "Get VMware Aria Operations outgoing flows"
-iamActions: [
-{
name: "pccVMware:apiovh:vrops/outgoingFlow/get"
required: true
}
]
}
]
description: "VMware Aria Operations outgoing flows"
}
-{
path: "/dedicatedCloud/{serviceName}/vrops/outgoingFlow/{outgoingFlowId}/changeProperties"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "description"
dataType: "string"
paramType: "body"
fullType: "string"
required: false
description: "Outgoing flow description"
}
-{
name: "outgoingFlowId"
dataType: "long"
paramType: "path"
fullType: "long"
required: true
description: "Id of the VMware Aria Operations outgoing flow"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Update VMware Aria Operations outgoing flow"
-iamActions: [
-{
name: "pccVMware:apiovh:vrops/outgoingFlow/changeProperties"
required: true
}
]
}
]
description: "changeProperties operations"
}
-{
path: "/dedicatedCloud/{serviceName}/vrops/upgrade"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Domain of the service"
}
-{
name: "version"
dataType: "string"
paramType: "body"
fullType: "string"
required: false
description: "Target version for VMware Aria Operations upgrade"
}
]
responseType: "dedicatedCloud.Task"
noAuthentication: false
description: "Upgrade VMware Aria Operations"
-iamActions: [
-{
name: "pccVMware:apiovh:vrops/upgrade"
required: true
}
]
}
]
description: "upgrade operations"
}
]
resourcePath: "/dedicatedCloud"
basePath: https://ca.api.ovh.com/1.0
-models: {
-complexType.UnitAndValue<T>: {
id: "UnitAndValue"
namespace: "complexType"
description: "A numeric value tagged with its unit"
-generics: [
"T"
]
-properties: {
-unit: {
type: "string"
canBeNull: false
readOnly: false
required: false
}
-value: {
type: "T"
canBeNull: false
readOnly: false
required: false
}
}
}
-complexType.UnitAndValue<double>: {
id: "UnitAndValue"
namespace: "complexType"
description: "A numeric value tagged with its unit"
-generics: [
"T"
]
-properties: {
-unit: {
type: "string"
canBeNull: false
readOnly: false
required: false
}
-value: {
type: "T"
canBeNull: false
readOnly: false
required: false
}
}
}
-complexType.UnitAndValue<long>: {
id: "UnitAndValue"
namespace: "complexType"
description: "A numeric value tagged with its unit"
-generics: [
"T"
]
-properties: {
-unit: {
type: "string"
canBeNull: false
readOnly: false
required: false
}
-value: {
type: "T"
canBeNull: false
readOnly: false
required: false
}
}
}
-dedicated.DatacenterEnum: {
id: "DatacenterEnum"
namespace: "dedicated"
description: "ovh datacenter"
-enum: [
"bhs1"
"bhs2"
"bhs3"
"bhs4"
"bhs5"
"bhs6"
"bhs7"
"bhs8"
"cch01"
"crx1"
"crx2"
"dc1"
"eri1"
"eri2"
"gra04"
"gra1"
"gra2"
"gra3"
"gsw"
"hdf01"
"hil1"
"ieb01"
"lil1-int1"
"lim1"
"lim2"
"lim3"
"mr901"
"p19"
"rbx"
"rbx-hz"
"rbx1"
"rbx10"
"rbx2"
"rbx3"
"rbx4"
"rbx5"
"rbx6"
"rbx7"
"rbx8"
"rbx9"
"sbg1"
"sbg2"
"sbg3"
"sbg4"
"sbg5"
"sgp02"
"sgp1"
"syd03"
"syd1"
"syd2"
"vin1"
"waw1"
"ynm1"
"yyz01"
]
enumType: "string"
}
-dedicatedCloud.AllowedNetwork: {
id: "AllowedNetwork"
namespace: "dedicatedCloud"
description: "Network allowed on infrastructure firewall"
-properties: {
-description: {
type: "string"
fullType: "string"
canBeNull: true
readOnly: false
required: false
}
-network: {
type: "ipv4Block"
fullType: "ipv4Block"
canBeNull: false
readOnly: false
description: "Network name, e.g. 123.100.200.0/32"
required: false
}
-networkAccessId: {
type: "long"
fullType: "long"
canBeNull: false
readOnly: true
required: false
}
-state: {
type: "dedicatedCloud.AllowedNetworkStateEnum"
fullType: "dedicatedCloud.AllowedNetworkStateEnum"
canBeNull: false
readOnly: true
required: false
}
}
}
-dedicatedCloud.AllowedNetworkStateEnum: {
id: "AllowedNetworkStateEnum"
namespace: "dedicatedCloud"
description: "All states an Allowed Network can be in"
-enum: [
"allowed"
"toDelete"
"toUpdate"
]
enumType: "string"
}
-dedicatedCloud.AutoScaleConfig: {
id: "AutoScaleConfig"
namespace: "dedicatedCloud"
description: "Autoscale configuration"
-properties: {
-cpuMaxThreshold: {
type: "long"
fullType: "long"
canBeNull: false
readOnly: false
description: "CPU Max Threshold"
required: false
}
-cpuMinThreshold: {
type: "long"
fullType: "long"
canBeNull: false
readOnly: false
description: "CPU Min Threshold"
required: false
}
-description: {
type: "string"
fullType: "string"
canBeNull: true
readOnly: false
description: "Description of AutoScale configurations"
required: false
}
-id: {
type: "long"
fullType: "long"
canBeNull: false
readOnly: true
description: "Id of the AutoScale configuration"
required: false
}
-maxNumOfHosts: {
type: "long"
fullType: "long"
canBeNull: false
readOnly: false
description: "Maximum number of hosts in the cluster"
required: false
}
-memMaxThreshold: {
type: "long"
fullType: "long"
canBeNull: false
readOnly: false
description: "Memory Max Threshold"
required: false
}
-memMinThreshold: {
type: "long"
fullType: "long"
canBeNull: false
readOnly: false
description: "Memory Min Threshold"
required: false
}
-minNumOfHosts: {
type: "long"
fullType: "long"
canBeNull: false
readOnly: false
description: "Minimum number of hosts in the cluster"
required: false
}
-storageMaxThreshold: {
type: "long"
fullType: "long"
canBeNull: false
readOnly: false
description: "Storage Max Threshold"
required: false
}
-timeDelayScaleIn: {
type: "long"
fullType: "long"
canBeNull: false
readOnly: false
description: "Time delay between two scale-ins in mins"
required: false
}
-timeDelayScaleOut: {
type: "long"
fullType: "long"
canBeNull: false
readOnly: false
description: "Time delay between two scale-outs in mins"
required: false
}
-timeDelayStorageScaleOut: {
type: "long"
fullType: "long"
canBeNull: false
readOnly: false
description: "Time delay between two storage scale-outs in mins"
required: false
}
}
}
-dedicatedCloud.AutoScaleVirtual: {
id: "AutoScaleVirtual"
namespace: "dedicatedCloud"
description: "Autoscale option"
-properties: {
-state: {
type: "dedicatedCloud.option.StateEnum"
fullType: "dedicatedCloud.option.StateEnum"
canBeNull: false
readOnly: true
description: "State of the option"
required: false
}
}
}
-dedicatedCloud.Backup: {
id: "Backup"
namespace: "dedicatedCloud"
description: "Backup option"
-properties: {
-backupDurationInReport: {
type: "boolean"
fullType: "boolean"
canBeNull: true
readOnly: true
description: "Duration on email report"
required: false
}
-backupOffer: {
type: "dedicatedCloud.backup.OfferTypeEnum"
fullType: "dedicatedCloud.backup.OfferTypeEnum"
canBeNull: true
readOnly: true
description: "Backup offer type"
required: false
}
-backupSizeInReport: {
type: "boolean"
fullType: "boolean"
canBeNull: true
readOnly: true
description: "Backup size on day on email report"
required: false
}
-diskSizeInReport: {
type: "boolean"
fullType: "boolean"
canBeNull: true
readOnly: true
description: "Disk size on mail report"
required: false
}
-encryption: {
type: "boolean"
fullType: "boolean"
canBeNull: true
readOnly: true
description: "Backup is encrypted"
required: false
}
-fullDayInReport: {
type: "boolean"
fullType: "boolean"
canBeNull: true
readOnly: true
description: "Full day on mail report"
required: false
}
-hostname: {
type: "string"
fullType: "string"
canBeNull: true
readOnly: true
description: "Name of the backup server virtual machine."
required: false
}
-mailAddress: {
type: "string"
fullType: "string"
canBeNull: true
readOnly: true
description: "Unique additional email address for backup daily report"
required: false
}
-replicationZone: {
type: "string"
fullType: "string"
canBeNull: true
readOnly: true
description: "Backup replication zone"
required: false
}
-restorePointInReport: {
type: "boolean"
fullType: "boolean"
canBeNull: true
readOnly: true
description: "RestorePoint number on mail report"
required: false
}
-scheduleHour: {
type: "time"
fullType: "time"
canBeNull: true
readOnly: true
description: "Schedule hour for start backup"
required: false
}
-state: {
type: "dedicatedCloud.BackupStateEnum"
fullType: "dedicatedCloud.BackupStateEnum"
canBeNull: false
readOnly: true
description: "This Backup current state"
required: false
}
-vmwareVmId: {
type: "string"
fullType: "string"
canBeNull: true
readOnly: true
description: "The moref of the backup server virtual machine"
required: false
}
}
}
-dedicatedCloud.BackupJob: {
id: "BackupJob"
namespace: "dedicatedCloud"
description: "Backup job"
-properties: {
-allocatedDisk: {
type: "double"
fullType: "double"
canBeNull: true
readOnly: true
description: "Disk space allocated to the virtual machine"
required: false
}
-backupDays: {
type: "dedicatedCloud.backup.BackupDaysEnum[]"
fullType: "dedicatedCloud.backup.BackupDaysEnum[]"
canBeNull: true
readOnly: true
description: "List of days your Virtual Machine will be backuped"
required: false
}
-encryption: {
type: "boolean"
fullType: "boolean"
canBeNull: true
readOnly: true
description: "Backup is encrypted"
required: false
}
-offerType: {
type: "dedicatedCloud.backup.OfferTypeEnum"
fullType: "dedicatedCloud.backup.OfferTypeEnum"
canBeNull: true
readOnly: true
description: "Offer type of the backup job"
required: false
}
-retentionTime: {
type: "long"
fullType: "long"
canBeNull: true
readOnly: true
description: "Number of days before the backup is deleted"
required: false
}
-state: {
type: "dedicatedCloud.backup.StateEnum"
fullType: "dedicatedCloud.backup.StateEnum"
canBeNull: false
readOnly: true
description: "State of the backup job"
required: false
}
-vmName: {
type: "string"
fullType: "string"
canBeNull: true
readOnly: true
description: "Name of the virtual Machine"
required: false
}
}
}
-dedicatedCloud.BackupRepository: {
id: "BackupRepository"
namespace: "dedicatedCloud"
description: "Backup repository"
-properties: {
-lastSuccessfulReplicationDate: {
type: "datetime"
fullType: "datetime"
canBeNull: true
readOnly: true
description: "Replication last successful date"
required: false
}
-replication: {
type: "dedicatedCloud.option.StateEnum"
fullType: "dedicatedCloud.option.StateEnum"
canBeNull: true
readOnly: true
description: "Replication status"
required: false
}
-replicationZone: {
type: "string"
fullType: "string"
canBeNull: true
readOnly: true
description: "Replication zone"
required: false
}
-repositoryId: {
type: "long"
fullType: "long"
canBeNull: false
readOnly: true
description: "Repository Id"
required: false
}
-repositoryName: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "Repository Name"
required: false
}
-syncStatus: {
type: "dedicatedCloud.backup.ReplicationSyncStatus"
fullType: "dedicatedCloud.backup.ReplicationSyncStatus"
canBeNull: true
readOnly: true
description: "Replication sync status"
required: false
}
}
}
-dedicatedCloud.BackupStateEnum: {
id: "BackupStateEnum"
namespace: "dedicatedCloud"
description: "All states a Dedicated Cloud Backup can be in"
-enum: [
"disabled"
"disabling"
"enabled"
"enabling"
"error"
"migrating"
"removing"
]
enumType: "string"
}
-dedicatedCloud.BillingTypeEnum: {
id: "BillingTypeEnum"
namespace: "dedicatedCloud"
description: "The billing type of this Dedicated Cloud"
-enum: [
"demo"
"monthly"
]
enumType: "string"
}
-dedicatedCloud.BlockRegisterEnum: {
id: "BlockRegisterEnum"
namespace: "dedicatedCloud"
description: "The Regional Internet Registry of this IP block"
-enum: [
"arin"
"ripe"
]
enumType: "string"
}
-dedicatedCloud.Capabilities: {
id: "Capabilities"
namespace: "dedicatedCloud"
description: "Available features"
-properties: {
-addRessourceRightStatus: {
type: "dedicatedCloud.capabilities.FeatureStatusEnum"
fullType: "dedicatedCloud.capabilities.FeatureStatusEnum"
canBeNull: false
readOnly: true
description: "canAddRessource right order status in this VMware on OVHcloud"
required: false
}
-backupStatus: {
type: "dedicatedCloud.capabilities.FeatureStatusEnum"
fullType: "dedicatedCloud.capabilities.FeatureStatusEnum"
canBeNull: false
readOnly: true
description: "Backup feature order status for this VMware on OVHcloud"
required: false
}
-canAddUser: {
type: "boolean"
fullType: "boolean"
canBeNull: false
readOnly: true
description: "if true user can be added in this VMware on OVHcloud (with POST /dedicatedCloud/{serviceName}/user"
required: false
}
-fullAdminRoUserStatus: {
type: "dedicatedCloud.capabilities.FeatureStatusEnum"
fullType: "dedicatedCloud.capabilities.FeatureStatusEnum"
canBeNull: false
readOnly: true
description: "fullAdminRO user right order status in this VMware on OVHcloud"
required: false
}
-nexus1000vStatus: {
type: "dedicatedCloud.capabilities.FeatureStatusEnum"
fullType: "dedicatedCloud.capabilities.FeatureStatusEnum"
canBeNull: false
readOnly: true
description: "Nexus 1000v feature order status in this VMware on OVHcloud ?"
required: false
}
-upgradable: {
type: "boolean"
fullType: "boolean"
canBeNull: false
readOnly: true
description: "Hypervisor upgrade order status in this VMware on OVHcloud (upgrade with POST /dedicatedCloud/{serviceName}/upgradeHypervisor)"
required: false
}
-userAccessPolicyStatus: {
type: "dedicatedCloud.capabilities.FeatureStatusEnum"
fullType: "dedicatedCloud.capabilities.FeatureStatusEnum"
canBeNull: false
readOnly: true
description: "userAccessPolicy property edition status in PUT /dedicatedCloud/{serviceName}"
required: false
}
}
}
-dedicatedCloud.Cluster: {
id: "Cluster"
namespace: "dedicatedCloud"
description: "Cluster"
-properties: {
-autoscale: {
type: "dedicatedCloud.cluster.AutoScale"
fullType: "dedicatedCloud.cluster.AutoScale"
canBeNull: true
readOnly: true
description: "AutoScale associated to this cluster"
required: false
}
-clusterId: {
type: "long"
fullType: "long"
canBeNull: false
readOnly: true
description: "Id of the cluster"
required: false
}
-drsMode: {
type: "dedicatedCloud.cluster.ClusterDrsModeEnum"
fullType: "dedicatedCloud.cluster.ClusterDrsModeEnum"
canBeNull: false
readOnly: true
description: "Drs mode of the cluster"
required: false
}
-drsStatus: {
type: "dedicatedCloud.cluster.ClusterConfigsStatusEnum"
fullType: "dedicatedCloud.cluster.ClusterConfigsStatusEnum"
canBeNull: false
readOnly: true
description: "Drs status of the cluster"
required: false
}
-evcMode: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "Evc mode of the cluster"
required: false
}
-haStatus: {
type: "dedicatedCloud.cluster.ClusterConfigsStatusEnum"
fullType: "dedicatedCloud.cluster.ClusterConfigsStatusEnum"
canBeNull: false
readOnly: true
description: "High availability status of the cluster"
required: false
}
-name: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "Name of the cluster"
required: false
}
-vmwareClusterId: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "The VMware MoRef of the cluster"
required: false
}
}
}
-dedicatedCloud.CommercialNameEnum: {
id: "CommercialNameEnum"
namespace: "dedicatedCloud"
description: "The commercial name component"
-enum: [
"CDI"
"CDI-HDS"
"CDI-HIPAA"
"CDI-NSX"
"CDI-NSX-T"
"CDI-NSX-VROPS"
"CDI-PCIDSS"
"CDI-UNKNOWN"
"CDI-VROPS"
"DC"
"DC-ANCIENT"
"DC-ANCIENT-HDS"
"DC-ANCIENT-HIPAA"
"DC-ANCIENT-NSX"
"DC-ANCIENT-NSX-T"
"DC-ANCIENT-NSX-VROPS"
"DC-ANCIENT-PCIDSS"
"DC-ANCIENT-UNKNOWN"
"DC-ANCIENT-VROPS"
"DC-HDS"
"DC-HIPAA"
"DC-LEGACY"
"DC-LEGACY-HDS"
"DC-LEGACY-HIPAA"
"DC-LEGACY-NSX"
"DC-LEGACY-NSX-T"
"DC-LEGACY-NSX-VROPS"
"DC-LEGACY-PCIDSS"
"DC-LEGACY-UNKNOWN"
"DC-LEGACY-VROPS"
"DC-NSX"
"DC-NSX-T"
"DC-NSX-VROPS"
"DC-PCIDSS"
"DC-UNKNOWN"
"DC-VROPS"
"ESSENTIALS"
"ESSENTIALS-HDS"
"ESSENTIALS-HIPAA"
"ESSENTIALS-NSX"
"ESSENTIALS-NSX-T"
"ESSENTIALS-NSX-VROPS"
"ESSENTIALS-PCIDSS"
"ESSENTIALS-UNKNOWN"
"ESSENTIALS-VROPS"
"NSX-T"
"NSX-T-DEFAULT"
"NSX-T-HDS"
"NSX-T-NSX"
"NSX-T-NSX-VROPS"
"NSX-T-PCIDSS"
"NSX-T-VROPS"
"NSX-T-VROPS-WITHOUT-NSX"
"NSX-T-WITHOUT-NSX"
"PREMIER"
"PREMIER-DEFAULT"
"PREMIER-HDS"
"PREMIER-HIPAA"
"PREMIER-NSX"
"PREMIER-NSX-T"
"PREMIER-NSX-VROPS"
"PREMIER-PCIDSS"
"PREMIER-UNKNOWN"
"PREMIER-VROPS"
"SDDC"
"SDDC-DEFAULT"
"SDDC-HDS"
"SDDC-HIPAA"
"SDDC-LEGACY"
"SDDC-LEGACY-HDS"
"SDDC-LEGACY-HIPAA"
"SDDC-LEGACY-PCIDSS"
"SDDC-LEGACY-UNKNOWN"
"SDDC-LEGACY-VROPS"
"SDDC-LEGACY-VROPS-WITHOUT-NSX"
"SDDC-LEGACY-WITHOUT-NSX"
"SDDC-PCIDSS"
"SDDC-UNKNOWN"
"SDDC-VROPS"
"SDDC-VROPS-WITHOUT-NSX"
"SDDC-WITHOUT-NSX"
"UNKNOWN"
"UNKNOWN-HDS"
"UNKNOWN-HIPAA"
"UNKNOWN-NSX"
"UNKNOWN-NSX-T"
"UNKNOWN-NSX-VROPS"
"UNKNOWN-PCIDSS"
"UNKNOWN-UNKNOWN"
"UNKNOWN-VROPS"
"UNKNOWN-VSPHERE"
"VSPHERE"
"VSPHERE-DEFAULT"
"VSPHERE-HDS"
"VSPHERE-NSX"
"VSPHERE-NSX-VROPS"
"VSPHERE-PCIDSS"
"VSPHERE-VROPS"
"VSPHERE-VROPS-WITHOUT-NSX"
"VSPHERE-WITHOUT-NSX"
]
enumType: "string"
}
-dedicatedCloud.CommercialRange: {
id: "CommercialRange"
namespace: "dedicatedCloud"
description: "Commercial ranges"
-properties: {
-allowedHypervisorVersions: {
type: "dedicatedCloud.HypervisorVersionEnum[]"
fullType: "dedicatedCloud.HypervisorVersionEnum[]"
canBeNull: false
readOnly: true
description: "The hypervisor versions compliant with this commercial Range"
required: false
}
-allowedNetworkRoles: {
type: "dedicatedCloud.right.NetworkRoleEnum[]"
fullType: "dedicatedCloud.right.NetworkRoleEnum[]"
canBeNull: false
readOnly: true
description: "The list of NetworkRoles allowed for one user in this commercial range"
required: false
}
-commercialRangeName: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "The name of this commercial range"
required: false
}
-dedicatedCloudVersion: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "The name of the dedicated Cloud version associated to this commercial range"
required: false
}
-range: {
type: "string"
fullType: "string"
canBeNull: true
readOnly: true
description: "The range of this Datacenter in this VMware on OVHcloud version"
required: false
}
}
}
-dedicatedCloud.Datacenter: {
id: "Datacenter"
namespace: "dedicatedCloud"
description: "Virtual datacenter"
-properties: {
-commercialName: {
type: "dedicatedCloud.CommercialNameEnum"
fullType: "dedicatedCloud.CommercialNameEnum"
canBeNull: false
readOnly: true
description: "The commercial name of this Datacenter"
required: false
}
-commercialRangeName: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "The commercial range associated to this Datacenter"
required: false
}
-datacenterId: {
type: "long"
fullType: "long"
canBeNull: false
readOnly: true
description: "Id of the Datacenter"
required: false
}
-description: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: false
required: false
}
-horizonViewName: {
type: "string"
fullType: "string"
canBeNull: true
readOnly: true
description: "Name of the associated Horizon View service if the VDI option is enabled"
required: false
}
-isRemovable: {
type: "boolean"
fullType: "boolean"
canBeNull: false
readOnly: true
description: "Check if this datacenter is removable (Need to be Empty)"
required: false
}
-name: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: false
required: false
}
-version: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "Os version installed on your VMware on OVHcloud"
required: false
}
}
}
-dedicatedCloud.Datastore: {
id: "Datastore"
namespace: "dedicatedCloud"
description: "Datastore"
-properties: {
-datastoreId: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "Id of the datastore"
required: false
}
-name: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "Name of the datastore"
required: false
}
}
}
-dedicatedCloud.DvsSecurityPolicy: {
id: "DvsSecurityPolicy"
namespace: "dedicatedCloud"
description: "A structure describing the vmware DVSSecurityPolicy data object"
-properties: {
-allowPromiscuous: {
type: "dedicatedCloud.vmwareBoolPolicy"
canBeNull: false
readOnly: false
required: false
}
-forgedTransmits: {
type: "dedicatedCloud.vmwareBoolPolicy"
canBeNull: false
readOnly: false
required: false
}
-macChanges: {
type: "dedicatedCloud.vmwareBoolPolicy"
canBeNull: false
readOnly: false
required: false
}
}
}
-dedicatedCloud.Federation: {
id: "Federation"
namespace: "dedicatedCloud"
description: "Active Directory federation option"
-properties: {
-state: {
type: "dedicatedCloud.option.StateEnum"
fullType: "dedicatedCloud.option.StateEnum"
canBeNull: false
readOnly: true
description: "State of the option"
required: false
}
}
}
-dedicatedCloud.FederationAccessNetwork: {
id: "FederationAccessNetwork"
namespace: "dedicatedCloud"
description: "Federated Active Directory"
-properties: {
-activeDirectoryId: {
type: "long"
fullType: "long"
canBeNull: false
readOnly: true
description: "Id of the Active Directory"
required: false
}
-baseDnForGroups: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "Active Directory base DN for groups"
required: false
}
-baseDnForUsers: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "Active Directory base DN for users"
required: false
}
-description: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "Description of your option access network"
required: false
}
-domainAlias: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "Active Directory NetBIOS name"
required: false
}
-domainName: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "Active Directory domain name"
required: false
}
-ip: {
type: "ipv4"
fullType: "ipv4"
canBeNull: false
readOnly: true
description: "IP address of the remote service"
required: false
}
-ldapHostname: {
type: "string"
fullType: "string"
canBeNull: true
readOnly: true
description: "Active Directory LDAP hostname"
required: false
}
-ldapTcpPort: {
type: "long"
fullType: "long"
canBeNull: false
readOnly: true
description: "Active Directory LDAP port"
required: false
}
-noSsl: {
type: "boolean"
fullType: "boolean"
canBeNull: false
readOnly: true
description: "Use unsecure LDAP instead of LDAPS"
required: false
}
-sslThumbprint: {
type: "string"
fullType: "string"
canBeNull: true
readOnly: true
description: "SSL thumbprint of the remote service"
required: false
}
-state: {
type: "dedicatedCloud.optionAccessNetwork.StateEnum"
fullType: "dedicatedCloud.optionAccessNetwork.StateEnum"
canBeNull: false
readOnly: true
description: "State of the option"
required: false
}
-username: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "Active Directory user name"
required: false
}
}
}
-dedicatedCloud.Filer: {
id: "Filer"
namespace: "dedicatedCloud"
description: "Datastore"
-properties: {
-activeNode: {
type: "dedicatedCloud.filer.NodeTypeEnum"
fullType: "dedicatedCloud.filer.NodeTypeEnum"
canBeNull: true
readOnly: true
description: "Filer active node."
required: false
}
-billingType: {
type: "dedicatedCloud.ressources.BillingTypeEnum"
fullType: "dedicatedCloud.ressources.BillingTypeEnum"
canBeNull: true
readOnly: true
description: "Billing type of this filer"
required: false
}
-connectionState: {
type: "dedicatedCloud.filer.ConnexionStateEnum"
fullType: "dedicatedCloud.filer.ConnexionStateEnum"
canBeNull: true
readOnly: true
description: "Filer connexion state."
required: false
}
-filerId: {
type: "long"
fullType: "long"
canBeNull: false
readOnly: true
description: "Filer Id"
required: false
}
-fullProfile: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "Human-Readable profile name"
required: false
}
-isManagedByOvh: {
type: "boolean"
fullType: "boolean"
canBeNull: false
readOnly: true
description: "Filer accessibility (if true, customer cannot access it)"
required: false
}
-master: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "Filer master node hostname."
required: false
}
-name: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "Filer name"
required: false
}
-profile: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "Commercial profile name"
required: false
}
-resourceName: {
type: "string"
fullType: "string"
canBeNull: true
readOnly: true
description: "Resource name"
required: false
}
-size: {
type: "complexType.UnitAndValue<long>"
fullType: "complexType.UnitAndValue<long>"
canBeNull: false
readOnly: true
description: "Filer capacity"
required: false
}
-slave: {
type: "string"
fullType: "string"
canBeNull: true
readOnly: true
description: "Filer slave node hostname."
required: false
}
-spaceFree: {
type: "double"
fullType: "double"
canBeNull: true
readOnly: true
description: "Available space of this datastore, in GB"
required: false
}
-spaceProvisionned: {
type: "double"
fullType: "double"
canBeNull: true
readOnly: true
description: "Provisionned space of this datastore, in GB"
required: false
}
-spaceUsed: {
type: "double"
fullType: "double"
canBeNull: true
readOnly: true
description: "Used Space of this filer, in GB"
required: false
}
-state: {
type: "dedicatedCloud.filer.StateEnum"
fullType: "dedicatedCloud.filer.StateEnum"
canBeNull: false
readOnly: true
description: "State of the filer"
required: false
}
-vmTotal: {
type: "long"
fullType: "long"
canBeNull: true
readOnly: true
description: "Number of virtual machine on the filer"
required: false
}
}
}
-dedicatedCloud.GenerationEnum: {
id: "GenerationEnum"
namespace: "dedicatedCloud"
description: "The generation of a Dedicated Cloud"
-enum: [
"1.0"
"2.0"
]
enumType: "string"
}
-dedicatedCloud.Hcx: {
id: "Hcx"
namespace: "dedicatedCloud"
description: "VMware Hybrid Cloud Extension option"
-properties: {
-build: {
type: "string"
fullType: "string"
canBeNull: true
readOnly: true
description: "Build of the VMware Hybrid Cloud Extension"
required: false
}
-state: {
type: "dedicatedCloud.option.StateEnum"
fullType: "dedicatedCloud.option.StateEnum"
canBeNull: false
readOnly: true
description: "State of the option"
required: false
}
-version: {
type: "string"
fullType: "string"
canBeNull: true
readOnly: true
description: "Version of the VMware Hybrid Cloud Extension"
required: false
}
}
}
-dedicatedCloud.Hds: {
id: "Hds"
namespace: "dedicatedCloud"
description: "HDS certification option"
-properties: {
-state: {
type: "dedicatedCloud.option.StateEnum"
fullType: "dedicatedCloud.option.StateEnum"
canBeNull: false
readOnly: true
description: "State of the option"
required: false
}
}
}
-dedicatedCloud.Hipaa: {
id: "Hipaa"
namespace: "dedicatedCloud"
description: "HIPAA certification option"
-properties: {
-state: {
type: "dedicatedCloud.option.StateEnum"
fullType: "dedicatedCloud.option.StateEnum"
canBeNull: false
readOnly: true
description: "State of the option"
required: false
}
}
}
-dedicatedCloud.Host: {
id: "Host"
namespace: "dedicatedCloud"
description: "Host"
-properties: {
-billingType: {
type: "dedicatedCloud.ressources.BillingTypeEnum"
fullType: "dedicatedCloud.ressources.BillingTypeEnum"
canBeNull: false
readOnly: true
description: "Billing type of the host"
required: false
}
-clusterName: {
type: "string"
fullType: "string"
canBeNull: true
readOnly: true
description: "Cluster of the host"
required: false
}
-connectionState: {
type: "dedicatedCloud.hostSystemConnectionState"
fullType: "dedicatedCloud.hostSystemConnectionState"
canBeNull: true
readOnly: true
description: "Connection state of the host"
required: false
}
-cpu: {
type: "complexType.UnitAndValue<double>"
fullType: "complexType.UnitAndValue<double>"
canBeNull: false
readOnly: true
description: "CPU total frenquency"
required: false
}
-cpuMax: {
type: "long"
fullType: "long"
canBeNull: true
readOnly: true
description: "The maximum speed of the cpu, in Mhz"
required: false
}
-cpuMaxCore: {
type: "long"
fullType: "long"
canBeNull: true
readOnly: true
description: "The speed of the CPU cores. This is an average value if there are multiple speeds. in Mhz"
required: false
}
-cpuNum: {
type: "long"
fullType: "long"
canBeNull: true
readOnly: true
description: "Number of physical CPU cores on the host."
required: false
}
-cpuUsed: {
type: "long"
fullType: "long"
canBeNull: true
readOnly: true
description: "Current cpu utilization, in Mhz"
required: false
}
-hostId: {
type: "long"
fullType: "long"
canBeNull: false
readOnly: true
description: "Id of the host"
required: false
}
-inMaintenance: {
type: "boolean"
fullType: "boolean"
canBeNull: true
readOnly: true
description: "Host is in maintenance mode"
required: false
}
-memoryUsed: {
type: "double"
fullType: "double"
canBeNull: true
readOnly: true
description: "Amount of used memory. Sum of the memory used by all powered on virtual machines and vSphere services on the host. in MB"
required: false
}
-name: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "Name of the host (IP address)"
required: false
}
-parentHostId: {
type: "long"
fullType: "long"
canBeNull: true
readOnly: true
description: "Id of the parent host (if any)"
required: false
}
-profile: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "Host profile in a commercial range"
required: false
}
-profileCode: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "Host profile code"
required: false
}
-rack: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "Rack of the host"
required: false
}
-ram: {
type: "complexType.UnitAndValue<long>"
fullType: "complexType.UnitAndValue<long>"
canBeNull: false
readOnly: true
description: "Total RAM quantity"
required: false
}
-resourceName: {
type: "string"
fullType: "string"
canBeNull: true
readOnly: true
description: "Resource name"
required: false
}
-state: {
type: "dedicatedCloud.host.StateEnum"
fullType: "dedicatedCloud.host.StateEnum"
canBeNull: false
readOnly: true
description: "State of the host"
required: false
}
-uptime: {
type: "long"
fullType: "long"
canBeNull: true
readOnly: true
description: "Host uptime in second"
required: false
}
-vmTotal: {
type: "long"
fullType: "long"
canBeNull: true
readOnly: true
description: "Number of Virtual Machine on the host"
required: false
}
-vmVcpuTotal: {
type: "long"
fullType: "long"
canBeNull: true
readOnly: true
description: "Number of Vcpu use by virtual machines on the host"
required: false
}
}
}
-dedicatedCloud.HostProfile: {
id: "HostProfile"
namespace: "dedicatedCloud"
description: "Host profile"
-properties: {
-id: {
type: "long"
fullType: "long"
canBeNull: false
readOnly: true
description: "Id of Host profile"
required: false
}
-name: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "Name of Host profile"
required: false
}
}
}
-dedicatedCloud.HostResilience: {
id: "HostResilience"
namespace: "dedicatedCloud"
description: "Host resilience test status"
-properties: {
-state: {
type: "dedicatedCloud.option.StateEnum"
fullType: "dedicatedCloud.option.StateEnum"
canBeNull: false
readOnly: true
description: "State of the option"
required: false
}
}
}
-dedicatedCloud.HostStockHypervisor: {
id: "HostStockHypervisor"
namespace: "dedicatedCloud"
description: "Hypervisor and their availability"
-properties: {
-value: {
type: "long"
canBeNull: false
readOnly: false
description: "Number of available hypervisors"
required: false
}
-version: {
type: "string"
canBeNull: false
readOnly: false
description: "Version of hypervisor"
required: false
}
}
}
-dedicatedCloud.HostStockProcGen: {
id: "HostStockProcGen"
namespace: "dedicatedCloud"
description: "Processor generation and their availability"
-properties: {
-cpuGeneration: {
type: "string"
canBeNull: false
readOnly: false
description: "CPU generation"
required: false
}
-value: {
type: "dedicatedCloud.HostStockHypervisor[]"
canBeNull: false
readOnly: false
description: "Number of available hosts"
required: false
}
}
}
-dedicatedCloud.HostStockProfile: {
id: "HostStockProfile"
namespace: "dedicatedCloud"
description: "HostProfiles and their availability"
-properties: {
-id: {
type: "long"
canBeNull: false
readOnly: false
description: "Id of host profile"
required: false
}
-name: {
type: "string"
canBeNull: false
readOnly: false
description: "Name of host profile"
required: false
}
-ref: {
type: "string"
canBeNull: false
readOnly: false
description: "Reference of host profile"
required: false
}
-value: {
type: "dedicatedCloud.HostStockProcGen[]"
canBeNull: false
readOnly: false
description: "Available hosts"
required: false
}
}
}
-dedicatedCloud.HypervisorVersionEnum: {
id: "HypervisorVersionEnum"
namespace: "dedicatedCloud"
description: "The Hypervisor version of this Dedicated Cloud component"
-enum: [
"4.1"
"5.0"
"5.1"
"5.5"
"6.0"
"6.5"
"6.7"
"7.0"
"8.0"
"hv3.1"
"hvdc3.1"
"nc1.0"
]
enumType: "string"
}
-dedicatedCloud.Iam: {
id: "Iam"
namespace: "dedicatedCloud"
description: "OVHcloud IAM option"
-properties: {
-identityProviderId: {
type: "long"
fullType: "long"
canBeNull: true
readOnly: true
description: "Identity Provider ID"
required: false
}
-state: {
type: "dedicatedCloud.option.StateEnum"
fullType: "dedicatedCloud.option.StateEnum"
canBeNull: false
readOnly: true
description: "State of the option"
required: false
}
}
}
-dedicatedCloud.Ip: {
id: "Ip"
namespace: "dedicatedCloud"
description: "IP block"
-properties: {
-country: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
required: false
}
-description: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
required: false
}
-gateway: {
type: "ip"
fullType: "ip"
canBeNull: false
readOnly: true
description: "Gateway value"
required: false
}
-netmask: {
type: "ip"
fullType: "ip"
canBeNull: false
readOnly: true
description: "Netmask value"
required: false
}
-network: {
type: "ipv4Block"
fullType: "ipv4Block"
canBeNull: false
readOnly: true
description: "IP ex: 213.186.33.34/24"
required: false
}
-networkName: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "Network name"
required: false
}
-register: {
type: "dedicatedCloud.BlockRegisterEnum"
fullType: "dedicatedCloud.BlockRegisterEnum"
canBeNull: false
readOnly: true
description: "The Regional Internet Registry of this Ip Block"
required: false
}
-vlanNumber: {
type: "long"
fullType: "long"
canBeNull: false
readOnly: true
description: "Vlan where this network is routed"
required: false
}
}
}
-dedicatedCloud.IpCountriesEnum: {
id: "IpCountriesEnum"
namespace: "dedicatedCloud"
description: "All countries in which an Ip Block may be ordered"
-enum: [
"be"
"ca"
"ch"
"cz"
"de"
"es"
"fi"
"fr"
"gb"
"ie"
"it"
"lt"
"nl"
"pl"
"pt"
"us"
]
enumType: "string"
}
-dedicatedCloud.IpDetails: {
id: "IpDetails"
namespace: "dedicatedCloud"
description: "Details about an Ip"
-properties: {
-ip: {
type: "ip"
canBeNull: false
readOnly: false
description: "IP address"
required: false
}
-reverse: {
type: "string"
canBeNull: true
readOnly: false
description: "IP address reverse record"
required: false
}
-usage: {
type: "dedicatedCloud.ipUsageEnum"
canBeNull: false
readOnly: false
description: "IP address usage"
required: false
}
-usageDetails: {
type: "string"
canBeNull: true
readOnly: false
description: "IP address usage details"
required: false
}
}
}
-dedicatedCloud.LogForwarder: {
id: "LogForwarder"
namespace: "dedicatedCloud"
description: "Log forwarder option"
-properties: {
-state: {
type: "dedicatedCloud.option.StateEnum"
fullType: "dedicatedCloud.option.StateEnum"
canBeNull: false
readOnly: true
description: "State of the option"
required: false
}
}
}
-dedicatedCloud.LogSubscriptionResource: {
id: "LogSubscriptionResource"
namespace: "dedicatedCloud"
description: "Log subscription resource"
-properties: {
-name: {
type: "string"
canBeNull: false
readOnly: false
description: "Name of subscribed resource"
required: false
}
-type: {
type: "string"
canBeNull: false
readOnly: false
description: "Type of subscribed resource"
required: false
}
}
}
-dedicatedCloud.LogSubscriptionResponse: {
id: "LogSubscriptionResponse"
namespace: "dedicatedCloud"
description: "synchronous operation after subscribing or unsubscribing to a resource logs"
-properties: {
-operationId: {
type: "uuid"
canBeNull: false
readOnly: false
description: "Identifier of the operation"
required: false
}
-serviceName: {
type: "string"
canBeNull: false
readOnly: false
description: "Operation owner's service name"
required: false
}
}
}
-dedicatedCloud.LogsURL: {
id: "LogsURL"
namespace: "dedicatedCloud"
description: "URL with real time logs"
-properties: {
-expirationDate: {
type: "datetime"
canBeNull: false
readOnly: false
description: "Expiration date"
required: false
}
-url: {
type: "string"
canBeNull: false
readOnly: false
description: "URL"
required: false
}
}
}
-dedicatedCloud.ManagementInterfaceEnum: {
id: "ManagementInterfaceEnum"
namespace: "dedicatedCloud"
description: "The management interface of this Dedicated Cloud"
-enum: [
"azure"
"openstack"
"systemcenter"
"vcloud"
"vcsa"
"vsphere"
]
enumType: "string"
}
-dedicatedCloud.Nsx: {
id: "Nsx"
namespace: "dedicatedCloud"
description: "VMware NSX-V option"
-properties: {
-state: {
type: "dedicatedCloud.option.StateEnum"
fullType: "dedicatedCloud.option.StateEnum"
canBeNull: false
readOnly: true
description: "State of the option"
required: false
}
-url: {
type: "string"
fullType: "string"
canBeNull: true
readOnly: true
description: "Url of the NSX API"
required: false
}
}
}
-dedicatedCloud.Nsxt: {
id: "Nsxt"
namespace: "dedicatedCloud"
description: "VMware NSX-T option"
-properties: {
-datacentersState: {
type: "dedicatedCloud.option.DatacenterOptionState[]"
fullType: "dedicatedCloud.option.DatacenterOptionState[]"
canBeNull: true
readOnly: true
description: "Installation status on all datacenters"
required: false
}
-state: {
type: "dedicatedCloud.option.StateEnum"
fullType: "dedicatedCloud.option.StateEnum"
canBeNull: false
readOnly: true
description: "State of the NSX-T option"
required: false
}
-url: {
type: "string"
fullType: "string"
canBeNull: true
readOnly: true
description: "Url of the NSX-T interface"
required: false
}
-version: {
type: "string"
fullType: "string"
canBeNull: true
readOnly: true
description: "Version of the NSX-T"
required: false
}
}
}
-dedicatedCloud.NsxtEdge: {
id: "NsxtEdge"
namespace: "dedicatedCloud"
description: "NSX-T Edge"
-properties: {
-diskLocation: {
type: "string"
fullType: "string"
canBeNull: true
readOnly: true
description: "Location of NSX-T Edge disks"
required: false
}
-hostId: {
type: "long"
fullType: "long"
canBeNull: true
readOnly: true
description: "Host id where NSX-T Edge is located"
required: false
}
-ip: {
type: "ip"
fullType: "ip"
canBeNull: false
readOnly: true
description: "IP of the NSX-T Edge"
required: false
}
-moRef: {
type: "string"
fullType: "string"
canBeNull: true
readOnly: true
description: "The VMware MoRef of the NSX-T Edge"
required: false
}
-name: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "Name of the NSX-T Edge"
required: false
}
-nsxtEdgeId: {
type: "long"
fullType: "long"
canBeNull: false
readOnly: true
description: "Id of the NSX-T Edge"
required: false
}
-size: {
type: "dedicatedCloud.nsxt.NsxtEdgeSizeEnum"
fullType: "dedicatedCloud.nsxt.NsxtEdgeSizeEnum"
canBeNull: false
readOnly: true
description: "Size of the NSX-T Edge"
required: false
}
-state: {
type: "dedicatedCloud.StateEnum"
fullType: "dedicatedCloud.StateEnum"
canBeNull: false
readOnly: true
description: "State of the NSX-T Edge"
required: false
}
}
}
-dedicatedCloud.NsxtEdgeResilience: {
id: "NsxtEdgeResilience"
namespace: "dedicatedCloud"
description: "NSX-T Edge resilience test status"
-properties: {
-state: {
type: "dedicatedCloud.option.StateEnum"
fullType: "dedicatedCloud.option.StateEnum"
canBeNull: false
readOnly: true
description: "State of the option"
required: false
}
}
}
-dedicatedCloud.ObjectRight: {
id: "ObjectRight"
namespace: "dedicatedCloud"
description: "User object right"
-properties: {
-name: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "Name of the object"
required: false
}
-objectRightId: {
type: "long"
fullType: "long"
canBeNull: false
readOnly: true
required: false
}
-propagate: {
type: "boolean"
fullType: "boolean"
canBeNull: false
readOnly: true
description: "Right propagation on children objects"
required: false
}
-right: {
type: "dedicatedCloud.right.RightEnum"
fullType: "dedicatedCloud.right.RightEnum"
canBeNull: false
readOnly: true
description: "User access on the VMware object"
required: false
}
-type: {
type: "dedicatedCloud.right.UserObjectRightTypeEnum"
fullType: "dedicatedCloud.right.UserObjectRightTypeEnum"
canBeNull: false
readOnly: true
description: "Type of the object"
required: false
}
-vmwareObjectId: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "The VMware MoRef of the object"
required: false
}
}
}
-dedicatedCloud.Os: {
id: "Os"
namespace: "dedicatedCloud"
description: "Hypervisor"
-properties: {
-fullName: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "Full name of hypervisor"
required: false
}
-lastModificationDate: {
type: "datetime"
fullType: "datetime"
canBeNull: false
readOnly: true
description: "Last modification of hypervisor"
required: false
}
-shortName: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "Short name of hypervisor"
required: false
}
}
}
-dedicatedCloud.PccStockProfile: {
id: "PccStockProfile"
namespace: "dedicatedCloud"
description: "PCC and their availability"
-properties: {
-count: {
type: "long"
canBeNull: false
readOnly: false
description: "Available PCC"
required: false
}
-mode: {
type: "string"
canBeNull: false
readOnly: false
description: "Kind of hypervisor"
required: false
}
-realVersion: {
type: "string"
canBeNull: false
readOnly: false
description: "Hypervisor version"
required: false
}
}
}
-dedicatedCloud.PccZone: {
id: "PccZone"
namespace: "dedicatedCloud"
description: "Hosting location"
-properties: {
-city: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "Name of City"
required: false
}
-countryCode: {
type: "nichandle.CountryEnum"
fullType: "nichandle.CountryEnum"
canBeNull: false
readOnly: true
description: "Country code"
required: false
}
-id: {
type: "long"
fullType: "long"
canBeNull: false
readOnly: true
description: "Id of pccZone"
required: false
}
-pccZone: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "Name of pccZone"
required: false
}
-region: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "Region name"
required: false
}
-regionLocation: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "Location name"
required: false
}
}
}
-dedicatedCloud.PciDss: {
id: "PciDss"
namespace: "dedicatedCloud"
description: "PCI-DSS certification option"
-properties: {
-state: {
type: "dedicatedCloud.option.StateEnum"
fullType: "dedicatedCloud.option.StateEnum"
canBeNull: false
readOnly: true
description: "State of the option"
required: false
}
}
}
-dedicatedCloud.Portgroup: {
id: "Portgroup"
namespace: "dedicatedCloud"
description: "Portgroup"
-properties: {
-description: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "Description of the portgroup"
required: false
}
-name: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "Name of the portgroup"
required: false
}
-portgroupId: {
type: "long"
fullType: "long"
canBeNull: false
readOnly: true
description: "Id of the portgroup"
required: false
}
}
}
-dedicatedCloud.PrivateGateway: {
id: "PrivateGateway"
namespace: "dedicatedCloud"
description: "Private management gateway"
-properties: {
-customerIp: {
type: "ip"
fullType: "ip"
canBeNull: true
readOnly: true
description: "Ip set on your private gateway in your network"
required: false
}
-customerNetmask: {
type: "ip"
fullType: "ip"
canBeNull: true
readOnly: true
description: "Your netmask set on the private gateway"
required: false
}
-customerPortGroup: {
type: "string"
fullType: "string"
canBeNull: true
readOnly: true
description: "Portgroup in your VMware on OVHcloud used to deploy the private gateway"
required: false
}
-state: {
type: "dedicatedCloud.option.StateEnum"
fullType: "dedicatedCloud.option.StateEnum"
canBeNull: false
readOnly: true
description: "State of the option"
required: false
}
}
}
-dedicatedCloud.RestorePoint: {
id: "RestorePoint"
namespace: "dedicatedCloud"
description: "Restore point"
-properties: {
-creationTime: {
type: "string"
fullType: "string"
canBeNull: true
readOnly: true
description: "Creation time of the restore point"
required: false
}
-isCorrupted: {
type: "boolean"
fullType: "boolean"
canBeNull: false
readOnly: true
description: "Show if the restore point is corrupted"
required: false
}
-restorePointId: {
type: "long"
fullType: "long"
canBeNull: false
readOnly: true
description: "Id of the restore point."
required: false
}
-restorePointSize: {
type: "complexType.UnitAndValue<long>"
fullType: "complexType.UnitAndValue<long>"
canBeNull: false
readOnly: true
description: "Size of the restore point"
required: false
}
-type: {
type: "dedicatedCloud.backup.BackupTypeEnum"
fullType: "dedicatedCloud.backup.BackupTypeEnum"
canBeNull: true
readOnly: true
description: "Type of the restore point"
required: false
}
}
}
-dedicatedCloud.Right: {
id: "Right"
namespace: "dedicatedCloud"
description: "User datacenter right"
-properties: {
-canAddRessource: {
type: "boolean"
fullType: "boolean"
canBeNull: false
readOnly: false
description: "Determine if the user can add ressources in your VMware on OVHcloud"
required: false
}
-datacenterId: {
type: "long"
fullType: "long"
canBeNull: false
readOnly: true
required: false
}
-networkRole: {
type: "dedicatedCloud.right.NetworkRoleEnum"
fullType: "dedicatedCloud.right.NetworkRoleEnum"
canBeNull: false
readOnly: false
description: "Determine how this user can interact with the VMware on OVHcloud V(x)Lans"
required: false
}
-right: {
type: "dedicatedCloud.right.RightEnum"
fullType: "dedicatedCloud.right.RightEnum"
canBeNull: false
readOnly: false
description: "Determine what kind of access the User will have in this Datacenter of your VMware on OVHcloud"
required: false
}
-rightId: {
type: "long"
fullType: "long"
canBeNull: false
readOnly: true
required: false
}
-vmNetworkRole: {
type: "dedicatedCloud.right.VmNetworkRoleEnum"
fullType: "dedicatedCloud.right.VmNetworkRoleEnum"
canBeNull: false
readOnly: false
description: "Determine how this user can interact with the VMware on OVHcloud VM Network"
required: false
}
}
}
-dedicatedCloud.Robot: {
id: "Robot"
namespace: "dedicatedCloud"
description: "Robot"
-properties: {
-criticity: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "The criticity of this robot"
required: false
}
-description: {
type: "string"
fullType: "string"
canBeNull: true
readOnly: true
description: "Description of this robot"
required: false
}
-enabled: {
type: "boolean"
fullType: "boolean"
canBeNull: false
readOnly: true
description: "Is this robot enabled"
required: false
}
-name: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "The name of this robot"
required: false
}
-type: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "The type of this robot"
required: false
}
}
}
-dedicatedCloud.SecurityOption: {
id: "SecurityOption"
namespace: "dedicatedCloud"
description: "Security option"
-properties: {
-state: {
type: "dedicatedCloud.securityOption.StateEnum"
fullType: "dedicatedCloud.securityOption.StateEnum"
canBeNull: false
readOnly: true
description: "State of security options"
required: false
}
}
}
-dedicatedCloud.ServicePack: {
id: "ServicePack"
namespace: "dedicatedCloud"
description: "Service pack"
-properties: {
-name: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "Name of the Service Pack"
required: false
}
-options: {
type: "string[]"
fullType: "string[]"
canBeNull: false
readOnly: true
description: "Options available in the Service Pack"
required: false
}
}
}
-dedicatedCloud.StateEnum: {
id: "StateEnum"
namespace: "dedicatedCloud"
description: "All states a Dedicated Cloud can be in"
-enum: [
"available"
"delivered"
"disabled"
"disabling"
"error"
"migrating"
"provisionning"
"recycling"
"reserved"
"toDisable"
"toProvision"
"toRecycle"
"toRemove"
"toUnprovision"
"unprovisionning"
"upgrading"
]
enumType: "string"
}
-dedicatedCloud.StoragePolicy: {
id: "StoragePolicy"
namespace: "dedicatedCloud"
description: "Storage Policy"
-properties: {
-description: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "Description of the storage policy"
required: false
}
-name: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "Name of the storage policy"
required: false
}
-storagePolicyId: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "Id of the storage policy"
required: false
}
}
}
-dedicatedCloud.SyslogForward: {
id: "SyslogForward"
namespace: "dedicatedCloud"
description: "Log forward to syslog option"
-properties: {
-state: {
type: "dedicatedCloud.option.StateEnum"
fullType: "dedicatedCloud.option.StateEnum"
canBeNull: false
readOnly: true
description: "State of the option"
required: false
}
}
}
-dedicatedCloud.SyslogForwardAccessNetwork: {
id: "SyslogForwardAccessNetwork"
namespace: "dedicatedCloud"
description: "Forward logs from your PCC infrastructure to your syslog"
-properties: {
-description: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "Log forwarding description"
required: false
}
-ip: {
type: "ipv4"
fullType: "ipv4"
canBeNull: false
readOnly: true
description: "IP address of the remote service"
required: false
}
-logForwardId: {
type: "long"
fullType: "long"
canBeNull: false
readOnly: true
description: "Id of the log forwarder"
required: false
}
-logLevel: {
type: "dedicatedCloud.syslogForward.LogLevelEnum"
fullType: "dedicatedCloud.syslogForward.LogLevelEnum"
canBeNull: false
readOnly: true
description: "Minimal log level"
required: false
}
-noSsl: {
type: "boolean"
fullType: "boolean"
canBeNull: false
readOnly: true
description: "Use unsecure log forwarding"
required: false
}
-servicePort: {
type: "long"
fullType: "long"
canBeNull: false
readOnly: true
description: "Remote service port"
required: false
}
-sourceType: {
type: "dedicatedCloud.syslogForward.SourceTypeEnum[]"
fullType: "dedicatedCloud.syslogForward.SourceTypeEnum[]"
canBeNull: false
readOnly: true
description: "Possible log sources type"
required: false
}
-sslThumbprint: {
type: "string"
fullType: "string"
canBeNull: true
readOnly: true
description: "SSL thumbprint of the remote service"
required: false
}
-state: {
type: "dedicatedCloud.optionAccessNetwork.StateEnum"
fullType: "dedicatedCloud.optionAccessNetwork.StateEnum"
canBeNull: false
readOnly: true
description: "Log fowarder state"
required: false
}
}
}
-dedicatedCloud.Tag: {
id: "Tag"
namespace: "dedicatedCloud"
description: "Tag"
-properties: {
-description: {
type: "string"
fullType: "string"
canBeNull: true
readOnly: true
description: "Description of the tag"
required: false
}
-name: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "Name of the tag"
required: false
}
-state: {
type: "dedicatedCloud.TagStateEnum"
fullType: "dedicatedCloud.TagStateEnum"
canBeNull: true
readOnly: true
description: "State of the tag"
required: false
}
-value: {
type: "string"
fullType: "string"
canBeNull: true
readOnly: true
description: "Value of the tag"
required: false
}
-version: {
type: "string"
fullType: "string"
canBeNull: true
readOnly: true
description: "Version of the tag"
required: false
}
}
}
-dedicatedCloud.TagStateEnum: {
id: "TagStateEnum"
namespace: "dedicatedCloud"
description: "Tag states"
-enum: [
"disabled"
"disabling"
"enabled"
"enabling"
"error"
"unknown"
"updating"
]
enumType: "string"
}
-dedicatedCloud.Task: {
id: "Task"
namespace: "dedicatedCloud"
description: "Operation"
-properties: {
-createdBy: {
type: "string"
fullType: "string"
canBeNull: true
readOnly: true
description: "Creator of the task"
required: false
}
-createdFrom: {
type: "string"
fullType: "string"
canBeNull: true
readOnly: true
description: "Origin of the task"
required: false
}
-datacenterId: {
type: "long"
fullType: "long"
canBeNull: true
readOnly: true
description: "datacenterId of the associated dedicatedCloud.Datacenter object"
required: false
}
-description: {
type: "string"
fullType: "string"
canBeNull: true
readOnly: true
description: "Current progress description"
required: false
}
-endDate: {
type: "datetime"
fullType: "datetime"
canBeNull: true
readOnly: true
description: "Task end date"
required: false
}
-executionDate: {
type: "datetime"
fullType: "datetime"
canBeNull: false
readOnly: true
description: "Task execution date"
required: false
}
-filerId: {
type: "long"
fullType: "long"
canBeNull: true
readOnly: true
description: "filerId of the associated dedicatedCloud.Filer object"
required: false
}
-hostId: {
type: "long"
fullType: "long"
canBeNull: true
readOnly: true
description: "hostId of the associated dedicatedCloud.Host object"
required: false
}
-lastModificationDate: {
type: "datetime"
fullType: "datetime"
canBeNull: true
readOnly: true
description: "Task last modification date"
required: false
}
-maintenanceDateFrom: {
type: "datetime"
fullType: "datetime"
canBeNull: true
readOnly: true
description: "Maintenance task min allowed execution date"
required: false
}
-maintenanceDateTo: {
type: "datetime"
fullType: "datetime"
canBeNull: true
readOnly: true
description: "Maintenance task max allowed execution date"
required: false
}
-name: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "Task name"
required: false
}
-network: {
type: "string"
fullType: "string"
canBeNull: true
readOnly: true
description: "network of the associated dedicatedCloud.Ip object"
required: false
}
-networkAccessId: {
type: "long"
fullType: "long"
canBeNull: true
readOnly: true
description: "networkAccessId of the associated dedicatedCloud.AllowedNetwork object"
required: false
}
-orderId: {
type: "long"
fullType: "long"
canBeNull: true
readOnly: true
description: "orderId of the associated billing.Order object"
required: false
}
-parentTaskId: {
type: "long"
fullType: "long"
canBeNull: true
readOnly: true
description: "taskId of the parent dedicatedCloud.Task object"
required: false
}
-progress: {
type: "long"
fullType: "long"
canBeNull: false
readOnly: true
description: "Current progress"
required: false
}
-state: {
type: "dedicatedCloud.TaskStateEnum"
fullType: "dedicatedCloud.TaskStateEnum"
canBeNull: false
readOnly: true
description: "Current Task state"
required: false
}
-taskId: {
type: "long"
fullType: "long"
canBeNull: false
readOnly: true
description: "Task id"
required: false
}
-type: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "Task type"
required: false
}
-userId: {
type: "long"
fullType: "long"
canBeNull: true
readOnly: true
description: "userId of the associated dedicatedCloud.User object"
required: false
}
-vlanId: {
type: "long"
fullType: "long"
canBeNull: true
readOnly: true
description: "vlanId of the parent dedicatedCloud.Vlan object"
required: false
}
}
}
-dedicatedCloud.TaskStateEnum: {
id: "TaskStateEnum"
namespace: "dedicatedCloud"
description: "All states a Dedicated Cloud Task can be in"
-enum: [
"canceled"
"doing"
"done"
"error"
"fixing"
"toCancel"
"toCreate"
"todo"
"unknown"
"waitingForChilds"
"waitingTodo"
]
enumType: "string"
}
-dedicatedCloud.TwoFAWhitelistStateEnum: {
id: "TwoFAWhitelistStateEnum"
namespace: "dedicatedCloud"
description: "All states a Dedicated Cloud two factor authentication whitelist can be in"
-enum: [
"enabled"
"enabling"
"error"
"migrating"
"removed"
"removing"
]
enumType: "string"
}
-dedicatedCloud.User: {
id: "User"
namespace: "dedicatedCloud"
description: "User"
-properties: {
-activationState: {
type: "dedicatedCloud.user.ActivationStateEnum"
fullType: "dedicatedCloud.user.ActivationStateEnum"
canBeNull: true
readOnly: true
description: "Activation state of the user account"
required: false
}
-activeDirectoryId: {
type: "long"
fullType: "long"
canBeNull: true
readOnly: true
description: "Deprecated - Linked Federation Active Directory (if any)"
required: false
}
-activeDirectoryType: {
type: "dedicatedCloud.user.TypeEnum"
fullType: "dedicatedCloud.user.TypeEnum"
canBeNull: true
readOnly: true
description: "Deprecated - Federation Active Directory User type (if any)"
required: false
}
-canManageIpFailOvers: {
type: "boolean"
fullType: "boolean"
canBeNull: false
readOnly: true
description: "Defines if the user can manage ip failovers"
required: false
}
-canManageNetwork: {
type: "boolean"
fullType: "boolean"
canBeNull: false
readOnly: true
description: "Defines if the user can manage the network"
required: false
}
-canManageRights: {
type: "boolean"
fullType: "boolean"
canBeNull: false
readOnly: true
description: "Defines if the user can manage users rights"
required: false
}
-email: {
type: "string"
fullType: "string"
canBeNull: true
readOnly: true
description: "Email address of the user"
required: false
}
-encryptionRight: {
type: "boolean"
fullType: "boolean"
canBeNull: false
readOnly: true
description: "Defines if the user can manage encryption / KMS configuration"
required: false
}
-firstName: {
type: "string"
fullType: "string"
canBeNull: true
readOnly: true
description: "First name of the user"
required: false
}
-fullAdminRo: {
type: "boolean"
fullType: "boolean"
canBeNull: false
readOnly: true
description: "Defines if the user is a full admin in readonly"
required: false
}
-identityProviderId: {
type: "long"
fullType: "long"
canBeNull: true
readOnly: true
description: "Linked Identity Provider (if any), can be Federation Active Directory or IAM"
required: false
}
-identityProviderType: {
type: "dedicatedCloud.user.IdentityProviderTypeEnum"
fullType: "dedicatedCloud.user.IdentityProviderTypeEnum"
canBeNull: true
readOnly: true
description: "Linked Identity Provider type (if any), can be Federation Active Directory or IAM"
required: false
}
-isEnableManageable: {
type: "boolean"
fullType: "boolean"
canBeNull: false
readOnly: true
description: "Check if the given VMware on OVHcloud user can be enabled or disabled ?"
required: false
}
-isTokenValidator: {
type: "boolean"
fullType: "boolean"
canBeNull: false
readOnly: true
description: "Defines if the user can confirm security tokens (if a compatible option is enabled)"
required: false
}
-lastName: {
type: "string"
fullType: "string"
canBeNull: true
readOnly: true
description: "Last name of the user"
required: false
}
-login: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "Login of the user"
required: false
}
-name: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "Name of the user"
required: false
}
-nsxRight: {
type: "boolean"
fullType: "boolean"
canBeNull: false
readOnly: true
description: "Is this User able to access nsx interface (requires NSX option)"
required: false
}
-phoneNumber: {
type: "string"
fullType: "string"
canBeNull: true
readOnly: true
description: "Mobile phone number of the user"
required: false
}
-receiveAlerts: {
type: "boolean"
fullType: "boolean"
canBeNull: false
readOnly: true
description: "Defines if the user receives technical alerts"
required: false
}
-state: {
type: "dedicatedCloud.user.StateEnum"
fullType: "dedicatedCloud.user.StateEnum"
canBeNull: false
readOnly: true
description: "State of the user account"
required: false
}
-type: {
type: "dedicatedCloud.user.TypeEnum"
fullType: "dedicatedCloud.user.TypeEnum"
canBeNull: true
readOnly: true
description: "User type (if any)"
required: false
}
-userId: {
type: "long"
fullType: "long"
canBeNull: false
readOnly: true
required: false
}
}
}
-dedicatedCloud.UserAccessPolicyEnum: {
id: "UserAccessPolicyEnum"
namespace: "dedicatedCloud"
description: "Open or restricted access to management interface ?"
-enum: [
"filtered"
"open"
]
enumType: "string"
}
-dedicatedCloud.UserLogoutPolicyEnum: {
id: "UserLogoutPolicyEnum"
namespace: "dedicatedCloud"
description: "Which user will be disconnected first in case of quota of maximum connection is reached"
-enum: [
"first"
"last"
]
enumType: "string"
}
-dedicatedCloud.VMEncryption: {
id: "VMEncryption"
namespace: "dedicatedCloud"
description: "Virtual machine encryption option"
-properties: {
-state: {
type: "dedicatedCloud.option.StateEnum"
fullType: "dedicatedCloud.option.StateEnum"
canBeNull: false
readOnly: true
description: "State of the option"
required: false
}
}
}
-dedicatedCloud.VMEncryptionAccessNetwork: {
id: "VMEncryptionAccessNetwork"
namespace: "dedicatedCloud"
description: "Virtual machine encryption KMS server"
-properties: {
-description: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "Description of your option access network"
required: false
}
-ip: {
type: "ipv4"
fullType: "ipv4"
canBeNull: false
readOnly: true
description: "IP address of the remote service"
required: false
}
-kmsId: {
type: "long"
fullType: "long"
canBeNull: false
readOnly: true
description: "Id of the VM Encryption KMS"
required: false
}
-kmsTcpPort: {
type: "long"
fullType: "long"
canBeNull: false
readOnly: true
description: "VM Encryption KMS TCP port"
required: false
}
-sslThumbprint: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "SSL thumbprint of the remote service"
required: false
}
-state: {
type: "dedicatedCloud.optionAccessNetwork.StateEnum"
fullType: "dedicatedCloud.optionAccessNetwork.StateEnum"
canBeNull: false
readOnly: true
description: "State of the option"
required: false
}
}
}
-dedicatedCloud.Vendor: {
id: "Vendor"
namespace: "dedicatedCloud"
description: "Vendor information"
-properties: {
-vendorName: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "name"
required: false
}
}
}
-dedicatedCloud.VendorObjectTypeEnum: {
id: "VendorObjectTypeEnum"
namespace: "dedicatedCloud"
description: "Dedicated Cloud vendors objects types"
-enum: [
"cluster"
"datacenter"
"filer"
"host"
"vm"
]
enumType: "string"
}
-dedicatedCloud.Version: {
id: "Version"
namespace: "dedicatedCloud"
description: "Detailed version"
-properties: {
-build: {
type: "string"
canBeNull: false
readOnly: false
required: false
}
-major: {
type: "string"
canBeNull: false
readOnly: false
required: false
}
-minor: {
type: "string"
canBeNull: false
readOnly: false
required: false
}
}
}
-dedicatedCloud.Vlan: {
id: "Vlan"
namespace: "dedicatedCloud"
description: "vLAN"
-properties: {
-name: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
required: false
}
-routingRateLimit: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "Speed in Mbps"
required: false
}
-state: {
type: "dedicatedCloud.vlan.StateEnum"
fullType: "dedicatedCloud.vlan.StateEnum"
canBeNull: false
readOnly: true
required: false
}
-type: {
type: "dedicatedCloud.vlan.TypeEnum"
fullType: "dedicatedCloud.vlan.TypeEnum"
canBeNull: false
readOnly: true
required: false
}
-vlanId: {
type: "long"
fullType: "long"
canBeNull: false
readOnly: true
required: false
}
-vlanNumber: {
type: "long"
fullType: "long"
canBeNull: false
readOnly: true
required: false
}
}
}
-dedicatedCloud.Vm: {
id: "Vm"
namespace: "dedicatedCloud"
description: "Virtual machine"
-properties: {
-backup: {
type: "dedicatedCloud.backup.Backup"
fullType: "dedicatedCloud.backup.Backup"
canBeNull: true
readOnly: true
description: "Backup associated to this Virtual Machine"
required: false
}
-cdroms: {
type: "dedicatedCloud.virtualMachineCdrom[]"
fullType: "dedicatedCloud.virtualMachineCdrom[]"
canBeNull: true
readOnly: true
description: "Virtual machine cdroms devices"
required: false
}
-clusterName: {
type: "string"
fullType: "string"
canBeNull: true
readOnly: true
description: "Cluster of the virtual machine."
required: false
}
-cpuMax: {
type: "double"
fullType: "double"
canBeNull: true
readOnly: true
description: "Maximum CPU performance, in MHz."
required: false
}
-cpuNum: {
type: "long"
fullType: "long"
canBeNull: true
readOnly: true
description: "Number of processors in the virtual machine."
required: false
}
-cpuReady: {
type: "double"
fullType: "double"
canBeNull: true
readOnly: true
description: "Time that the virtual machine was ready, but could not get scheduled to run on the physical CPU. In millisecond"
required: false
}
-cpuReadyPercent: {
type: "double"
fullType: "double"
canBeNull: true
readOnly: true
description: "Percentage of time that the virtual machine was ready, but could not get scheduled to run on the physical CPU. In percent"
required: false
}
-cpuUsed: {
type: "long"
fullType: "long"
canBeNull: true
readOnly: true
description: "Current CPU performance, in MHz."
required: false
}
-filers: {
type: "dedicatedCloud.vmFiler[]"
fullType: "dedicatedCloud.vmFiler[]"
canBeNull: true
readOnly: true
description: "List of filers in use by the virtual machine."
required: false
}
-folderName: {
type: "string"
fullType: "string"
canBeNull: true
readOnly: true
description: "Folder of the virtual machine."
required: false
}
-guestOsFamily: {
type: "string"
fullType: "string"
canBeNull: true
readOnly: true
description: "VMware guest configured OS family"
required: false
}
-hostName: {
type: "string"
fullType: "string"
canBeNull: true
readOnly: true
description: "Name of the host hosting the virtual machine."
required: false
}
-license: {
type: "dedicatedCloud.spla.KmsLicenseIncludingLegacyEnum"
fullType: "dedicatedCloud.spla.KmsLicenseIncludingLegacyEnum"
canBeNull: true
readOnly: true
description: "Registered managed license"
required: false
}
-memoryMax: {
type: "long"
fullType: "long"
canBeNull: true
readOnly: true
description: "Memory size of the virtual machine, in MB"
required: false
}
-memoryTps: {
type: "string"
fullType: "string"
canBeNull: true
readOnly: true
description: "Amount of guest memory that is shared with other virtual machines, in Mb"
required: false
}
-memoryUsed: {
type: "long"
fullType: "long"
canBeNull: true
readOnly: true
description: "Current memory utilization, in MB"
required: false
}
-moRef: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "moRef of the virtual machine."
required: false
}
-name: {
type: "string"
fullType: "string"
canBeNull: true
readOnly: true
description: "Name of the virtual machine."
required: false
}
-netPacketRx: {
type: "double"
fullType: "double"
canBeNull: true
readOnly: true
description: "Number of packets received."
required: false
}
-netPacketTx: {
type: "double"
fullType: "double"
canBeNull: true
readOnly: true
description: "Number of packets transmitted."
required: false
}
-netRx: {
type: "double"
fullType: "double"
canBeNull: true
readOnly: true
description: "Rate at which data is received. In KB/s"
required: false
}
-netTx: {
type: "double"
fullType: "double"
canBeNull: true
readOnly: true
description: "Rate at which data is transmitted. In KB/s"
required: false
}
-networks: {
type: "dedicatedCloud.vmNetwork[]"
fullType: "dedicatedCloud.vmNetwork[]"
canBeNull: true
readOnly: true
description: "List of the networks link to this virtual machine"
required: false
}
-powerState: {
type: "dedicatedCloud.virtualMachinePowerState"
fullType: "dedicatedCloud.virtualMachinePowerState"
canBeNull: false
readOnly: true
description: "Power state of the virtual machine."
required: false
}
-readLatency: {
type: "double"
fullType: "double"
canBeNull: true
readOnly: true
description: "Amount of time for a read operation from the virtual disk. In millisecond"
required: false
}
-readPerSecond: {
type: "double"
fullType: "double"
canBeNull: true
readOnly: true
description: "Number of read issued per second to the virtual disk. In millisecond"
required: false
}
-readRate: {
type: "double"
fullType: "double"
canBeNull: true
readOnly: true
description: "Rate of reading data from the virtual disk. In KB/s"
required: false
}
-roleFt: {
type: "string"
fullType: "string"
canBeNull: true
readOnly: true
description: "The index of the current VM in instanceUuids array starting from 1, so 1 means that it is the primary VM."
required: false
}
-snapshotNum: {
type: "long"
fullType: "long"
canBeNull: true
readOnly: true
description: "Number of snapshot of the virtual machine."
required: false
}
-stateFt: {
type: "dedicatedCloud.virtualMachineFaultToleranceState"
fullType: "dedicatedCloud.virtualMachineFaultToleranceState"
canBeNull: true
readOnly: true
description: "The fault tolerance state of the virtual machine."
required: false
}
-vmId: {
type: "long"
fullType: "long"
canBeNull: false
readOnly: true
description: "Id of the virtual machine."
required: false
}
-vmwareTools: {
type: "string"
fullType: "string"
canBeNull: true
readOnly: true
description: "Current version status of VMware Tools in the guest operating system."
required: false
}
-vmwareToolsVersion: {
type: "string"
fullType: "string"
canBeNull: true
readOnly: true
description: "Current version of VMware Tools"
required: false
}
-writeLatency: {
type: "double"
fullType: "double"
canBeNull: true
readOnly: true
description: "Amount of time for a write operation from the virtual disk. In millisecond"
required: false
}
-writePerSecond: {
type: "double"
fullType: "double"
canBeNull: true
readOnly: true
description: "Number of write issued per second to the virtual disk. In millisecond"
required: false
}
-writeRate: {
type: "double"
fullType: "double"
canBeNull: true
readOnly: true
description: "Rate of writing data from the virtual disk. In KB/s"
required: false
}
}
}
-dedicatedCloud.Vrops: {
id: "Vrops"
namespace: "dedicatedCloud"
description: "VMware Aria Operations option"
-properties: {
-state: {
type: "dedicatedCloud.option.StateEnum"
fullType: "dedicatedCloud.option.StateEnum"
canBeNull: false
readOnly: true
description: "State of the option"
required: false
}
-upgrades: {
type: "string[]"
fullType: "string[]"
canBeNull: true
readOnly: true
description: "Available upgrades for Aria Operations"
required: false
}
-url: {
type: "string"
fullType: "string"
canBeNull: true
readOnly: true
description: "Url of Aria Operations interface"
required: false
}
-vROpsPublicIP: {
type: "ip"
fullType: "ip"
canBeNull: true
readOnly: true
description: "VMware Aria Operation public IP"
required: false
}
-version: {
type: "string"
fullType: "string"
canBeNull: true
readOnly: true
description: "Version of Aria Operations"
required: false
}
}
}
-dedicatedCloud.VropsOutgoingFlow: {
id: "VropsOutgoingFlow"
namespace: "dedicatedCloud"
description: "VMware Aria Operations outgoing flows"
-properties: {
-description: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "Outgoing flow description"
required: false
}
-ip: {
type: "ipv4"
fullType: "ipv4"
canBeNull: false
readOnly: true
description: "IP address of the remote service"
required: false
}
-outgoingFlowId: {
type: "long"
fullType: "long"
canBeNull: false
readOnly: true
description: "Id of the VMware Aria Operations outgoing flow"
required: false
}
-servicePort: {
type: "long"
fullType: "long"
canBeNull: false
readOnly: true
description: "Remote service port (25, 465, 587 or 2525)"
required: false
}
-state: {
type: "dedicatedCloud.optionAccessNetwork.StateEnum"
fullType: "dedicatedCloud.optionAccessNetwork.StateEnum"
canBeNull: false
readOnly: true
description: "Outgoing flow state"
required: false
}
}
}
-dedicatedCloud.VsanDatastore: {
id: "VsanDatastore"
namespace: "dedicatedCloud"
description: "vSAN datastore"
-properties: {
-clusterId: {
type: "long"
fullType: "long"
canBeNull: false
readOnly: true
description: "Id of Cluster."
required: false
}
-connectionState: {
type: "dedicatedCloud.filer.ConnexionStateEnum"
fullType: "dedicatedCloud.filer.ConnexionStateEnum"
canBeNull: true
readOnly: true
description: "Datastore connection state."
required: false
}
-datacenterId: {
type: "long"
fullType: "long"
canBeNull: false
readOnly: true
description: "Id of the datacenter."
required: false
}
-datastoreId: {
type: "long"
fullType: "long"
canBeNull: false
readOnly: true
description: "Id of the vsan datastore."
required: false
}
-datastoreName: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "Name of the datastore."
required: false
}
-spaceFree: {
type: "double"
fullType: "double"
canBeNull: true
readOnly: true
description: "Available space of this datastore, in GB"
required: false
}
-spaceProvisioned: {
type: "double"
fullType: "double"
canBeNull: true
readOnly: true
description: "Provisioned space of this datastore, in GB"
required: false
}
-spaceUsed: {
type: "double"
fullType: "double"
canBeNull: true
readOnly: true
description: "Used Space of this datastore, in GB"
required: false
}
-vmTotal: {
type: "long"
fullType: "long"
canBeNull: true
readOnly: true
description: "Number of virtual machine on the datastore"
required: false
}
}
}
-dedicatedCloud.ZpoolStockProfile: {
id: "ZpoolStockProfile"
namespace: "dedicatedCloud"
description: "Zpool and their availability"
-properties: {
-minimumAvailability: {
type: "string"
canBeNull: false
readOnly: false
description: "Minimum accepted available zpools"
required: false
}
-profile: {
type: "string"
canBeNull: false
readOnly: false
description: "Reference of zpool"
required: false
}
-realCount: {
type: "long"
canBeNull: false
readOnly: false
description: "Available zpools"
required: false
}
}
}
-dedicatedCloud.backup.Backup: {
id: "Backup"
namespace: "dedicatedCloud.backup"
description: "Details about a backup"
-properties: {
-allocatedDisk: {
type: "double"
canBeNull: true
readOnly: false
description: "Disk space allocated to the virtual machine (in GB)"
required: false
}
-backupDays: {
type: "dedicatedCloud.backup.BackupDaysEnum[]"
canBeNull: true
readOnly: false
description: "List of days your Virtual Machine will be backuped"
required: false
}
-backupRepositoryId: {
type: "long"
canBeNull: true
readOnly: false
description: "Associated backup repository Id"
required: false
}
-encryption: {
type: "boolean"
canBeNull: true
readOnly: false
description: "Backup is encrypted"
required: false
}
-lastCreationTime: {
type: "datetime"
canBeNull: true
readOnly: false
description: "Last creation time of the backup job"
required: false
}
-lastDuration: {
type: "complexType.UnitAndValue<long>"
canBeNull: true
readOnly: false
description: "Last duration of the backup job"
required: false
}
-lastResult: {
type: "dedicatedCloud.backup.JobStateEnum"
canBeNull: true
readOnly: false
description: "Last result of the backup job"
required: false
}
-lastSuccessfulCreationTime: {
type: "datetime"
canBeNull: true
readOnly: false
description: "Last successful creation time of the backup job"
required: false
}
-lastSuccessfulDuration: {
type: "complexType.UnitAndValue<long>"
canBeNull: true
readOnly: false
description: "Last successful duration of the backup job"
required: false
}
-offerType: {
type: "dedicatedCloud.backup.OfferTypeEnum"
canBeNull: true
readOnly: false
description: "Offer type of the backup job"
required: false
}
-restorePoints: {
type: "dedicatedCloud.backup.RestorePoint[]"
canBeNull: true
readOnly: false
description: "Restore points of this backup job"
required: false
}
-retentionTime: {
type: "long"
canBeNull: true
readOnly: false
description: "Number of days before the backup is deleted"
required: false
}
-state: {
type: "dedicatedCloud.backup.StateEnum"
canBeNull: true
readOnly: false
description: "State of the backup job"
required: false
}
}
}
-dedicatedCloud.backup.BackupCapabilities: {
id: "BackupCapabilities"
namespace: "dedicatedCloud.backup"
description: "Details about BackupCapabilities"
-properties: {
-backupDays: {
type: "boolean"
canBeNull: false
readOnly: false
description: "Customized backup days"
required: false
}
-customReport: {
type: "boolean"
canBeNull: false
readOnly: false
description: "Customized Backup report"
required: false
}
-dedicatedProxy: {
type: "boolean"
canBeNull: false
readOnly: false
description: "Indicates additional backup proxy for large disk size VM"
required: false
}
-encryption: {
type: "boolean"
canBeNull: false
readOnly: false
description: "Indicates if backup will be encrypted"
required: false
}
-mailAddress: {
type: "boolean"
canBeNull: false
readOnly: false
description: "Indicates if customer can add an additional email address for backup report"
required: false
}
-minimumFullBackups: {
type: "long"
canBeNull: false
readOnly: false
description: "Minimum number of full backups"
required: false
}
-offerName: {
type: "string"
canBeNull: false
readOnly: false
description: "Name of offer type"
required: false
}
-proxyPerHost: {
type: "boolean"
canBeNull: false
readOnly: false
description: "Backup Proxy per host"
required: false
}
-replication: {
type: "boolean"
canBeNull: false
readOnly: false
description: "Backup Replication enabled"
required: false
}
-retention: {
type: "long"
canBeNull: false
readOnly: false
description: "Restore points"
required: false
}
-scheduleHour: {
type: "boolean"
canBeNull: false
readOnly: false
description: "Scheduled hour of backup start customizable"
required: false
}
}
}
-dedicatedCloud.backup.BackupDaysEnum: {
id: "BackupDaysEnum"
namespace: "dedicatedCloud.backup"
description: "All the possible Days of Backup"
-enum: [
"Friday"
"Monday"
"Saturday"
"Sunday"
"Thursday"
"Tuesday"
"Wednesday"
]
enumType: "string"
}
-dedicatedCloud.backup.BackupTypeEnum: {
id: "BackupTypeEnum"
namespace: "dedicatedCloud.backup"
description: "All the type of a restore point"
-enum: [
"full"
"incremental"
]
enumType: "string"
}
-dedicatedCloud.backup.JobStateEnum: {
id: "JobStateEnum"
namespace: "dedicatedCloud.backup"
description: "State of the backup job"
-enum: [
"failed"
"running"
"stopped"
"stopping"
"success"
"unknown"
"warning"
]
enumType: "string"
}
-dedicatedCloud.backup.OfferTypeEnum: {
id: "OfferTypeEnum"
namespace: "dedicatedCloud.backup"
description: "All the offer type of the backup"
-enum: [
"advanced"
"backup"
"classic"
"legacy"
"premium"
]
enumType: "string"
}
-dedicatedCloud.backup.OptimizeMessageEnum: {
id: "OptimizeMessageEnum"
namespace: "dedicatedCloud.backup"
description: "All messages descriptions for the proxies optimization"
-enum: [
"hasMoreBackupJobs"
"hasMoreProxies"
"hasSufficientProxies"
"noBackupJobs"
]
enumType: "string"
}
-dedicatedCloud.backup.OptimizeProxies: {
id: "OptimizeProxies"
namespace: "dedicatedCloud.backup"
description: "Details about proxies Optimization"
-properties: {
-message: {
type: "dedicatedCloud.backup.OptimizeMessageEnum"
canBeNull: false
readOnly: false
description: "Brief information about recommendation"
required: false
}
-numberOfProxiesDeployed: {
type: "long"
canBeNull: false
readOnly: false
description: "Number of proxies deployed in the Datacenter"
required: false
}
-numberOfProxiesImpact: {
type: "long"
canBeNull: false
readOnly: false
description: "Number of proxies get impacted by recommendation"
required: false
}
-recommendation: {
type: "dedicatedCloud.backup.OptimizeRecommendationEnum"
canBeNull: false
readOnly: false
description: "Action recommended for the optimization"
required: false
}
}
}
-dedicatedCloud.backup.OptimizeRecommendationEnum: {
id: "OptimizeRecommendationEnum"
namespace: "dedicatedCloud.backup"
description: "All recommendations for the proxies optimization"
-enum: [
"add"
"optimized"
"remove"
]
enumType: "string"
}
-dedicatedCloud.backup.ReplicationSyncStatus: {
id: "ReplicationSyncStatus"
namespace: "dedicatedCloud.backup"
description: "All possible replication sync status"
-enum: [
"ok"
"out-of-sync"
"sync-required"
"unknown"
]
enumType: "string"
}
-dedicatedCloud.backup.RestorePoint: {
id: "RestorePoint"
namespace: "dedicatedCloud.backup"
description: "Details about a restore point"
-properties: {
-creationTime: {
type: "datetime"
canBeNull: true
readOnly: false
description: "Creation time of the restore point"
required: false
}
-isCorrupted: {
type: "boolean"
canBeNull: true
readOnly: false
description: "Show if the restore point is corrupted"
required: false
}
-restorePointId: {
type: "long"
canBeNull: false
readOnly: false
description: "Id of the restore point"
required: false
}
-size: {
type: "complexType.UnitAndValue<long>"
canBeNull: true
readOnly: false
description: "Size of the restore point"
required: false
}
-type: {
type: "dedicatedCloud.backup.BackupTypeEnum"
canBeNull: true
readOnly: false
description: "Type of the restore point"
required: false
}
}
}
-dedicatedCloud.backup.StateEnum: {
id: "StateEnum"
namespace: "dedicatedCloud.backup"
description: "All the state of the backup"
-enum: [
"deleting"
"delivered"
"disabled"
"disabling"
"enabling"
"error"
"migrating"
"pending"
"removed"
"stopping"
"toCreate"
"toDelete"
"toDisable"
"toEnable"
"toStop"
"unknown"
]
enumType: "string"
}
-dedicatedCloud.capabilities.FeatureStatusEnum: {
id: "FeatureStatusEnum"
namespace: "dedicatedCloud.capabilities"
description: "All Dedicated Cloud feature status available"
-enum: [
"active"
"comingSoon"
"no"
]
enumType: "string"
}
-dedicatedCloud.cluster.AutoScale: {
id: "AutoScale"
namespace: "dedicatedCloud.cluster"
description: "Details about AutoScale"
-properties: {
-autoScaleInHost: {
type: "dedicatedCloud.cluster.AutoScaleModeEnum"
canBeNull: false
readOnly: false
description: "Mode of Auto Scale-In Host operation"
required: false
}
-autoScaleOutHost: {
type: "dedicatedCloud.cluster.AutoScaleModeEnum"
canBeNull: false
readOnly: false
description: "Mode of Auto Scale-Out Host operation"
required: false
}
-autoScaleOutStorage: {
type: "dedicatedCloud.cluster.AutoScaleModeEnum"
canBeNull: false
readOnly: false
description: "Mode of Auto Scale-Out Storage operation"
required: false
}
-configId: {
type: "long"
canBeNull: false
readOnly: false
description: "AutoScale configuration id"
required: false
}
-id: {
type: "long"
canBeNull: false
readOnly: false
description: "Id of the AutoScale Service"
required: false
}
-inMaintenanceMode: {
type: "boolean"
canBeNull: false
readOnly: false
description: "Maintenace Mode for AutoScale service"
required: false
}
-state: {
type: "dedicatedCloud.option.StateEnum"
canBeNull: false
readOnly: false
description: "State of the Autoscale service"
required: false
}
}
}
-dedicatedCloud.cluster.AutoScaleModeEnum: {
id: "AutoScaleModeEnum"
namespace: "dedicatedCloud.cluster"
description: "Modes of the AutoScale service"
-enum: [
"automatic"
"manual"
]
enumType: "string"
}
-dedicatedCloud.cluster.ClusterConfigsStatusEnum: {
id: "ClusterConfigsStatusEnum"
namespace: "dedicatedCloud.cluster"
description: "Config status of the cluster"
-enum: [
"disabled"
"enabled"
"unknown"
]
enumType: "string"
}
-dedicatedCloud.cluster.ClusterDrsModeEnum: {
id: "ClusterDrsModeEnum"
namespace: "dedicatedCloud.cluster"
description: "Config status of the cluster"
-enum: [
"fullyAutomated"
"manual"
"partiallyAutomated"
]
enumType: "string"
}
-dedicatedCloud.compliantRanges: {
id: "compliantRanges"
namespace: "dedicatedCloud"
description: "compliant range information"
-properties: {
-addons: {
type: "dedicatedCloud.requiredAddon[]"
canBeNull: true
readOnly: false
required: false
}
-estimateRequired: {
type: "boolean"
canBeNull: false
readOnly: false
required: false
}
-name: {
type: "string"
canBeNull: false
readOnly: false
required: false
}
-upgradeCode: {
type: "string"
canBeNull: true
readOnly: false
required: false
}
-upgradeRequired: {
type: "boolean"
canBeNull: false
readOnly: false
required: false
}
}
}
-dedicatedCloud.dedicatedCloud: {
id: "dedicatedCloud"
namespace: "dedicatedCloud"
description: "VMware on OVHcloud"
-properties: {
-advancedSecurity: {
type: "boolean"
fullType: "boolean"
canBeNull: false
readOnly: true
description: "Advanced security state"
required: false
}
-bandwidth: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "The current bandwidth of your VMware on OVHcloud"
required: false
}
-billingType: {
type: "dedicatedCloud.BillingTypeEnum"
fullType: "dedicatedCloud.BillingTypeEnum"
canBeNull: false
readOnly: true
description: "Billing type of your VMware on OVHcloud"
required: false
}
-canMigrateToVCD: {
type: "boolean"
fullType: "boolean"
canBeNull: false
readOnly: true
description: "Can the PCC be migrated to VCD"
required: false
}
-certifiedInterfaceUrl: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "Url to the VMware on OVHcloud certified interface"
required: false
}
-commercialRange: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "The current version of your VMware on OVHcloud"
required: false
}
-description: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: false
description: "Description of your VMware on OVHcloud"
required: false
}
-generation: {
type: "dedicatedCloud.GenerationEnum"
fullType: "dedicatedCloud.GenerationEnum"
canBeNull: false
readOnly: true
description: "Generation of your VMware on OVHcloud"
required: false
}
-location: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "Datacenter where your VMware on OVHcloud is physically located"
required: false
}
-managementInterface: {
type: "dedicatedCloud.ManagementInterfaceEnum"
fullType: "dedicatedCloud.ManagementInterfaceEnum"
canBeNull: false
readOnly: true
description: "The management interface name"
required: false
}
-productReference: {
type: "dedicatedCloud.productReferenceEnum"
fullType: "dedicatedCloud.productReferenceEnum"
canBeNull: false
readOnly: true
description: "The reference universe information for your VMware on OVHcloud"
required: false
}
-serviceName: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "Service name of your VMware on OVHcloud"
required: false
}
-servicePackName: {
type: "string"
fullType: "string"
canBeNull: true
readOnly: true
description: "Name of the current service pack"
required: false
}
-spla: {
type: "boolean"
fullType: "boolean"
canBeNull: false
readOnly: true
description: "SPLA licensing state"
required: false
}
-sslV3: {
type: "boolean"
fullType: "boolean"
canBeNull: true
readOnly: false
description: "Enable SSL v3 support. Warning : this option is not recommended as it was recognized as a security breach. If this is enabled, we advise you to enable the filtered User access policy"
required: false
}
-state: {
type: "dedicatedCloud.StateEnum"
fullType: "dedicatedCloud.StateEnum"
canBeNull: false
readOnly: true
description: "Current state of your VMware on OVHcloud"
required: false
}
-userAccessPolicy: {
type: "dedicatedCloud.UserAccessPolicyEnum"
fullType: "dedicatedCloud.UserAccessPolicyEnum"
canBeNull: false
readOnly: false
description: "Access policy of your VMware on OVHcloud : opened to every IPs or filtered"
required: false
}
-userLimitConcurrentSession: {
type: "long"
fullType: "long"
canBeNull: false
readOnly: false
description: "The maximum amount of connected users allowed on the VMware on OVHcloud management interface"
required: false
}
-userLogoutPolicy: {
type: "dedicatedCloud.UserLogoutPolicyEnum"
fullType: "dedicatedCloud.UserLogoutPolicyEnum"
canBeNull: false
readOnly: false
required: false
}
-userSessionTimeout: {
type: "long"
fullType: "long"
canBeNull: false
readOnly: false
description: "The timeout (in seconds) for the user sessions on the VMware on OVHcloud management interface. 0 value disable the timeout"
required: false
}
-vScopeUrl: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "Url to the VMware on OVHcloud vScope interface"
required: false
}
-version: {
type: "dedicatedCloud.Version"
fullType: "dedicatedCloud.Version"
canBeNull: false
readOnly: true
description: "Version of the management interface"
required: false
}
-webInterfaceUrl: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "Url to the VMware on OVHcloud web interface"
required: false
}
}
}
-dedicatedCloud.dedicatedCloudWithIAM: {
id: "dedicatedCloud"
namespace: "dedicatedCloud"
description: "VMware on OVHcloud"
-properties: {
-advancedSecurity: {
type: "boolean"
fullType: "boolean"
canBeNull: false
readOnly: true
description: "Advanced security state"
required: false
}
-bandwidth: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "The current bandwidth of your VMware on OVHcloud"
required: false
}
-billingType: {
type: "dedicatedCloud.BillingTypeEnum"
fullType: "dedicatedCloud.BillingTypeEnum"
canBeNull: false
readOnly: true
description: "Billing type of your VMware on OVHcloud"
required: false
}
-canMigrateToVCD: {
type: "boolean"
fullType: "boolean"
canBeNull: false
readOnly: true
description: "Can the PCC be migrated to VCD"
required: false
}
-certifiedInterfaceUrl: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "Url to the VMware on OVHcloud certified interface"
required: false
}
-commercialRange: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "The current version of your VMware on OVHcloud"
required: false
}
-description: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: false
description: "Description of your VMware on OVHcloud"
required: false
}
-generation: {
type: "dedicatedCloud.GenerationEnum"
fullType: "dedicatedCloud.GenerationEnum"
canBeNull: false
readOnly: true
description: "Generation of your VMware on OVHcloud"
required: false
}
-iam: {
type: "iam.ResourceMetadata"
canBeNull: true
readOnly: true
description: "IAM resource metadata"
required: false
}
-location: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "Datacenter where your VMware on OVHcloud is physically located"
required: false
}
-managementInterface: {
type: "dedicatedCloud.ManagementInterfaceEnum"
fullType: "dedicatedCloud.ManagementInterfaceEnum"
canBeNull: false
readOnly: true
description: "The management interface name"
required: false
}
-productReference: {
type: "dedicatedCloud.productReferenceEnum"
fullType: "dedicatedCloud.productReferenceEnum"
canBeNull: false
readOnly: true
description: "The reference universe information for your VMware on OVHcloud"
required: false
}
-serviceName: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "Service name of your VMware on OVHcloud"
required: false
}
-servicePackName: {
type: "string"
fullType: "string"
canBeNull: true
readOnly: true
description: "Name of the current service pack"
required: false
}
-spla: {
type: "boolean"
fullType: "boolean"
canBeNull: false
readOnly: true
description: "SPLA licensing state"
required: false
}
-sslV3: {
type: "boolean"
fullType: "boolean"
canBeNull: true
readOnly: false
description: "Enable SSL v3 support. Warning : this option is not recommended as it was recognized as a security breach. If this is enabled, we advise you to enable the filtered User access policy"
required: false
}
-state: {
type: "dedicatedCloud.StateEnum"
fullType: "dedicatedCloud.StateEnum"
canBeNull: false
readOnly: true
description: "Current state of your VMware on OVHcloud"
required: false
}
-userAccessPolicy: {
type: "dedicatedCloud.UserAccessPolicyEnum"
fullType: "dedicatedCloud.UserAccessPolicyEnum"
canBeNull: false
readOnly: false
description: "Access policy of your VMware on OVHcloud : opened to every IPs or filtered"
required: false
}
-userLimitConcurrentSession: {
type: "long"
fullType: "long"
canBeNull: false
readOnly: false
description: "The maximum amount of connected users allowed on the VMware on OVHcloud management interface"
required: false
}
-userLogoutPolicy: {
type: "dedicatedCloud.UserLogoutPolicyEnum"
fullType: "dedicatedCloud.UserLogoutPolicyEnum"
canBeNull: false
readOnly: false
required: false
}
-userSessionTimeout: {
type: "long"
fullType: "long"
canBeNull: false
readOnly: false
description: "The timeout (in seconds) for the user sessions on the VMware on OVHcloud management interface. 0 value disable the timeout"
required: false
}
-vScopeUrl: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "Url to the VMware on OVHcloud vScope interface"
required: false
}
-version: {
type: "dedicatedCloud.Version"
fullType: "dedicatedCloud.Version"
canBeNull: false
readOnly: true
description: "Version of the management interface"
required: false
}
-webInterfaceUrl: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "Url to the VMware on OVHcloud web interface"
required: false
}
}
}
-dedicatedCloud.disasterRecovery.DrpTypeEnum: {
id: "DrpTypeEnum"
namespace: "dedicatedCloud.disasterRecovery"
description: "Disaster Recovery Plan Types"
-enum: [
"onPremise"
"ovh"
]
enumType: "string"
}
-dedicatedCloud.disasterRecovery.LocalSiteDetails: {
id: "LocalSiteDetails"
namespace: "dedicatedCloud.disasterRecovery"
description: "Information on the local datacenter"
-properties: {
-endpointPublicIp: {
type: "ip"
canBeNull: true
readOnly: false
description: "Local tunnel endpoint public Ip"
required: false
}
-role: {
type: "dedicatedCloud.disasterRecovery.SiteRoleEnum"
canBeNull: false
readOnly: false
description: "Zvm mode configured"
required: false
}
-state: {
type: "dedicatedCloud.StateEnum"
canBeNull: true
readOnly: false
description: "State of the local Zvm"
required: false
}
-type: {
type: "dedicatedCloud.disasterRecovery.SiteTypeEnum"
canBeNull: false
readOnly: false
description: "Type of hosting for the local datacenter"
required: false
}
-zertoVersion: {
type: "string"
canBeNull: false
readOnly: false
description: "Installed version of Zerto"
required: false
}
-zvmIp: {
type: "ip"
canBeNull: true
readOnly: false
description: "Local Network Ip of the Zerto virtual manager"
required: false
}
}
}
-dedicatedCloud.disasterRecovery.Profile: {
id: "Profile"
namespace: "dedicatedCloud.disasterRecovery"
description: "State of the disaster recovery option"
-properties: {
-drpType: {
type: "dedicatedCloud.disasterRecovery.DrpTypeEnum"
canBeNull: true
readOnly: false
description: "Disaster Recovery Plan Type"
required: false
}
-localSiteInformation: {
type: "dedicatedCloud.disasterRecovery.LocalSiteDetails"
canBeNull: true
readOnly: false
description: "Information about the site installed on this Dedicated Cloud"
required: false
}
-remoteSiteInformation: {
type: "dedicatedCloud.disasterRecovery.RemoteSiteDetails"
canBeNull: true
readOnly: false
description: "Information about the remote paired site"
required: false
}
-state: {
type: "dedicatedCloud.StateEnum"
canBeNull: false
readOnly: false
description: "State of the disaster recovery service"
required: false
}
-systemVersion: {
type: "string"
canBeNull: false
readOnly: false
description: "Technical solution used"
required: false
}
}
}
-dedicatedCloud.disasterRecovery.RemoteSiteDetails: {
id: "RemoteSiteDetails"
namespace: "dedicatedCloud.disasterRecovery"
description: "Information on the remote datacenter linked to the local one"
-properties: {
-datacenterId: {
type: "long"
canBeNull: true
readOnly: false
description: "Datacenter Id (if hosted by OVH)"
required: false
}
-datacenterName: {
type: "string"
canBeNull: true
readOnly: false
description: "Datacenter name (if hosted by OVH)"
required: false
}
-lastVpnConfig: {
type: "datetime"
canBeNull: true
readOnly: false
description: "Last VPN config change date (if type is onPremise)"
required: false
}
-remoteEndpointInternalIp: {
type: "ipv4"
canBeNull: true
readOnly: false
description: "Stunnel endpoint internal IP (if type is onPremise)"
required: false
}
-remoteEndpointPublicIp: {
type: "ipv4"
canBeNull: true
readOnly: false
description: "Stunnel endpoint public IP (if type is onPremise)"
required: false
}
-remoteZvmInternalIp: {
type: "ipv4"
canBeNull: true
readOnly: false
description: "Remote ZVM IP (if type is onPremise)"
required: false
}
-role: {
type: "dedicatedCloud.disasterRecovery.SiteRoleEnum"
canBeNull: true
readOnly: false
description: "Zvm mode configured"
required: false
}
-serviceName: {
type: "string"
canBeNull: true
readOnly: false
description: "Service name (if hosted by OVH)"
required: false
}
-state: {
type: "dedicatedCloud.StateEnum"
canBeNull: true
readOnly: false
description: "State of the remote Zvm"
required: false
}
-type: {
type: "dedicatedCloud.disasterRecovery.SiteTypeEnum"
canBeNull: false
readOnly: false
description: "Type of hosting for the remote datacenter"
required: false
}
-vpnConfigState: {
type: "dedicatedCloud.disasterRecovery.VpnConfigStateEnum"
canBeNull: true
readOnly: false
description: "VPN configuration state (if type is onPremise)"
required: false
}
-zertoVersion: {
type: "string"
canBeNull: true
readOnly: false
description: "Installed version of Zerto"
required: false
}
}
}
-dedicatedCloud.disasterRecovery.SiteRoleEnum: {
id: "SiteRoleEnum"
namespace: "dedicatedCloud.disasterRecovery"
description: "Site manager configured mode"
-enum: [
"primary"
"secondary"
"single"
]
enumType: "string"
}
-dedicatedCloud.disasterRecovery.SiteTypeEnum: {
id: "SiteTypeEnum"
namespace: "dedicatedCloud.disasterRecovery"
description: "Site manager hosting type"
-enum: [
"onPremise"
"ovhPrivateCloud"
]
enumType: "string"
}
-dedicatedCloud.disasterRecovery.VpnConfigStateEnum: {
id: "VpnConfigStateEnum"
namespace: "dedicatedCloud.disasterRecovery"
description: "Zerto VPN configuration state"
-enum: [
"configured"
"configuring"
"error"
"notConfigured"
"tunnelError"
]
enumType: "string"
}
-dedicatedCloud.disasterRecovery.ZertoProtectedVm: {
id: "ZertoProtectedVm"
namespace: "dedicatedCloud.disasterRecovery"
description: "Information on virtual machine protected by Zerto"
-properties: {
-fromDate: {
type: "datetime"
canBeNull: false
readOnly: false
description: "Start of the backup for the requested period"
required: false
}
-protectedSite: {
type: "string"
canBeNull: false
readOnly: false
description: "Name of the site in which the VM is running"
required: false
}
-recoverySite: {
type: "string"
canBeNull: false
readOnly: false
description: "Name of the site where the VM is backed up"
required: false
}
-vmId: {
type: "string"
canBeNull: false
readOnly: false
description: "ID of the protected VM"
required: false
}
-vmName: {
type: "string"
canBeNull: false
readOnly: false
description: "Name of the protected VM"
required: false
}
-vpgName: {
type: "string"
canBeNull: false
readOnly: false
description: "Name of the virtual protection group in which the VM is located"
required: false
}
}
}
-dedicatedCloud.disasterRecovery.ZertoRemoteVra: {
id: "ZertoRemoteVra"
namespace: "dedicatedCloud.disasterRecovery"
description: "Zerto disaster recovery remote site"
-properties: {
-id: {
type: "long"
canBeNull: false
readOnly: false
description: "ID of the remote Vra Network"
required: false
}
-label: {
type: "string"
canBeNull: false
readOnly: false
description: "Name given to this network"
required: false
}
-remoteEndpointPublicIp: {
type: "ip"
canBeNull: false
readOnly: false
description: "Your onsite endpoint public IP for the secured replication data tunnel"
required: false
}
-remoteVraNetwork: {
type: "ipBlock"
canBeNull: false
readOnly: false
description: "Internal zerto subnet of your onsite infrastructure (ip/cidr)"
required: false
}
-remoteZvmInternalIp: {
type: "ip"
canBeNull: false
readOnly: false
description: "Internal ZVM ip on your onsite infrastructure local network"
required: false
}
}
}
-dedicatedCloud.disasterRecovery.ZertoVraResourceSizeEnum: {
id: "ZertoVraResourceSizeEnum"
namespace: "dedicatedCloud.disasterRecovery"
description: "Zerto VRA resource size"
-enum: [
"L"
"S"
"XL"
"XS"
]
enumType: "string"
}
-dedicatedCloud.disasterRecovery.ZertoVrasResource: {
id: "ZertoVrasResource"
namespace: "dedicatedCloud.disasterRecovery"
description: "Zerto VRA resource details"
-properties: {
-cpu: {
type: "long"
canBeNull: false
readOnly: false
description: "Number of CPUs of VRA VM"
required: false
}
-memory: {
type: "long"
canBeNull: false
readOnly: false
description: "Memory of VRA vm in GB"
required: false
}
-vmId: {
type: "long"
canBeNull: false
readOnly: false
description: "ID of the Vra"
required: false
}
-vraName: {
type: "string"
canBeNull: false
readOnly: false
description: "Name of the VRA VM"
required: false
}
}
}
-dedicatedCloud.filer.ConnexionStateEnum: {
id: "ConnexionStateEnum"
namespace: "dedicatedCloud.filer"
description: "Connexion states for a Dedicated Cloud Filer."
-enum: [
"offline"
"online"
]
enumType: "string"
}
-dedicatedCloud.filer.FilerTypeEnum: {
id: "FilerTypeEnum"
namespace: "dedicatedCloud.filer"
description: "All types of filer that are available for restoring a VM"
-enum: [
"nas"
"vsan"
]
enumType: "string"
}
-dedicatedCloud.filer.HourlyConsumption: {
id: "HourlyConsumption"
namespace: "dedicatedCloud.filer"
description: "Hourly consumption of a filer"
-properties: {
-consumption: {
type: "complexType.UnitAndValue<double>"
canBeNull: false
readOnly: false
description: "Consumption of the Filer"
required: false
}
-lastUpdate: {
type: "datetime"
canBeNull: false
readOnly: false
description: "Last update"
required: false
}
}
}
-dedicatedCloud.filer.Location: {
id: "Location"
namespace: "dedicatedCloud.filer"
description: "Location of the Filer"
-properties: {
-datacenter: {
type: "dedicated.DatacenterEnum"
canBeNull: false
readOnly: false
description: "Datacenter of the Filer."
required: false
}
-rack: {
type: "string"
canBeNull: false
readOnly: false
description: "Rack of the slave Filer."
required: false
}
-room: {
type: "string"
canBeNull: false
readOnly: false
description: "Room of the Filer."
required: false
}
}
}
-dedicatedCloud.filer.NodeTypeEnum: {
id: "NodeTypeEnum"
namespace: "dedicatedCloud.filer"
description: "All nodes types for a Filer"
-enum: [
"master"
"slave"
]
enumType: "string"
}
-dedicatedCloud.filer.Profile: {
id: "Profile"
namespace: "dedicatedCloud.filer"
description: "A Filer profile"
-properties: {
-fullName: {
type: "string"
canBeNull: false
readOnly: false
description: "Human-Readable name"
required: false
}
-name: {
type: "string"
canBeNull: false
readOnly: false
description: "Commercial name"
required: false
}
-size: {
type: "complexType.UnitAndValue<long>"
canBeNull: false
readOnly: false
required: false
}
}
}
-dedicatedCloud.filer.StateEnum: {
id: "StateEnum"
namespace: "dedicatedCloud.filer"
description: "All states a Dedicated Cloud Filer can be in"
-enum: [
"adding"
"delivered"
"error"
"removing"
"unknown"
]
enumType: "string"
}
-dedicatedCloud.host.HourlyConsumption: {
id: "HourlyConsumption"
namespace: "dedicatedCloud.host"
description: "Hourly consumption of a host"
-properties: {
-consumption: {
type: "complexType.UnitAndValue<double>"
canBeNull: false
readOnly: false
description: "Consumption of the Host."
required: false
}
-lastUpdate: {
type: "datetime"
canBeNull: false
readOnly: false
description: "Last update."
required: false
}
}
}
-dedicatedCloud.host.Location: {
id: "Location"
namespace: "dedicatedCloud.host"
description: "Location of the Host"
-properties: {
-datacenter: {
type: "dedicated.DatacenterEnum"
canBeNull: false
readOnly: false
description: "Datacenter of the Host."
required: false
}
-rack: {
type: "string"
canBeNull: false
readOnly: false
description: "Rack of the Host."
required: false
}
-room: {
type: "string"
canBeNull: false
readOnly: false
description: "Room of the Host."
required: false
}
}
}
-dedicatedCloud.host.Profile: {
id: "Profile"
namespace: "dedicatedCloud.host"
description: "A Host profile"
-properties: {
-core: {
type: "string"
canBeNull: false
readOnly: false
required: false
}
-cpu: {
type: "complexType.UnitAndValue<double>"
canBeNull: false
readOnly: false
required: false
}
-name: {
type: "string"
canBeNull: false
readOnly: false
required: false
}
-ram: {
type: "complexType.UnitAndValue<long>"
canBeNull: false
readOnly: false
required: false
}
}
}
-dedicatedCloud.host.StateEnum: {
id: "StateEnum"
namespace: "dedicatedCloud.host"
description: "All states a Dedicated Cloud Host can be in"
-enum: [
"adding"
"delivered"
"error"
"removing"
"unknown"
]
enumType: "string"
}
-dedicatedCloud.hostSystemConnectionState: {
id: "hostSystemConnectionState"
namespace: "dedicatedCloud"
description: "The connection state of the host"
-enum: [
"connected"
"disconnected"
"notResponding"
]
enumType: "string"
}
-dedicatedCloud.ipUsageEnum: {
id: "ipUsageEnum"
namespace: "dedicatedCloud"
description: "IP address usage"
-enum: [
"nsxt"
"reserved"
"vm"
]
enumType: "string"
}
-dedicatedCloud.ldpKind: {
id: "ldpKind"
namespace: "dedicatedCloud"
description: "Log kind for your dedicated cloud"
-properties: {
-additionalReturnedFields: {
type: "string[]"
fullType: "string[]"
canBeNull: false
readOnly: true
description: "List of additional log fields managed in this log kind"
required: false
}
-createdAt: {
type: "datetime"
fullType: "datetime"
canBeNull: false
readOnly: true
description: "Creation date of the log kind"
required: false
}
-displayName: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "Log kind display name"
required: false
}
-kindId: {
type: "uuid"
fullType: "uuid"
canBeNull: false
readOnly: true
description: "Log kind ID"
required: false
}
-name: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "Log kind name"
required: false
}
-updatedAt: {
type: "datetime"
fullType: "datetime"
canBeNull: false
readOnly: true
description: "Last update date of the log kind"
required: false
}
}
}
-dedicatedCloud.ldpSubscription: {
id: "ldpSubscription"
namespace: "dedicatedCloud"
description: "Log subscription for your dedicated cloud"
-properties: {
-createdAt: {
type: "datetime"
fullType: "datetime"
canBeNull: false
readOnly: true
description: "Creation date of the subscription"
required: false
}
-kind: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "Log kind name of this subscription"
required: false
}
-resource: {
type: "dedicatedCloud.LogSubscriptionResource"
fullType: "dedicatedCloud.LogSubscriptionResource"
canBeNull: false
readOnly: true
description: "Subscribed resource, where the logs come from"
required: false
}
-serviceName: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "Name of the destination log service"
required: false
}
-streamId: {
type: "uuid"
fullType: "uuid"
canBeNull: false
readOnly: true
description: "Id of the destination log stream"
required: false
}
-subscriptionId: {
type: "uuid"
fullType: "uuid"
canBeNull: false
readOnly: true
description: "Subscription ID"
required: false
}
-updatedAt: {
type: "datetime"
fullType: "datetime"
canBeNull: false
readOnly: true
description: "Last update date of the subscription"
required: false
}
}
}
-dedicatedCloud.nsxt.NsxtEdgeScalingCapability: {
id: "NsxtEdgeScalingCapability"
namespace: "dedicatedCloud.nsxt"
description: "Maximum number of NSX-T Edges supported in datacenter"
-properties: {
-number: {
type: "long"
canBeNull: true
readOnly: false
required: false
}
}
}
-dedicatedCloud.nsxt.NsxtEdgeSizeEnum: {
id: "NsxtEdgeSizeEnum"
namespace: "dedicatedCloud.nsxt"
description: "Sizes of NSX-T Edges"
-enum: [
"LARGE"
"MEDIUM"
"XLARGE"
]
enumType: "string"
}
-dedicatedCloud.nsxt.NsxtEdgeSizingCapability: {
id: "NsxtEdgeSizingCapability"
namespace: "dedicatedCloud.nsxt"
description: "Available sizing of NSX-T Edges supported in datacenter"
-properties: {
-size: {
type: "string[]"
canBeNull: false
readOnly: false
required: false
}
}
}
-dedicatedCloud.option.DatacenterOptionState: {
id: "DatacenterOptionState"
namespace: "dedicatedCloud.option"
description: "States of a Dedicated Cloud Datacenter Option"
-properties: {
-id: {
type: "long"
canBeNull: false
readOnly: false
description: "ID of the Datacenter"
required: false
}
-state: {
type: "dedicatedCloud.option.StateEnum"
canBeNull: false
readOnly: false
description: "State of the Datacenter option"
required: false
}
}
}
-dedicatedCloud.option.StateEnum: {
id: "StateEnum"
namespace: "dedicatedCloud.option"
description: "States of a Dedicated Cloud option"
-enum: [
"disabled"
"disabling"
"enabled"
"enabling"
"error"
"migrating"
"unknown"
]
enumType: "string"
}
-dedicatedCloud.optionAccessNetwork.StateEnum: {
id: "StateEnum"
namespace: "dedicatedCloud.optionAccessNetwork"
description: "States of a Dedicated Cloud option"
-enum: [
"creating"
"deleting"
"delivered"
"error"
"toCreate"
"toDelete"
"toUpdate"
"unknown"
"updating"
]
enumType: "string"
}
-dedicatedCloud.optionCompatibility: {
id: "optionCompatibility"
namespace: "dedicatedCloud"
description: "A structure describing option compatibility"
-properties: {
-newCommercialVersion: {
type: "string"
canBeNull: false
readOnly: false
description: "The new/future commercial version"
required: false
}
-oldCommercialVersion: {
type: "string"
canBeNull: false
readOnly: false
description: "The old/current commercial version"
required: false
}
}
}
-dedicatedCloud.passwordPolicy: {
id: "passwordPolicy"
namespace: "dedicatedCloud"
description: "A structure describing the current password policy for your Dedicated Cloud"
-properties: {
-deniedChars: {
type: "string[]"
canBeNull: false
readOnly: false
description: "List of denied characters in the password"
required: false
}
-digitMandatory: {
type: "boolean"
canBeNull: false
readOnly: false
description: "Whether or not a digit (0-9) is mandatory in the password"
required: false
}
-historyCheck: {
type: "long"
canBeNull: false
readOnly: false
description: "Number of previous passwords to keep"
required: false
}
-letterMandatory: {
type: "boolean"
canBeNull: false
readOnly: false
description: "Whether or not a letter (a-z or A-Z) is mandatory in the password"
required: false
}
-lowercaseLetterMandatory: {
type: "boolean"
canBeNull: false
readOnly: false
description: "Whether or not a lowercase letter (a-z) is mandatory in the password"
required: false
}
-maxLength: {
type: "long"
canBeNull: false
readOnly: false
description: "Maximum lenght of the password"
required: false
}
-minLength: {
type: "long"
canBeNull: false
readOnly: false
description: "Minimum lenght of the password"
required: false
}
-specialMandatory: {
type: "boolean"
canBeNull: false
readOnly: false
description: "Whether or not a special character (\W or _) is mandatory in the password"
required: false
}
-uppercaseLetterMandatory: {
type: "boolean"
canBeNull: false
readOnly: false
description: "Whether or not an uppercase letter (A-Z) is mandatory in the password"
required: false
}
-validityPeriod: {
type: "long"
canBeNull: false
readOnly: false
description: "Password validity period (in days)"
required: false
}
}
}
-dedicatedCloud.productReferenceEnum: {
id: "productReferenceEnum"
namespace: "dedicatedCloud"
description: "The reference universe information for your Dedicated Cloud"
-enum: [
"EPCC"
"MBM"
]
enumType: "string"
}
-dedicatedCloud.releaseEnum: {
id: "releaseEnum"
namespace: "dedicatedCloud"
description: "All vCenter upgrade possibility"
-enum: [
"major"
"minor"
]
enumType: "string"
}
-dedicatedCloud.requiredAddon: {
id: "requiredAddon"
namespace: "dedicatedCloud"
description: "required addon information"
-properties: {
-planCode: {
type: "string"
canBeNull: false
readOnly: false
required: false
}
-quantity: {
type: "long"
canBeNull: false
readOnly: false
required: false
}
}
}
-dedicatedCloud.resourceNewPrices: {
id: "resourceNewPrices"
namespace: "dedicatedCloud"
description: "A structure describing the Resource's new price"
-properties: {
-resources: {
type: "dedicatedCloud.resourceNewPricesEntry[]"
canBeNull: true
readOnly: false
required: false
}
}
}
-dedicatedCloud.resourceNewPricesEntry: {
id: "resourceNewPricesEntry"
namespace: "dedicatedCloud"
description: "A structure describing the Resource's new price"
-properties: {
-billingType: {
type: "dedicatedCloud.ressources.BillingTypeEnum"
canBeNull: false
readOnly: false
required: false
}
-changed: {
type: "boolean"
canBeNull: false
readOnly: false
required: false
}
-name: {
type: "string"
canBeNull: false
readOnly: false
required: false
}
-newPrice: {
type: "order.Price"
canBeNull: false
readOnly: false
required: false
}
-oldPrice: {
type: "order.Price"
canBeNull: false
readOnly: false
required: false
}
-resourceType: {
type: "dedicatedCloud.ressources.ResourceTypeEnum"
canBeNull: false
readOnly: false
required: false
}
}
}
-dedicatedCloud.ressources.BillingTypeEnum: {
id: "BillingTypeEnum"
namespace: "dedicatedCloud.ressources"
description: "The billing type of this Dedicated Cloud ressource"
-enum: [
"freeSpare"
"hourly"
"monthly"
"undefined"
]
enumType: "string"
}
-dedicatedCloud.ressources.ResourceTypeEnum: {
id: "ResourceTypeEnum"
namespace: "dedicatedCloud.ressources"
description: "The resource type of this Dedicated Cloud ressource"
-enum: [
"host"
"storage"
]
enumType: "string"
}
-dedicatedCloud.right.NetworkRoleEnum: {
id: "NetworkRoleEnum"
namespace: "dedicatedCloud.right"
description: "Determine how this user can act on the Dedicated Cloud vLans or vxLans"
-enum: [
"admin"
"manager"
"noAccess"
"readonly"
]
enumType: "string"
}
-dedicatedCloud.right.RightEnum: {
id: "RightEnum"
namespace: "dedicatedCloud.right"
description: "All rights a Dedicated Cloud user may be associated with"
-enum: [
"admin"
"disabled"
"readonly"
"readwrite"
]
enumType: "string"
}
-dedicatedCloud.right.UserObjectRightTypeEnum: {
id: "UserObjectRightTypeEnum"
namespace: "dedicatedCloud.right"
description: "All types of objects handled in objectRights"
-enum: [
"cluster"
"datastore"
"dvportgroup"
"folder"
"pool"
"vm"
]
enumType: "string"
}
-dedicatedCloud.right.VmNetworkRoleEnum: {
id: "VmNetworkRoleEnum"
namespace: "dedicatedCloud.right"
description: "Determine how this user can act on the Dedicated Cloud vmNetwork"
-enum: [
"admin"
"noAccess"
"readonly"
]
enumType: "string"
}
-dedicatedCloud.securityOption.CompatibilityMatrixEntry: {
id: "CompatibilityMatrixEntry"
namespace: "dedicatedCloud.securityOption"
description: "Representation of a security option"
-properties: {
-compatible: {
type: "boolean"
canBeNull: false
readOnly: false
description: "Indicates if option is compatible and can be enabled on your Dedicated Cloud"
required: false
}
-description: {
type: "string"
canBeNull: false
readOnly: false
description: "Security option description"
required: false
}
-enabled: {
type: "boolean"
canBeNull: false
readOnly: false
description: "Indicates if option is enabled on your Dedicated Cloud"
required: false
}
-name: {
type: "dedicatedCloud.securityOption.SecurityOptionEnum"
canBeNull: false
readOnly: false
description: "Security option name"
required: false
}
-reason: {
type: "dedicatedCloud.securityOption.ErrorMessage"
canBeNull: true
readOnly: false
description: "If your Dedicated Cloud is not compatible with this option, indicates the reason"
required: false
}
-state: {
type: "dedicatedCloud.securityOption.StateEnum"
canBeNull: false
readOnly: false
description: "Detailed security option state"
required: false
}
}
}
-dedicatedCloud.securityOption.DependenciesTree: {
id: "DependenciesTree"
namespace: "dedicatedCloud.securityOption"
description: "Display requirements, conflicts and dependencies of a security option"
-properties: {
-conflicts: {
type: "dedicatedCloud.securityOption.SecurityOptionEnum[]"
canBeNull: false
readOnly: false
description: "List of conflicting security options which prevents installing given security option"
required: false
}
-depends: {
type: "dedicatedCloud.securityOption.SecurityOptionEnum[]"
canBeNull: false
readOnly: false
description: "List of dependencies that will also be enabled during an install of given security option"
required: false
}
-requires: {
type: "dedicatedCloud.securityOption.SecurityOptionEnum[]"
canBeNull: false
readOnly: false
description: "List of required security options which must be enabled to install given security option"
required: false
}
}
}
-dedicatedCloud.securityOption.ErrorEnum: {
id: "ErrorEnum"
namespace: "dedicatedCloud.securityOption"
description: "Security option management errors"
-enum: [
"ACTION_IMPOSSIBLE"
"ALREADY_DISABLED"
"ALREADY_ENABLED"
"BAD_ZONE"
"BREAKING_REQUIREMENTS"
"CONFLICTING_OPTIONS"
"DEFINITIVE_OPTION"
"GENERIC_ERROR"
"HAS_UNSUPPORTED_DEPENDENCIES"
"MISSING_REQUIREMENTS_OPTIONS"
"NOT_ENABLED"
"NOT_MANAGEABLE_DIRECTLY"
"SERVICE_SUSPENDED"
]
enumType: "string"
}
-dedicatedCloud.securityOption.ErrorMessage: {
id: "ErrorMessage"
namespace: "dedicatedCloud.securityOption"
description: "Security option code"
-properties: {
-code: {
type: "dedicatedCloud.securityOption.ErrorEnum"
canBeNull: false
readOnly: false
description: "Error code"
required: false
}
-message: {
type: "string"
canBeNull: false
readOnly: false
description: "Error message"
required: false
}
}
}
-dedicatedCloud.securityOption.SecurityOptionEnum: {
id: "SecurityOptionEnum"
namespace: "dedicatedCloud.securityOption"
description: "Security option identifiers"
-enum: [
"accessNetworkFiltered"
"advancedSecurity"
"base"
"contentLibrary"
"grsecKernel"
"hds"
"hids"
"hipaa"
"logForwarder"
"nids"
"pcidss"
"privateCustomerVlan"
"privateGw"
"sendLogToCustomer"
"sessionTimeout"
"sftp"
"snc"
"spla"
"sslV3"
"tls1.2"
"tokenValidation"
"twoFa"
"twoFaFail2ban"
"vrliForwarder"
"waf"
]
enumType: "string"
}
-dedicatedCloud.securityOption.StateEnum: {
id: "StateEnum"
namespace: "dedicatedCloud.securityOption"
description: "Security option detailed states"
-enum: [
"creating"
"deleted"
"deleting"
"delivered"
"disabled"
"pending"
"toCreate"
"updating"
]
enumType: "string"
}
-dedicatedCloud.servicePackEnum: {
id: "servicePackEnum"
namespace: "dedicatedCloud"
description: "List of possible service pack"
-enum: [
"default"
"default-nsxt"
"hds"
"hds-nsxt"
"hipaa"
"legacy"
"nsx"
"nsx-and-vrops"
"nsxt"
"pcidss"
"pcidss-nsxt"
"vrops"
"vrops-nsxt"
]
enumType: "string"
}
-dedicatedCloud.servicePackStateEnum: {
id: "servicePackStateEnum"
namespace: "dedicatedCloud"
description: "List of possible state of the service pack"
-enum: [
"activating"
"active"
"error"
"waitingForCustomer"
]
enumType: "string"
}
-dedicatedCloud.servicePackStatus: {
id: "servicePackStatus"
namespace: "dedicatedCloud"
description: "Service pack informations"
-properties: {
-name: {
type: "dedicatedCloud.servicePackEnum"
canBeNull: false
readOnly: false
description: "Name of the service pack"
required: false
}
-state: {
type: "dedicatedCloud.servicePackStateEnum"
canBeNull: false
readOnly: false
description: "State of the service pack"
required: false
}
}
}
-dedicatedCloud.spla.KmsLicenseEnum: {
id: "KmsLicenseEnum"
namespace: "dedicatedCloud.spla"
description: "Managed license identifiers"
-enum: [
"windows 2016 Datacenter"
"windows 2016 Standard"
"windows 2016 Standard SQL2016 Standard"
"windows 2016 Standard SQL2016 Web"
"windows 2019 Datacenter"
"windows 2019 Datacenter Core"
"windows 2019 Standard"
"windows 2019 Standard Core"
"windows 2019 Standard SQL2019 Standard"
"windows 2019 Standard SQL2019 Web"
"windows 2019 Standard SQL2022 Standard"
"windows 2019 Standard SQL2022 Web"
"windows 2022 Datacenter"
"windows 2022 Datacenter Core"
"windows 2022 Datacenter SQL2019 Standard"
"windows 2022 Datacenter SQL2019 Web"
"windows 2022 Datacenter SQL2022 Standard"
"windows 2022 Datacenter SQL2022 Web"
"windows 2022 Standard"
"windows 2022 Standard Core"
"windows 2022 Standard SQL2019 Standard"
"windows 2022 Standard SQL2019 Web"
"windows 2022 Standard SQL2022 Standard"
"windows 2022 Standard SQL2022 Web"
"windows 2025 Datacenter"
"windows 2025 Datacenter Core"
"windows 2025 Datacenter SQL2022 Enterprise"
"windows 2025 Datacenter SQL2022 Standard"
"windows 2025 Datacenter SQL2022 Web"
"windows 2025 Standard"
"windows 2025 Standard Core"
"windows 2025 Standard SQL2022 Standard"
"windows 2025 Standard SQL2022 Web"
]
enumType: "string"
}
-dedicatedCloud.spla.KmsLicenseIncludingLegacyEnum: {
id: "KmsLicenseIncludingLegacyEnum"
namespace: "dedicatedCloud.spla"
description: "Managed license identifiers (including legacy ones)"
-enum: [
"OVHcloud managed"
"unknown or unsupported license"
"unlicensed windows guestos"
"windows 2008 R2 Datacenter"
"windows 2008 R2 Enterprise"
"windows 2008 R2 Standard"
"windows 2008 R2 Web"
"windows 2012 Datacenter"
"windows 2012 R2 Datacenter"
"windows 2012 R2 Standard"
"windows 2012 R2 Standard SQL2016 Standard"
"windows 2012 R2 Standard SQL2016 Web"
"windows 2012 Standard"
"windows 2016 Datacenter"
"windows 2016 Standard"
"windows 2016 Standard SQL2016 Standard"
"windows 2016 Standard SQL2016 Web"
"windows 2019 Datacenter"
"windows 2019 Datacenter Core"
"windows 2019 Standard"
"windows 2019 Standard Core"
"windows 2019 Standard SQL2019 Standard"
"windows 2019 Standard SQL2019 Web"
"windows 2019 Standard SQL2022 Standard"
"windows 2019 Standard SQL2022 Web"
"windows 2022 Datacenter"
"windows 2022 Datacenter Core"
"windows 2022 Datacenter SQL2019 Standard"
"windows 2022 Datacenter SQL2019 Web"
"windows 2022 Datacenter SQL2022 Standard"
"windows 2022 Datacenter SQL2022 Web"
"windows 2022 Standard"
"windows 2022 Standard Core"
"windows 2022 Standard SQL2019 Standard"
"windows 2022 Standard SQL2019 Web"
"windows 2022 Standard SQL2022 Standard"
"windows 2022 Standard SQL2022 Web"
"windows 2025 Datacenter"
"windows 2025 Datacenter Core"
"windows 2025 Datacenter SQL2022 Enterprise"
"windows 2025 Datacenter SQL2022 Standard"
"windows 2025 Datacenter SQL2022 Web"
"windows 2025 Standard"
"windows 2025 Standard Core"
"windows 2025 Standard SQL2022 Standard"
"windows 2025 Standard SQL2022 Web"
]
enumType: "string"
}
-dedicatedCloud.syslogForward.LogLevelEnum: {
id: "LogLevelEnum"
namespace: "dedicatedCloud.syslogForward"
description: "All possible log levels"
-enum: [
"alert"
"critical"
"emergency"
"error"
"info"
"notice"
"warning"
]
enumType: "string"
}
-dedicatedCloud.syslogForward.SourceTypeEnum: {
id: "SourceTypeEnum"
namespace: "dedicatedCloud.syslogForward"
description: "Log possible sources"
-enum: [
"esxi"
"nsxtEdge"
"nsxtManager"
"nsxv"
"vcsa"
]
enumType: "string"
}
-dedicatedCloud.twoFAWhitelist: {
id: "twoFAWhitelist"
namespace: "dedicatedCloud"
description: "Two factor authentication whitelisted network"
-properties: {
-cidrNetmask: {
type: "long"
fullType: "long"
canBeNull: false
readOnly: true
description: "IP netmask (CIDR notation) of the remote service"
required: false
}
-description: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "Description of the trusted IP"
required: false
}
-id: {
type: "long"
fullType: "long"
canBeNull: false
readOnly: true
description: "Id of the trusted IP"
required: false
}
-ip: {
type: "ipv4"
fullType: "ipv4"
canBeNull: false
readOnly: true
description: "IP address of the remote service"
required: false
}
-state: {
type: "dedicatedCloud.TwoFAWhitelistStateEnum"
fullType: "dedicatedCloud.TwoFAWhitelistStateEnum"
canBeNull: false
readOnly: true
description: "State of the whitelist"
required: false
}
}
}
-dedicatedCloud.user.ActivationStateEnum: {
id: "ActivationStateEnum"
namespace: "dedicatedCloud.user"
description: "All activation states a Dedicated Cloud User can have"
-enum: [
"disabled"
"disabling"
"enabled"
"enabling"
"toDisable"
"toEnable"
]
enumType: "string"
}
-dedicatedCloud.user.IdentityProviderTypeEnum: {
id: "IdentityProviderTypeEnum"
namespace: "dedicatedCloud.user"
description: "The type of the identity provider"
-enum: [
"federation"
"iam"
]
enumType: "string"
}
-dedicatedCloud.user.StateEnum: {
id: "StateEnum"
namespace: "dedicatedCloud.user"
description: "All states a Dedicated Cloud User can be in"
-enum: [
"creating"
"deleting"
"delivered"
"error"
]
enumType: "string"
}
-dedicatedCloud.user.TypeEnum: {
id: "TypeEnum"
namespace: "dedicatedCloud.user"
description: "The type of the user"
-enum: [
"group"
"user"
]
enumType: "string"
}
-dedicatedCloud.vcenter: {
id: "vcenter"
namespace: "dedicatedCloud"
description: "A structure describing the vCenter available upgrade for your Dedicated Cloud"
-properties: {
-currentVersion: {
type: "dedicatedCloud.Version"
canBeNull: false
readOnly: false
description: "Current vCenter version"
required: false
}
-lastMajor: {
type: "dedicatedCloud.Version"
canBeNull: false
readOnly: false
description: "Last major vCenter version"
required: false
}
-lastMinor: {
type: "dedicatedCloud.Version"
canBeNull: false
readOnly: false
description: "Last minor vCenter version"
required: false
}
}
}
-dedicatedCloud.vendor.OvhId: {
id: "OvhId"
namespace: "dedicatedCloud.vendor"
description: "Representation of a Vendor object in OVH API"
-properties: {
-datacenterId: {
type: "long"
canBeNull: true
readOnly: false
description: "Datacenter id"
required: false
}
-filerId: {
type: "long"
canBeNull: true
readOnly: false
description: "Filer id"
required: false
}
-hostId: {
type: "long"
canBeNull: true
readOnly: false
description: "Host id"
required: false
}
-vmId: {
type: "long"
canBeNull: true
readOnly: false
description: "Vm id"
required: false
}
}
}
-dedicatedCloud.virtualDeviceConnectInfoStatus: {
id: "virtualDeviceConnectInfoStatus"
namespace: "dedicatedCloud"
description: "The connectable virtual device status"
-enum: [
"ok"
"recoverableError"
"unrecoverableError"
"untried"
]
enumType: "string"
}
-dedicatedCloud.virtualMachineCdrom: {
id: "virtualMachineCdrom"
namespace: "dedicatedCloud"
description: "A structure describing the cdrom configuration of a virtual machine"
-properties: {
-connected: {
type: "boolean"
canBeNull: true
readOnly: false
required: false
}
-iso: {
type: "string"
canBeNull: true
readOnly: false
required: false
}
}
}
-dedicatedCloud.virtualMachineFaultToleranceState: {
id: "virtualMachineFaultToleranceState"
namespace: "dedicatedCloud"
description: "The fault tolerance state of the virtual machine"
-enum: [
"disabled"
"enabled"
"needSecondary"
"notConfigured"
"running"
"starting"
]
enumType: "string"
}
-dedicatedCloud.virtualMachineLicensingSummary: {
id: "virtualMachineLicensingSummary"
namespace: "dedicatedCloud"
description: "A structure describing the licensing of a virtual machine"
-properties: {
-guestOsFamily: {
type: "string"
canBeNull: true
readOnly: false
description: "Guest Operating System reported by VMware tools"
required: false
}
-license: {
type: "dedicatedCloud.spla.KmsLicenseIncludingLegacyEnum"
canBeNull: false
readOnly: false
description: "Attached SPLA licensing"
required: false
}
-moRef: {
type: "string"
canBeNull: false
readOnly: false
description: "VMware Managed object Reference identifier"
required: false
}
-name: {
type: "string"
canBeNull: false
readOnly: false
description: "Virtual machine name"
required: false
}
-vmId: {
type: "long"
canBeNull: false
readOnly: false
description: "Virtual machine identifier"
required: false
}
}
}
-dedicatedCloud.virtualMachinePowerState: {
id: "virtualMachinePowerState"
namespace: "dedicatedCloud"
description: "The power state of the virtual machine"
-enum: [
"deleted"
"poweredOff"
"poweredOn"
"suspended"
]
enumType: "string"
}
-dedicatedCloud.vlan.StateEnum: {
id: "StateEnum"
namespace: "dedicatedCloud.vlan"
description: "All states a Dedicated Cloud Vlan can be in"
-enum: [
"available"
"delivered"
"disabled"
"error"
"removing"
"reserved"
]
enumType: "string"
}
-dedicatedCloud.vlan.TypeEnum: {
id: "TypeEnum"
namespace: "dedicatedCloud.vlan"
description: "This Dedicated Cloud vlan type"
-enum: [
"admin"
"free"
"paid"
]
enumType: "string"
}
-dedicatedCloud.vmFiler: {
id: "vmFiler"
namespace: "dedicatedCloud"
description: "A structure describing filers of a the virtual machine"
-properties: {
-committed: {
type: "double"
canBeNull: false
readOnly: false
required: false
}
-disks: {
type: "dedicatedCloud.vmFilerDisk[]"
canBeNull: false
readOnly: false
required: false
}
-name: {
type: "string"
canBeNull: false
readOnly: false
required: false
}
}
}
-dedicatedCloud.vmFilerDisk: {
id: "vmFilerDisk"
namespace: "dedicatedCloud"
description: "A structure describing filer disks of a the virtual machine"
-properties: {
-capacity: {
type: "double"
canBeNull: false
readOnly: false
required: false
}
-id: {
type: "string"
canBeNull: false
readOnly: false
required: false
}
}
}
-dedicatedCloud.vmNetwork: {
id: "vmNetwork"
namespace: "dedicatedCloud"
description: "A structure describing the network of a the virtual machine"
-properties: {
-allowGuestControl: {
type: "boolean"
canBeNull: false
readOnly: false
required: false
}
-backing: {
type: "dedicatedCloud.vmNetworkBacking"
canBeNull: false
readOnly: false
required: false
}
-connected: {
type: "boolean"
canBeNull: false
readOnly: false
required: false
}
-controler: {
type: "string"
canBeNull: false
readOnly: false
required: false
}
-label: {
type: "string"
canBeNull: false
readOnly: false
required: false
}
-macAddress: {
type: "string"
canBeNull: false
readOnly: false
required: false
}
-startConnected: {
type: "boolean"
canBeNull: false
readOnly: false
required: false
}
-status: {
type: "dedicatedCloud.virtualDeviceConnectInfoStatus"
canBeNull: false
readOnly: false
required: false
}
}
}
-dedicatedCloud.vmNetworkBacking: {
id: "vmNetworkBacking"
namespace: "dedicatedCloud"
description: "A structure describing the backing network of a the virtual machine"
-properties: {
-carpState: {
type: "string"
canBeNull: true
readOnly: false
required: false
}
-deviceName: {
type: "string"
canBeNull: true
readOnly: false
required: false
}
-portGroupKey: {
type: "string"
canBeNull: true
readOnly: false
required: false
}
-portGroupName: {
type: "string"
canBeNull: true
readOnly: false
required: false
}
-portKey: {
type: "string"
canBeNull: true
readOnly: false
required: false
}
-portKeySecurityPolicy: {
type: "dedicatedCloud.DvsSecurityPolicy"
canBeNull: true
readOnly: false
required: false
}
-switchUuid: {
type: "string"
canBeNull: true
readOnly: false
required: false
}
-type: {
type: "dedicatedCloud.vmNetworkBackingTypeEnum"
canBeNull: false
readOnly: false
required: false
}
-useAutoDetect: {
type: "boolean"
canBeNull: true
readOnly: false
required: false
}
-valueMoref: {
type: "string"
canBeNull: true
readOnly: false
required: false
}
}
}
-dedicatedCloud.vmNetworkBackingTypeEnum: {
id: "vmNetworkBackingTypeEnum"
namespace: "dedicatedCloud"
description: "The type of the network backing"
-enum: [
"DVS"
"VSS"
]
enumType: "string"
}
-dedicatedCloud.vmwareBoolPolicy: {
id: "vmwareBoolPolicy"
namespace: "dedicatedCloud"
description: "A structure describing the vmware bool policy data object"
-properties: {
-inherited: {
type: "boolean"
canBeNull: false
readOnly: false
required: false
}
-value: {
type: "boolean"
canBeNull: false
readOnly: false
required: false
}
}
}
-iam.ResourceMetadata: {
id: "ResourceMetadata"
namespace: "iam"
description: "IAM resource metadata embedded in services models"
-properties: {
-displayName: {
type: "string"
fullType: "string"
canBeNull: true
readOnly: true
description: "Resource display name"
required: false
}
-id: {
type: "uuid"
fullType: "uuid"
canBeNull: false
readOnly: true
description: "Unique identifier of the resource"
required: false
}
-tags: {
type: "map[string]string"
fullType: "map[string]string"
canBeNull: true
readOnly: true
description: "Resource tags. Tags that were internally computed are prefixed with ovh:"
required: false
}
-urn: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "Unique resource name used in policies"
required: false
}
}
}
-iam.resource.TagFilter: {
id: "TagFilter"
namespace: "iam.resource"
description: "Resource tag filter"
-properties: {
-operator: {
type: "iam.resource.TagFilter.OperatorEnum"
fullType: "iam.resource.TagFilter.OperatorEnum"
canBeNull: true
readOnly: true
description: "Operator to use in order to filter on the value (defaults to 'EQ')"
required: false
}
-value: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "Value to use in order to filter tags"
required: false
}
}
}
-iam.resource.TagFilter.OperatorEnum: {
id: "OperatorEnum"
namespace: "iam.resource.TagFilter"
description: "Operator that can be used in order to filter resources tags"
-enum: [
"EQ"
"EXISTS"
"ILIKE"
"LIKE"
"NEQ"
"NEXISTS"
]
enumType: "string"
}
-nichandle.CountryEnum: {
id: "CountryEnum"
namespace: "nichandle"
description: "Countries a nichandle can choose"
-enum: [
"AC"
"AD"
"AE"
"AF"
"AG"
"AI"
"AL"
"AM"
"AO"
"AQ"
"AR"
"AS"
"AT"
"AU"
"AW"
"AX"
"AZ"
"BA"
"BB"
"BD"
"BE"
"BF"
"BG"
"BH"
"BI"
"BJ"
"BL"
"BM"
"BN"
"BO"
"BQ"
"BR"
"BS"
"BT"
"BW"
"BY"
"BZ"
"CA"
"CC"
"CD"
"CF"
"CG"
"CH"
"CI"
"CK"
"CL"
"CM"
"CN"
"CO"
"CR"
"CU"
"CV"
"CW"
"CX"
"CY"
"CZ"
"DE"
"DG"
"DJ"
"DK"
"DM"
"DO"
"DZ"
"EA"
"EC"
"EE"
"EG"
"EH"
"ER"
"ES"
"ET"
"FI"
"FJ"
"FK"
"FM"
"FO"
"FR"
"GA"
"GB"
"GD"
"GE"
"GF"
"GG"
"GH"
"GI"
"GL"
"GM"
"GN"
"GP"
"GQ"
"GR"
"GS"
"GT"
"GU"
"GW"
"GY"
"HK"
"HN"
"HR"
"HT"
"HU"
"IC"
"ID"
"IE"
"IL"
"IM"
"IN"
"IO"
"IQ"
"IR"
"IS"
"IT"
"JE"
"JM"
"JO"
"JP"
"KE"
"KG"
"KH"
"KI"
"KM"
"KN"
"KP"
"KR"
"KW"
"KY"
"KZ"
"LA"
"LB"
"LC"
"LI"
"LK"
"LR"
"LS"
"LT"
"LU"
"LV"
"LY"
"MA"
"MC"
"MD"
"ME"
"MF"
"MG"
"MH"
"MK"
"ML"
"MM"
"MN"
"MO"
"MP"
"MQ"
"MR"
"MS"
"MT"
"MU"
"MV"
"MW"
"MX"
"MY"
"MZ"
"NA"
"NC"
"NE"
"NF"
"NG"
"NI"
"NL"
"NO"
"NP"
"NR"
"NU"
"NZ"
"OM"
"PA"
"PE"
"PF"
"PG"
"PH"
"PK"
"PL"
"PM"
"PN"
"PR"
"PS"
"PT"
"PW"
"PY"
"QA"
"RE"
"RO"
"RS"
"RU"
"RW"
"SA"
"SB"
"SC"
"SD"
"SE"
"SG"
"SH"
"SI"
"SJ"
"SK"
"SL"
"SM"
"SN"
"SO"
"SR"
"SS"
"ST"
"SV"
"SX"
"SY"
"SZ"
"TA"
"TC"
"TD"
"TF"
"TG"
"TH"
"TJ"
"TK"
"TL"
"TM"
"TN"
"TO"
"TR"
"TT"
"TV"
"TW"
"TZ"
"UA"
"UG"
"UM"
"UNKNOWN"
"US"
"UY"
"UZ"
"VA"
"VC"
"VE"
"VG"
"VI"
"VN"
"VU"
"WF"
"WS"
"XK"
"YE"
"YT"
"ZA"
"ZM"
"ZW"
]
enumType: "string"
}
-order.CurrencyCodeEnum: {
id: "CurrencyCodeEnum"
namespace: "order"
-enum: [
"AUD"
"CAD"
"CZK"
"EUR"
"GBP"
"INR"
"LTL"
"MAD"
"N/A"
"PLN"
"SGD"
"TND"
"USD"
"XOF"
"points"
]
enumType: "string"
}
-order.Price: {
id: "Price"
namespace: "order"
description: "Price with it's currency and textual representation"
-properties: {
-currencyCode: {
type: "order.CurrencyCodeEnum"
canBeNull: false
readOnly: false
required: false
}
-text: {
type: "string"
canBeNull: false
readOnly: false
required: false
}
-value: {
type: "double"
canBeNull: false
readOnly: false
required: false
}
}
}
-service.RenewType: {
id: "RenewType"
namespace: "service"
description: "Map a possible renew for a specific service"
-properties: {
-automatic: {
type: "boolean"
canBeNull: false
readOnly: false
description: "The service is automatically renewed"
required: false
}
-deleteAtExpiration: {
type: "boolean"
canBeNull: false
readOnly: false
description: "The service will be deleted at expiration"
required: false
}
-forced: {
type: "boolean"
canBeNull: false
readOnly: false
description: "The service forced to be renewed"
required: false
}
-manualPayment: {
type: "boolean"
canBeNull: true
readOnly: false
description: "The service needs to be manually renewed and paid"
required: false
}
-period: {
type: "long"
canBeNull: true
readOnly: false
description: "period of renew in month"
required: false
}
}
}
-service.RenewalTypeEnum: {
id: "RenewalTypeEnum"
namespace: "service"
description: "Detailed renewal type of a service"
-enum: [
"automaticForcedProduct"
"automaticV2012"
"automaticV2014"
"automaticV2016"
"automaticV2024"
"manual"
"oneShot"
"option"
]
enumType: "string"
}
-service.StateEnum: {
id: "StateEnum"
namespace: "service"
-enum: [
"autorenewInProgress"
"expired"
"inCreation"
"ok"
"pendingDebt"
"unPaid"
]
enumType: "string"
}
-service.TerminationFutureUseEnum: {
id: "TerminationFutureUseEnum"
namespace: "service"
description: "All future uses you can provide for a service termination"
-enum: [
"NOT_REPLACING_SERVICE"
"OTHER"
"SUBSCRIBE_AN_OTHER_SERVICE"
"SUBSCRIBE_OTHER_KIND_OF_SERVICE_WITH_COMPETITOR"
"SUBSCRIBE_SIMILAR_SERVICE_WITH_COMPETITOR"
]
enumType: "string"
}
-service.TerminationReasonEnum: {
id: "TerminationReasonEnum"
namespace: "service"
description: "All reasons you can provide for a service termination"
-enum: [
"FEATURES_DONT_SUIT_ME"
"LACK_OF_PERFORMANCES"
"MIGRATED_TO_ANOTHER_OVH_PRODUCT"
"MIGRATED_TO_COMPETITOR"
"NOT_ENOUGH_RECOGNITION"
"NOT_NEEDED_ANYMORE"
"NOT_RELIABLE"
"NO_ANSWER"
"OTHER"
"PRODUCT_DIMENSION_DONT_SUIT_ME"
"PRODUCT_TOOLS_DONT_SUIT_ME"
"TOO_EXPENSIVE"
"TOO_HARD_TO_USE"
"UNSATIFIED_BY_CUSTOMER_SUPPORT"
]
enumType: "string"
}
-services.Service: {
id: "Service"
namespace: "services"
description: "Details about a Service"
-properties: {
-canDeleteAtExpiration: {
type: "boolean"
fullType: "boolean"
canBeNull: false
readOnly: true
description: "Indicates that the service can be set up to be deleted at expiration"
required: false
}
-contactAdmin: {
type: "string"
fullType: "coreTypes.AccountId:string"
canBeNull: false
readOnly: true
required: false
}
-contactBilling: {
type: "string"
fullType: "coreTypes.AccountId:string"
canBeNull: false
readOnly: true
required: false
}
-contactTech: {
type: "string"
fullType: "coreTypes.AccountId:string"
canBeNull: false
readOnly: true
required: false
}
-creation: {
type: "date"
fullType: "date"
canBeNull: false
readOnly: true
required: false
}
-domain: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
required: false
}
-engagedUpTo: {
type: "date"
fullType: "date"
canBeNull: true
readOnly: true
required: false
}
-expiration: {
type: "date"
fullType: "date"
canBeNull: false
readOnly: true
required: false
}
-possibleRenewPeriod: {
type: "long[]"
fullType: "long[]"
canBeNull: true
readOnly: true
description: "All the possible renew period of your service in month"
required: false
}
-renew: {
type: "service.RenewType"
fullType: "service.RenewType"
canBeNull: true
readOnly: false
description: "Way of handling the renew"
required: false
}
-renewalType: {
type: "service.RenewalTypeEnum"
fullType: "service.RenewalTypeEnum"
canBeNull: false
readOnly: true
required: false
}
-serviceId: {
type: "long"
fullType: "coreTypes.ServiceId:long"
canBeNull: false
readOnly: true
required: false
}
-status: {
type: "service.StateEnum"
fullType: "service.StateEnum"
canBeNull: false
readOnly: true
required: false
}
}
}
-vrack.Task: {
id: "Task"
namespace: "vrack"
description: "vrack tasks"
-properties: {
-function: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
required: false
}
-id: {
type: "long"
fullType: "long"
canBeNull: false
readOnly: true
required: false
}
-lastUpdate: {
type: "datetime"
fullType: "datetime"
canBeNull: true
readOnly: true
required: false
}
-orderId: {
type: "long"
fullType: "long"
canBeNull: true
readOnly: true
required: false
}
-serviceName: {
type: "string"
fullType: "string"
canBeNull: true
readOnly: true
required: false
}
-status: {
type: "vrack.TaskStatusEnum"
fullType: "vrack.TaskStatusEnum"
canBeNull: false
readOnly: true
description: "Task status"
required: false
}
-targetDomain: {
type: "string"
fullType: "string"
canBeNull: true
readOnly: true
required: false
}
-todoDate: {
type: "datetime"
fullType: "datetime"
canBeNull: true
readOnly: true
required: false
}
}
}
-vrack.TaskStatusEnum: {
id: "TaskStatusEnum"
namespace: "vrack"
description: "All states a vRack Task can be in"
-enum: [
"cancelled"
"doing"
"done"
"init"
"todo"
]
enumType: "string"
}
-vrack.dedicatedCloud: {
id: "dedicatedCloud"
namespace: "vrack"
description: "VMware on OVHcloud vRack link"
-properties: {
-dedicatedCloud: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "your dedicated cloud service"
required: false
}
-vlanId: {
type: "long"
fullType: "long"
canBeNull: true
readOnly: true
description: "Dedicated cloud vlanId used"
required: false
}
-vrack: {
type: "string"
fullType: "string"
canBeNull: false
readOnly: true
description: "vrack name"
required: false
}
}
}
}
}