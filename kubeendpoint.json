{
path: "/cloud/project/{serviceName}/kube"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Service name"
}
]
responseType: "string[]"
noAuthentication: false
description: "List your managed Kubernetes clusters"
-iamActions: [
-{
name: "publicCloudProject:apiovh:kube/get"
required: true
}
]
}
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
dataType: "cloud.ProjectKubeCreation"
paramType: "body"
fullType: "cloud.ProjectKubeCreation"
required: true
description: "Request Body"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Service name"
}
]
responseType: "cloud.kube.Cluster"
noAuthentication: false
description: "Create a new managed Kubernetes cluster"
-iamActions: [
-{
name: "publicCloudProject:apiovh:kube/create"
required: true
}
]
}
]
description: "Manage your clusters"
}
-{
path: "/cloud/project/{serviceName}/kube/{kubeId}"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "DELETE"
-parameters: [
-{
name: "kubeId"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Kube ID"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Service name"
}
]
responseType: "void"
noAuthentication: false
description: "Delete your managed Kubernetes cluster"
-iamActions: [
-{
name: "publicCloudProject:apiovh:kube/delete"
required: true
}
]
}
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "kubeId"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Kube ID"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Service name"
}
]
responseType: "cloud.kube.Cluster"
noAuthentication: false
description: "Get information about your managed Kubernetes cluster"
-iamActions: [
-{
name: "publicCloudProject:apiovh:kube/get"
required: true
}
]
}
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "PUT"
-parameters: [
-{
dataType: "cloud.ProjectKubeUpdate"
paramType: "body"
fullType: "cloud.ProjectKubeUpdate"
required: true
description: "Request Body"
}
-{
name: "kubeId"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Kube ID"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Service name"
}
]
responseType: "void"
noAuthentication: false
description: "Update information about your managed Kubernetes cluster"
-iamActions: [
-{
name: "publicCloudProject:apiovh:kube/edit"
required: true
}
]
}
]
description: "Manage your clusters"
}
-{
path: "/cloud/project/{serviceName}/kube/{kubeId}/auditLogs"
-operations: [
-{
-apiStatus: {
description: "Deprecated, will be removed"
value: "DEPRECATED"
deletionDate: "2025-09-01T00:00:00Z"
deprecatedDate: "2024-01-30T00:00:00Z"
}
httpMethod: "POST"
-parameters: [
-{
name: "kubeId"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Kube ID"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Service name"
}
]
responseType: "dbaas.logs.TemporaryLogsLink"
noAuthentication: false
description: "Generate a temporary URL to retrieve audit logs"
-iamActions: [
-{
name: "publicCloudProject:apiovh:kube/auditLogs/create"
required: true
}
]
}
]
description: "Generate a temporary URL to retrieve audit logs"
}
-{
path: "/cloud/project/{serviceName}/kube/{kubeId}/customization"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "kubeId"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Kube ID"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Service name"
}
]
responseType: "cloud.ProjectKubeCustomization"
noAuthentication: false
description: "Get cluster customization"
-iamActions: [
-{
name: "publicCloudProject:apiovh:kube/customization/get"
required: true
}
]
}
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "PUT"
-parameters: [
-{
dataType: "cloud.ProjectKubeCustomization"
paramType: "body"
fullType: "cloud.ProjectKubeCustomization"
required: true
description: "Request Body"
}
-{
name: "kubeId"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Kube ID"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Service name"
}
]
responseType: "cloud.kube.ResponseMessage"
noAuthentication: false
description: "Update cluster customization"
-iamActions: [
-{
name: "publicCloudProject:apiovh:kube/customization/edit"
required: true
}
]
}
]
description: "Cluster customization"
}
-{
path: "/cloud/project/{serviceName}/kube/{kubeId}/flavors"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "kubeId"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Kube ID"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Service name"
}
]
responseType: "cloud.kube.Flavor[]"
noAuthentication: false
description: "List all flavors available"
-iamActions: [
-{
name: "publicCloudProject:apiovh:kube/flavors/get"
required: true
}
]
}
]
description: "List all flavors available"
}
-{
path: "/cloud/project/{serviceName}/kube/{kubeId}/ipRestrictions"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "kubeId"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Kube ID"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Service name"
}
]
responseType: "ipBlock[]"
noAuthentication: false
description: "List your ip restrictions on your cluster"
-iamActions: [
-{
name: "publicCloudProject:apiovh:kube/ipRestrictions/get"
required: true
}
]
}
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
dataType: "cloud.ProjectKubeIpRestrictionUpsert"
paramType: "body"
fullType: "cloud.ProjectKubeIpRestrictionUpsert"
required: true
description: "Request Body"
}
-{
name: "kubeId"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Kube ID"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Service name"
}
]
responseType: "ipBlock[]"
noAuthentication: false
description: "Append a list of ip restrictions on your cluster"
-iamActions: [
-{
name: "publicCloudProject:apiovh:kube/ipRestrictions/create"
required: true
}
]
}
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "PUT"
-parameters: [
-{
dataType: "cloud.ProjectKubeIpRestrictionUpsert"
paramType: "body"
fullType: "cloud.ProjectKubeIpRestrictionUpsert"
required: true
description: "Request Body"
}
-{
name: "kubeId"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Kube ID"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Service name"
}
]
responseType: "ipBlock[]"
noAuthentication: false
description: "Remove the current list and add a list of ip restrictions on your cluster"
-iamActions: [
-{
name: "publicCloudProject:apiovh:kube/ipRestrictions/edit"
required: true
}
]
}
]
description: "Manage your api-server ip restrictions"
}
-{
path: "/cloud/project/{serviceName}/kube/{kubeId}/ipRestrictions/{ip}"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "DELETE"
-parameters: [
-{
name: "ip"
dataType: "ipBlock"
paramType: "path"
fullType: "ipBlock"
required: true
description: "Ip"
}
-{
name: "kubeId"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Kube ID"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Service name"
}
]
responseType: "void"
noAuthentication: false
description: "Delete an ip restriction from your cluster"
-iamActions: [
-{
name: "publicCloudProject:apiovh:kube/ipRestrictions/delete"
required: true
}
]
}
]
description: "Manage your api-server ip restrictions"
}
-{
path: "/cloud/project/{serviceName}/kube/{kubeId}/kubeconfig"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "kubeId"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Kube ID"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Service name"
}
]
responseType: "cloud.kube.Kubeconfig"
noAuthentication: false
description: "Generate kubeconfig file"
-iamActions: [
-{
name: "publicCloudProject:apiovh:kube/kubeconfig/create"
required: true
}
]
}
]
description: "Get your cluster configuration"
}
-{
path: "/cloud/project/{serviceName}/kube/{kubeId}/kubeconfig/reset"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
name: "kubeId"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Kube ID"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Service name"
}
]
responseType: "void"
noAuthentication: false
description: "Reset kubeconfig: Certificates will be regenerated, nodes will be reinstalled"
-iamActions: [
-{
name: "publicCloudProject:apiovh:kube/kubeconfig/reset"
required: true
}
]
}
]
description: "Reset your cluster's kubeconfig"
}
-{
path: "/cloud/project/{serviceName}/kube/{kubeId}/log/subscription"
-operations: [
-{
-apiStatus: {
description: "Beta version"
value: "BETA"
}
httpMethod: "GET"
-parameters: [
-{
name: "kind"
dataType: "string"
paramType: "query"
fullType: "string"
required: false
description: "Filter on a specific kind (e.g., audit)"
}
-{
name: "kubeId"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Kube ID"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Service name"
}
]
responseType: "uuid[]"
noAuthentication: false
description: "List subscription IDs for a cluster"
-iamActions: [
-{
name: "publicCloudProject:apiovh:kube/log/subscription/get"
required: true
}
]
}
-{
-apiStatus: {
description: "Beta version"
value: "BETA"
}
httpMethod: "POST"
-parameters: [
-{
dataType: "dbaas.logs.LogSubscriptionCreation"
paramType: "body"
fullType: "dbaas.logs.LogSubscriptionCreation"
required: true
description: "Request Body"
}
-{
name: "kubeId"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Kube ID"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Service name"
}
]
responseType: "dbaas.logs.LogSubscriptionResponse"
noAuthentication: false
description: "Create a subscription from logs to a pre-existing LDP stream"
-iamActions: [
-{
name: "publicCloudProject:apiovh:kube/log/subscription/create"
required: true
}
-{
name: "ldp:apiovh:output/graylog/stream/forwardTo"
description: "Required on the targeted LDP service"
required: true
}
]
}
]
description: "Create a subscription from logs to a pre-existing LDP stream"
}
-{
path: "/cloud/project/{serviceName}/kube/{kubeId}/log/subscription/{subscriptionId}"
-operations: [
-{
-apiStatus: {
description: "Beta version"
value: "BETA"
}
httpMethod: "DELETE"
-parameters: [
-{
name: "kubeId"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Kube ID"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Service name"
}
-{
name: "subscriptionId"
dataType: "uuid"
paramType: "path"
fullType: "uuid"
required: true
description: "Subscription ID"
}
]
responseType: "dbaas.logs.LogSubscriptionResponse"
noAuthentication: false
description: "Delete a subscription"
-iamActions: [
-{
name: "publicCloudProject:apiovh:kube/log/subscription/delete"
required: true
}
]
}
-{
-apiStatus: {
description: "Beta version"
value: "BETA"
}
httpMethod: "GET"
-parameters: [
-{
name: "kubeId"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Kube ID"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Service name"
}
-{
name: "subscriptionId"
dataType: "uuid"
paramType: "path"
fullType: "uuid"
required: true
description: "Subscription ID"
}
]
responseType: "dbaas.logs.LogSubscription"
noAuthentication: false
description: "Get subscription details"
-iamActions: [
-{
name: "publicCloudProject:apiovh:kube/log/subscription/get"
required: true
}
]
}
]
description: "Create a subscription from logs to a pre-existing LDP stream"
}
-{
path: "/cloud/project/{serviceName}/kube/{kubeId}/log/url"
-operations: [
-{
-apiStatus: {
description: "Beta version"
value: "BETA"
}
httpMethod: "POST"
-parameters: [
-{
dataType: "dbaas.logs.LogUrlCreation"
paramType: "body"
fullType: "dbaas.logs.LogUrlCreation"
required: true
description: "Request Body"
}
-{
name: "kubeId"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Kube ID"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Service name"
}
]
responseType: "dbaas.logs.TemporaryLogsLink"
noAuthentication: false
description: "Generate a temporary URL to retrieve logs"
-iamActions: [
-{
name: "publicCloudProject:apiovh:kube/log/url/create"
required: true
}
]
}
]
description: "Generate a temporary URL to retrieve logs"
}
-{
path: "/cloud/project/{serviceName}/kube/{kubeId}/metrics/etcdUsage"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "kubeId"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Kube ID"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Service name"
}
]
responseType: "cloud.kube.EtcdUsage"
noAuthentication: false
description: "List available metrics for this cluster"
-iamActions: [
-{
name: "publicCloudProject:apiovh:kube/metrics/etcdUsage/get"
required: true
}
]
}
]
description: "Get your cluster etcd usage/quota"
}
-{
path: "/cloud/project/{serviceName}/kube/{kubeId}/node"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "X-Pagination-Cursor"
dataType: "string"
paramType: "header"
fullType: "string"
required: false
description: "Pagination cursor"
}
-{
name: "history"
dataType: "boolean"
paramType: "query"
fullType: "boolean"
required: false
description: "If set to true then returns DELETED nodes ordered by deletion date (most recently deleted first). Returns non-DELETED nodes if false or not set."
}
-{
name: "kubeId"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Kube ID"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Service name"
}
]
responseType: "cloud.kube.Node[]"
noAuthentication: false
description: "List your nodes"
-iamActions: [
-{
name: "publicCloudProject:apiovh:kube/node/get"
required: true
}
]
}
]
description: "Manage your nodes"
}
-{
path: "/cloud/project/{serviceName}/kube/{kubeId}/node/{nodeId}"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "DELETE"
-parameters: [
-{
name: "kubeId"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Kube ID"
}
-{
name: "nodeId"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Node ID"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Service name"
}
]
responseType: "void"
noAuthentication: false
description: "Delete a specific node on your cluster"
longDescription: "Delete a specific node on your cluster. This will also decrease by one the desirednodes value of its nodepool."
-iamActions: [
-{
name: "publicCloudProject:apiovh:kube/node/delete"
required: true
}
]
}
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "kubeId"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Kube ID"
}
-{
name: "nodeId"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Node ID"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Service name"
}
]
responseType: "cloud.kube.Node"
noAuthentication: false
description: "Get information on a specific node on your cluster"
-iamActions: [
-{
name: "publicCloudProject:apiovh:kube/node/get"
required: true
}
]
}
]
description: "Manage your nodes"
}
-{
path: "/cloud/project/{serviceName}/kube/{kubeId}/nodepool"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "kubeId"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Kube ID"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Service name"
}
]
responseType: "cloud.kube.NodePool[]"
noAuthentication: false
description: "List your nodepools"
-iamActions: [
-{
name: "publicCloudProject:apiovh:kube/nodepool/get"
required: true
}
]
}
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
dataType: "cloud.ProjectKubeNodePoolCreation"
paramType: "body"
fullType: "cloud.ProjectKubeNodePoolCreation"
required: true
description: "Request Body"
}
-{
name: "kubeId"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Kube ID"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Service name"
}
]
responseType: "cloud.kube.NodePool"
noAuthentication: false
description: "Create a nodepool on your cluster"
-iamActions: [
-{
name: "publicCloudProject:apiovh:kube/nodepool/create"
required: true
}
]
}
]
description: "Manage your nodepools"
}
-{
path: "/cloud/project/{serviceName}/kube/{kubeId}/nodepool/{nodePoolId}"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "DELETE"
-parameters: [
-{
name: "kubeId"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Kube ID"
}
-{
name: "nodePoolId"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Node pool ID"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Service name"
}
]
responseType: "void"
noAuthentication: false
description: "Delete a nodepool from your cluster"
-iamActions: [
-{
name: "publicCloudProject:apiovh:kube/nodepool/delete"
required: true
}
]
}
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "kubeId"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Kube ID"
}
-{
name: "nodePoolId"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Node pool ID"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Service name"
}
]
responseType: "cloud.kube.NodePool"
noAuthentication: false
description: "Get information on a specific nodepool on your cluster"
-iamActions: [
-{
name: "publicCloudProject:apiovh:kube/nodepool/get"
required: true
}
]
}
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "PUT"
-parameters: [
-{
dataType: "cloud.ProjectKubeNodePoolUpdate"
paramType: "body"
fullType: "cloud.ProjectKubeNodePoolUpdate"
required: true
description: "Request Body"
}
-{
name: "kubeId"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Kube ID"
}
-{
name: "nodePoolId"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Node pool ID"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Service name"
}
]
responseType: "void"
noAuthentication: false
description: "Update your nodepool information"
-iamActions: [
-{
name: "publicCloudProject:apiovh:kube/nodepool/edit"
required: true
}
]
}
]
description: "Manage your nodepools"
}
-{
path: "/cloud/project/{serviceName}/kube/{kubeId}/nodepool/{nodePoolId}/nodes"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "X-Pagination-Cursor"
dataType: "string"
paramType: "header"
fullType: "string"
required: false
description: "Pagination cursor"
}
-{
name: "history"
dataType: "boolean"
paramType: "query"
fullType: "boolean"
required: false
description: "If set to true then returns DELETED nodes ordered by deletion date (most recently deleted first). Returns non-DELETED nodes if false or not set."
}
-{
name: "kubeId"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Kube ID"
}
-{
name: "nodePoolId"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Node pool ID"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Service name"
}
]
responseType: "cloud.kube.Node[]"
noAuthentication: false
description: "List all nodes contained in a nodepool"
-iamActions: [
-{
name: "publicCloudProject:apiovh:kube/nodepool/nodes/get"
required: true
}
]
}
]
description: "List nodes"
}
-{
path: "/cloud/project/{serviceName}/kube/{kubeId}/openIdConnect"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "DELETE"
-parameters: [
-{
name: "kubeId"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Kube ID"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Service name"
}
]
responseType: "void"
noAuthentication: false
description: "Remove OpenIdConnect integration from APIServer"
-iamActions: [
-{
name: "publicCloudProject:apiovh:kube/openIdConnect/delete"
required: true
}
]
}
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "kubeId"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Kube ID"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Service name"
}
]
responseType: "cloud.kube.OpenIdConnect"
noAuthentication: false
description: "Get openIdConnect integration parameters"
-iamActions: [
-{
name: "publicCloudProject:apiovh:kube/openIdConnect/get"
required: true
}
]
}
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
dataType: "cloud.ProjectKubeOpenIdConnectCreation"
paramType: "body"
fullType: "cloud.ProjectKubeOpenIdConnectCreation"
required: true
description: "Request Body"
}
-{
name: "kubeId"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Kube ID"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Service name"
}
]
responseType: "cloud.kube.OpenIdConnect"
noAuthentication: false
description: "Configure APIServer for OpenIdConnect"
-iamActions: [
-{
name: "publicCloudProject:apiovh:kube/openIdConnect/create"
required: true
}
]
}
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "PUT"
-parameters: [
-{
dataType: "cloud.ProjectKubeOpenIdConnectUpdate"
paramType: "body"
fullType: "cloud.ProjectKubeOpenIdConnectUpdate"
required: true
description: "Request Body"
}
-{
name: "kubeId"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Kube ID"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Service name"
}
]
responseType: "void"
noAuthentication: false
description: "Update parameters and reconfigure APIServer"
-iamActions: [
-{
name: "publicCloudProject:apiovh:kube/openIdConnect/edit"
required: true
}
]
}
]
description: "Manage OpenIdConnect integration with Kube APIServer"
}
-{
path: "/cloud/project/{serviceName}/kube/{kubeId}/privateNetworkConfiguration"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "GET"
-parameters: [
-{
name: "kubeId"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Kube ID"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Service name"
}
]
responseType: "cloud.kube.PrivateNetworkConfiguration"
noAuthentication: false
description: "Get private network configuration"
-iamActions: [
-{
name: "publicCloudProject:apiovh:kube/privateNetworkConfiguration/get"
required: true
}
]
}
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "PUT"
-parameters: [
-{
dataType: "cloud.kube.PrivateNetworkConfiguration"
paramType: "body"
fullType: "cloud.kube.PrivateNetworkConfiguration"
required: true
description: "Request Body"
}
-{
name: "kubeId"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Kube ID"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Service name"
}
]
responseType: "cloud.kube.ResponseMessage"
noAuthentication: false
description: "Update private network configuration"
-iamActions: [
-{
name: "publicCloudProject:apiovh:kube/privateNetworkConfiguration/edit"
required: true
}
]
}
]
description: "Manage the private network configuration"
}
-{
path: "/cloud/project/{serviceName}/kube/{kubeId}/reset"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
dataType: "cloud.ProjectKubeResetCreation"
paramType: "body"
fullType: "cloud.ProjectKubeResetCreation"
required: true
description: "Request Body"
}
-{
name: "kubeId"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Kube ID"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Service name"
}
]
responseType: "void"
noAuthentication: false
description: "Reset cluster: all Kubernetes data will be erased (pods, services, configuration, etc), nodes will be either deleted or reinstalled"
-iamActions: [
-{
name: "publicCloudProject:apiovh:kube/reset"
required: true
}
]
}
]
description: "Reset your cluster"
}
-{
path: "/cloud/project/{serviceName}/kube/{kubeId}/restart"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
dataType: "cloud.ProjectKubeRestart"
paramType: "body"
fullType: "cloud.ProjectKubeRestart"
required: true
description: "Request Body"
}
-{
name: "kubeId"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Kube ID"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Service name"
}
]
responseType: "void"
noAuthentication: false
description: "Restarting your control plane apiserver to invalidate cache without downtime (using force will create a slight downtime)"
-iamActions: [
-{
name: "publicCloudProject:apiovh:kube/restart"
required: true
}
]
}
]
description: "Restart your cluster control plane"
}
-{
path: "/cloud/project/{serviceName}/kube/{kubeId}/update"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "POST"
-parameters: [
-{
dataType: "cloud.ProjectKubeUpdateCreation"
paramType: "body"
fullType: "cloud.ProjectKubeUpdateCreation"
required: true
description: "Request Body"
}
-{
name: "kubeId"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Kube ID"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Service name"
}
]
responseType: "void"
noAuthentication: false
description: "Force cluster and node update to the latest patch within minor version or next minor version"
-iamActions: [
-{
name: "publicCloudProject:apiovh:kube/update"
required: true
}
]
}
]
description: "Update cluster"
}
-{
path: "/cloud/project/{serviceName}/kube/{kubeId}/updateLoadBalancersSubnetId"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "PUT"
-parameters: [
-{
dataType: "cloud.ProjectKubeUpdateLoadBalancersSubnetId"
paramType: "body"
fullType: "cloud.ProjectKubeUpdateLoadBalancersSubnetId"
required: true
description: "Request Body"
}
-{
name: "kubeId"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Kube ID"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Service name"
}
]
responseType: "void"
noAuthentication: false
description: "Updates the load balancers subnet ID"
-iamActions: [
-{
name: "publicCloudProject:apiovh:kube/updateLoadBalancersSubnetId"
required: true
}
]
}
]
description: "Updates the load balancers subnet ID"
}
-{
path: "/cloud/project/{serviceName}/kube/{kubeId}/updatePolicy"
-operations: [
-{
-apiStatus: {
description: "Stable production version"
value: "PRODUCTION"
}
httpMethod: "PUT"
-parameters: [
-{
dataType: "cloud.ProjectKubeUpdatePolicyUpdate"
paramType: "body"
fullType: "cloud.ProjectKubeUpdatePolicyUpdate"
required: true
description: "Request Body"
}
-{
name: "kubeId"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Kube ID"
}
-{
name: "serviceName"
dataType: "string"
paramType: "path"
fullType: "string"
required: true
description: "Service name"
}
]
responseType: "void"
noAuthentication: false
description: "Change the update policy of your cluster"
-iamActions: [
-{
name: "publicCloudProject:apiovh:kube/updatePolicy"
required: true
}
]
}
]
description: "Manage the update policy of your cluster"
}